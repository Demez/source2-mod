<!-- schema text {7e125a45-3d83-4043-b292-9e24f8ef27b4} generic {198980d8-3a93-4919-b4c6-dd1fb07a3a4b} -->
CHelpData CHelpData_0
{
	CHelpEntry[] m_Entries = 
	[
		CHelpEntry
		{
			string m_Id = "Element.Angles"
			string m_FriendlyName = "Angles"
			string m_TooltipOverride = ""
			string m_HelpText = "Angles"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Angles.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Element.Origin"
			string m_FriendlyName = "Origin"
			string m_TooltipOverride = ""
			string m_HelpText = "Origin"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Origin.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Element.Studiomodel"
			string m_FriendlyName = "Studiomodel"
			string m_TooltipOverride = ""
			string m_HelpText = "Studiomodel"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Studiomodel.model"
			string m_FriendlyName = "World Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Studiomodel.skin"
			string m_FriendlyName = "Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. This is programmatically populated from the model. The FGD data is unused!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Studiomodel.body"
			string m_FriendlyName = "Body"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple bodygroups. Set this to a number other than 0 to use that bodygroup instead of the default."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Studiomodel.disableshadows"
			string m_FriendlyName = "Disable Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to disable dynamic shadows on this entity."
		},
		CHelpEntry
		{
			string m_Id = "Element.BasePlat"
			string m_FriendlyName = "BasePlat"
			string m_TooltipOverride = ""
			string m_HelpText = "BasePlat"
		},
		CHelpEntry
		{
			string m_Id = "Element.Targetname"
			string m_FriendlyName = "Targetname"
			string m_TooltipOverride = ""
			string m_HelpText = "Targetname"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Targetname.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Element.Parentname"
			string m_FriendlyName = "Parentname"
			string m_TooltipOverride = ""
			string m_HelpText = "Parentname"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Parentname.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Parentname.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Parentname.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Parentname.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Parentname.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Element.BaseBrush"
			string m_FriendlyName = "BaseBrush"
			string m_TooltipOverride = ""
			string m_HelpText = "BaseBrush"
		},
		CHelpEntry
		{
			string m_Id = "Element.EnableDisable"
			string m_FriendlyName = "EnableDisable"
			string m_TooltipOverride = ""
			string m_HelpText = "EnableDisable"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.EnableDisable.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.RenderFxChoices"
			string m_FriendlyName = "RenderFxChoices"
			string m_TooltipOverride = ""
			string m_HelpText = "RenderFxChoices"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RenderFxChoices.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.RenderModeChoices"
			string m_FriendlyName = "RenderModeChoices"
			string m_TooltipOverride = ""
			string m_HelpText = "RenderModeChoices"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RenderModeChoices.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Element.Shadow"
			string m_FriendlyName = "Shadow"
			string m_TooltipOverride = ""
			string m_HelpText = "Shadow"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Shadow.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.Glow"
			string m_FriendlyName = "Glow"
			string m_TooltipOverride = ""
			string m_HelpText = "Glow"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Glow.glowstate"
			string m_FriendlyName = "Glow State"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Glow.glowrange"
			string m_FriendlyName = "Glow Range"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow becomes visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Glow.glowrangemin"
			string m_FriendlyName = "Glow Range Min"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow stops being visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Glow.glowcolor"
			string m_FriendlyName = "Glow Color Override (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "Change the render color of the glow."
		},
		CHelpEntry
		{
			string m_Id = "Element.SystemLevelChoice"
			string m_FriendlyName = "SystemLevelChoice"
			string m_TooltipOverride = ""
			string m_HelpText = "SystemLevelChoice"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.SystemLevelChoice.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.SystemLevelChoice.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.SystemLevelChoice.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.SystemLevelChoice.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.SystemLevelChoice.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.RenderFields"
			string m_FriendlyName = "RenderFields"
			string m_TooltipOverride = ""
			string m_HelpText = "RenderFields"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RenderFields.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RenderFields.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RenderFields.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RenderFields.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RenderFields.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RenderFields.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RenderFields.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RenderFields.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RenderFields.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RenderFields.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RenderFields.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RenderFields.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RenderFields.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Element.Inputfilter"
			string m_FriendlyName = "Inputfilter"
			string m_TooltipOverride = ""
			string m_HelpText = "Inputfilter"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Inputfilter.InputFilter"
			string m_FriendlyName = "Input Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to specify which inputs this entity will accept."
		},
		CHelpEntry
		{
			string m_Id = "Element.Global"
			string m_FriendlyName = "Global"
			string m_TooltipOverride = ""
			string m_HelpText = "Global"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Global.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Element.EnvGlobal"
			string m_FriendlyName = "EnvGlobal"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity to control a global game state, with an optional associated counter, that persists across level transitions."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.EnvGlobal.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.EnvGlobal.initialstate"
			string m_FriendlyName = "Initial State"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.EnvGlobal.counter"
			string m_FriendlyName = "Counter"
			string m_TooltipOverride = ""
			string m_HelpText = "An integer counter value associated with this global."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.EnvGlobal.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.DamageFilter"
			string m_FriendlyName = "DamageFilter"
			string m_TooltipOverride = ""
			string m_HelpText = "DamageFilter"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.DamageFilter.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Element.ResponseContext"
			string m_FriendlyName = "ResponseContext"
			string m_TooltipOverride = ""
			string m_HelpText = "ResponseContext"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ResponseContext.ResponseContext"
			string m_FriendlyName = "Response Contexts"
			string m_TooltipOverride = ""
			string m_HelpText = "Response system context(s) for this entity. Format should be: \'key:value,key2:value2,etc\'. When this entity speaks, the list of keys & values will be passed to the response rules system."
		},
		CHelpEntry
		{
			string m_Id = "Element.Breakable"
			string m_FriendlyName = "Breakable"
			string m_TooltipOverride = ""
			string m_HelpText = "Breakable"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Breakable.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Breakable.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Breakable.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Breakable.ExplodeDamage"
			string m_FriendlyName = "Explosion Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \'Explosion Radius\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Breakable.ExplodeRadius"
			string m_FriendlyName = "Explosion Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \'Explosion Damage\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Breakable.PerformanceMode"
			string m_FriendlyName = "Performance Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to limit the amount of gibs produced when this entity breaks, for performance reasons."
		},
		CHelpEntry
		{
			string m_Id = "Element.BreakableBrush"
			string m_FriendlyName = "BreakableBrush"
			string m_TooltipOverride = ""
			string m_HelpText = "BreakableBrush"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.ExplodeDamage"
			string m_FriendlyName = "Explosion Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \'Explosion Radius\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.ExplodeRadius"
			string m_FriendlyName = "Explosion Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \'Explosion Damage\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.PerformanceMode"
			string m_FriendlyName = "Performance Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to limit the amount of gibs produced when this entity breaks, for performance reasons."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.propdata"
			string m_FriendlyName = "Prop Data"
			string m_TooltipOverride = ""
			string m_HelpText = "Set to the best approximation of the size and material of this entity\'s brushes. If set, it will override this entity\'s health and damage taken from various weapons. See the propdata.txt file in the scripts directory of your MOD to get a detailed list of what each entry specifies."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.health"
			string m_FriendlyName = "Strength"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of points of damage to take before breaking. 0 means don\'t break."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.material"
			string m_FriendlyName = "Material Type"
			string m_TooltipOverride = ""
			string m_HelpText = "Set to the material type of the brush. Used to decide what sounds to make when damaged, and what gibs to produce when broken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.explosion"
			string m_FriendlyName = "Gibs Direction"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to decide which direction to throw gibs when broken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.gibdir"
			string m_FriendlyName = "Precise Gib Direction"
			string m_TooltipOverride = ""
			string m_HelpText = "Specifies the direction to throw gibs when this breakable breaks. Be sure to select Use Precise Gib Dir in the Gibs Direction field!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.nodamageforces"
			string m_FriendlyName = "Damaging it Doesn\'t Push It"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to determine whether or not damage should cause the brush to move."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.gibmodel"
			string m_FriendlyName = "Gib Model"
			string m_TooltipOverride = ""
			string m_HelpText = "Used by HL1Port to specify a custom gib model to break into, overriding the \'Material Type\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.spawnobject"
			string m_FriendlyName = "Spawn On Break"
			string m_TooltipOverride = ""
			string m_HelpText = "When broken, an entity of the selected type will be created."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.explodemagnitude"
			string m_FriendlyName = "Explode Magnitude"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableBrush.pressuredelay"
			string m_FriendlyName = "Pressure Delay"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay, in seconds, after \'broken\' by pressure before breaking apart (allows for sound to play before breaking apart)."
		},
		CHelpEntry
		{
			string m_Id = "Element.BreakableProp"
			string m_FriendlyName = "BreakableProp"
			string m_TooltipOverride = ""
			string m_HelpText = "BreakableProp"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableProp.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableProp.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableProp.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableProp.ExplodeDamage"
			string m_FriendlyName = "Explosion Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \'Explosion Radius\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableProp.ExplodeRadius"
			string m_FriendlyName = "Explosion Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \'Explosion Damage\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableProp.PerformanceMode"
			string m_FriendlyName = "Performance Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to limit the amount of gibs produced when this entity breaks, for performance reasons."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableProp.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BreakableProp.pressuredelay"
			string m_FriendlyName = "Pressure Delay"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay, in seconds, after \'broken\' by pressure before breaking apart (allows for sound to play before breaking apart)."
		},
		CHelpEntry
		{
			string m_Id = "Element.BaseNPC"
			string m_FriendlyName = "BaseNPC"
			string m_TooltipOverride = ""
			string m_HelpText = "BaseNPC"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.ResponseContext"
			string m_FriendlyName = "Response Contexts"
			string m_TooltipOverride = ""
			string m_HelpText = "Response system context(s) for this entity. Format should be: \'key:value,key2:value2,etc\'. When this entity speaks, the list of keys & values will be passed to the response rules system."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.target"
			string m_FriendlyName = "Target Path Corner"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, the name of a path corner entity that this NPC will walk to, after spawning."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.squadname"
			string m_FriendlyName = "Squad Name"
			string m_TooltipOverride = ""
			string m_HelpText = "NPCs that are in the same squad (i.e. have matching squad names) will share information about enemies, and will take turns attacking and covering each other."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.hintgroup"
			string m_FriendlyName = "Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Hint groups are used by NPCs to restrict their hint-node searching to a subset of the map\'s hint nodes. Only hint nodes with matching hint group names will be considered by this NPC."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.hintlimiting"
			string m_FriendlyName = "Hint Limit Nav"
			string m_TooltipOverride = ""
			string m_HelpText = "Limits NPC to using specified hint group for navigation requests, but does not limit local navigation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.sleepstate"
			string m_FriendlyName = "Sleep State"
			string m_TooltipOverride = ""
			string m_HelpText = "Holds the NPC in stasis until specified condition. See also \'Wake Radius\' and \'Wake Squad\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.wakeradius"
			string m_FriendlyName = "Wake Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Auto-wake if player within this distance"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.wakesquad"
			string m_FriendlyName = "Wake Squad"
			string m_TooltipOverride = ""
			string m_HelpText = "Wake all of the NPCs squadmates if the NPC is woken"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.enemyfilter"
			string m_FriendlyName = "Enemy Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter by which to filter potential enemies"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.ignoreunseenenemies"
			string m_FriendlyName = "Ignore unseen enemies"
			string m_TooltipOverride = ""
			string m_HelpText = "Prefer visible enemies, regardless of distance or relationship priority"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPC.physdamagescale"
			string m_FriendlyName = "Physics Impact Damage Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales damage energy when this character is hit by a physics object. With a value of 0 the NPC will take no damage from physics."
		},
		CHelpEntry
		{
			string m_Id = "Element.info_npc_spawn_destination"
			string m_FriendlyName = "info_npc_spawn_destination"
			string m_TooltipOverride = ""
			string m_HelpText = "NPC Spawn Destination. (Consult npc_template_maker help for more info)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_npc_spawn_destination.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_npc_spawn_destination.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_npc_spawn_destination.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_npc_spawn_destination.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_npc_spawn_destination.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_npc_spawn_destination.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_npc_spawn_destination.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_npc_spawn_destination.ReuseDelay"
			string m_FriendlyName = "Reuse Delay"
			string m_TooltipOverride = ""
			string m_HelpText = "After an NPC is spawned at this destination, the delay before this destination is eligible for selection again."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_npc_spawn_destination.RenameNPC"
			string m_FriendlyName = "New NPC Name"
			string m_TooltipOverride = ""
			string m_HelpText = "If an NPC spawns at this destination, change that NPC\'s targetname to this."
		},
		CHelpEntry
		{
			string m_Id = "Element.BaseNPCMaker"
			string m_FriendlyName = "BaseNPCMaker"
			string m_TooltipOverride = ""
			string m_HelpText = "BaseNPCMaker"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPCMaker.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPCMaker.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPCMaker.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPCMaker.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPCMaker.MaxNPCCount"
			string m_FriendlyName = "Num. of NPCs"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of NPCs that will spawn before this spawner is exhausted."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPCMaker.SpawnFrequency"
			string m_FriendlyName = "Frequency"
			string m_TooltipOverride = ""
			string m_HelpText = "How often (in seconds) a new NPC will be spawned. If set to -1, a new NPC will be made when the last NPC dies."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseNPCMaker.MaxLiveChildren"
			string m_FriendlyName = "Max Live NPCs"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum number of live children allowed at any one time (new ones will not be made until one dies). If set to -1, no limit is applied."
		},
		CHelpEntry
		{
			string m_Id = "Element.npc_template_maker"
			string m_FriendlyName = "npc_template_maker"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that creates NPCs. The NPCs it creates are clones of a template NPC. NPCs are spawned around this maker\'s origin, or at specified destination points."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_template_maker.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_template_maker.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_template_maker.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_template_maker.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_template_maker.MaxNPCCount"
			string m_FriendlyName = "Num. of NPCs"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of NPCs that will spawn before this spawner is exhausted."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_template_maker.SpawnFrequency"
			string m_FriendlyName = "Frequency"
			string m_TooltipOverride = ""
			string m_HelpText = "How often (in seconds) a new NPC will be spawned. If set to -1, a new NPC will be made when the last NPC dies."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_template_maker.MaxLiveChildren"
			string m_FriendlyName = "Max Live NPCs"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum number of live children allowed at any one time (new ones will not be made until one dies). If set to -1, no limit is applied."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_template_maker.TemplateName"
			string m_FriendlyName = "Name of template NPC"
			string m_TooltipOverride = ""
			string m_HelpText = "Template NPC that this maker should be creating clones of."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_template_maker.Radius"
			string m_FriendlyName = "Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Radius around this maker within which NPCs are to be placed. Spawned NPCs will try and find empty space within this radius to spawn."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_template_maker.DestinationGroup"
			string m_FriendlyName = "Name of Destination Group"
			string m_TooltipOverride = ""
			string m_HelpText = "If you\'d like spawned NPCs to be created at an info_npc_spawn_destination entity, enter the name of that entity here. If you have more than one destination entity by that name, the Destination Criteria will be used to select one from the group."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_template_maker.CriterionVisibility"
			string m_FriendlyName = "Dest. Criterion: Visible to player\?"
			string m_TooltipOverride = ""
			string m_HelpText = "Should the NPC try to spawn at a destination that the player can see\? Only applicable if a Destination Group is being used."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_template_maker.CriterionDistance"
			string m_FriendlyName = "Dest. Criterion: Distance to player\?"
			string m_TooltipOverride = ""
			string m_HelpText = "Should the NPC try to spawn nearest to or farthest from the player\'s current location\? Only applicable if a Destination Group is being used."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_template_maker.MinSpawnDistance"
			string m_FriendlyName = "Minimum spawn distance from player"
			string m_TooltipOverride = ""
			string m_HelpText = "The spawn destination node distance to the player will have to be further or equal than this value."
		},
		CHelpEntry
		{
			string m_Id = "Element.BaseHelicopter"
			string m_FriendlyName = "BaseHelicopter"
			string m_TooltipOverride = ""
			string m_HelpText = "BaseHelicopter"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.ResponseContext"
			string m_FriendlyName = "Response Contexts"
			string m_TooltipOverride = ""
			string m_HelpText = "Response system context(s) for this entity. Format should be: \'key:value,key2:value2,etc\'. When this entity speaks, the list of keys & values will be passed to the response rules system."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.target"
			string m_FriendlyName = "Target path_track"
			string m_TooltipOverride = ""
			string m_HelpText = "(Optional) The name of a path_track entity that this NPC will fly to after spawning."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.squadname"
			string m_FriendlyName = "Squad Name"
			string m_TooltipOverride = ""
			string m_HelpText = "NPCs that are in the same squad (i.e. have matching squad names) will share information about enemies, and will take turns attacking and covering each other."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.hintgroup"
			string m_FriendlyName = "Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Hint groups are used by NPCs to restrict their hint-node searching to a subset of the map\'s hint nodes. Only hint nodes with matching hint group names will be considered by this NPC."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.hintlimiting"
			string m_FriendlyName = "Hint Limit Nav"
			string m_TooltipOverride = ""
			string m_HelpText = "Limits NPC to using specified hint group for navigation requests, but does not limit local navigation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.sleepstate"
			string m_FriendlyName = "Sleep State"
			string m_TooltipOverride = ""
			string m_HelpText = "Holds the NPC in stasis until specified condition. See also \'Wake Radius\' and \'Wake Squad\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.wakeradius"
			string m_FriendlyName = "Wake Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Auto-wake if player within this distance"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.wakesquad"
			string m_FriendlyName = "Wake Squad"
			string m_TooltipOverride = ""
			string m_HelpText = "Wake all of the NPCs squadmates if the NPC is woken"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.enemyfilter"
			string m_FriendlyName = "Enemy Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter by which to filter potential enemies"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.ignoreunseenenemies"
			string m_FriendlyName = "Ignore unseen enemies"
			string m_TooltipOverride = ""
			string m_HelpText = "Prefer visible enemies, regardless of distance or relationship priority"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.physdamagescale"
			string m_FriendlyName = "Physics Impact Damage Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales damage energy when this character is hit by a physics object. With a value of 0 the NPC will take no damage from physics."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseHelicopter.InitialSpeed"
			string m_FriendlyName = "Initial Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "Sets the helicopter\'s desired speed that it should try to reach as soon as it\'s spawned."
		},
		CHelpEntry
		{
			string m_Id = "Element.PlayerClass"
			string m_FriendlyName = "PlayerClass"
			string m_TooltipOverride = ""
			string m_HelpText = "PlayerClass"
		},
		CHelpEntry
		{
			string m_Id = "Element.Light"
			string m_FriendlyName = "light"
			string m_TooltipOverride = ""
			string m_HelpText = "An invisible omnidirectional lightsource."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Light._light"
			string m_FriendlyName = "Brightness"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Light._lightHDR"
			string m_FriendlyName = "BrightnessHDR"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Light._lightscaleHDR"
			string m_FriendlyName = "BrightnessScaleHDR"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount to scale the light by when compiling for HDR."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Light.style"
			string m_FriendlyName = "Appearance"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Light.pattern"
			string m_FriendlyName = "Custom Appearance"
			string m_TooltipOverride = ""
			string m_HelpText = "Set a custom pattern of light brightness for this light. Pattern format is a string of characters, where \'a\' is total darkness, \'z\' fully bright. i.e. \'aaggnnttzz\' would be a steppy fade in from dark to light."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Light._constant_attn"
			string m_FriendlyName = "Constant"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Light._linear_attn"
			string m_FriendlyName = "Linear"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Light._quadratic_attn"
			string m_FriendlyName = "Quadratic"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Light._fifty_percent_distance"
			string m_FriendlyName = "50 percent falloff distance"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which brightness should fall off to 50%. If set, overrides linear constant and quadratic paramaters."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Light._zero_percent_distance"
			string m_FriendlyName = "0 percent falloff distance"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which brightness should fall off to negligible (1/256)%. Must set _fifty_percent_distance to use."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Light._hardfalloff"
			string m_FriendlyName = "hard falloff"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, causes lights to fall to exactly zero beyond the zero percent distance. May cause unrealistic lightijng if not used carefully."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Light._castentityshadow"
			string m_FriendlyName = "Cast entity shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Light._shadoworiginoffset"
			string m_FriendlyName = "Shadow cast offset"
			string m_TooltipOverride = ""
			string m_HelpText = "A world-space offset that gets applied to the light origin when casting entity shadows. Useful for dealing with funny-looking shadows from very low lights: Just offset up the z axis."
		},
		CHelpEntry
		{
			string m_Id = "Element.Node"
			string m_FriendlyName = "Node"
			string m_TooltipOverride = ""
			string m_HelpText = "Node"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Node.nodeid"
			string m_FriendlyName = "Node ID"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.HintNode"
			string m_FriendlyName = "HintNode"
			string m_TooltipOverride = ""
			string m_HelpText = "HintNode"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.HintNode.nodeid"
			string m_FriendlyName = "Node ID"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.HintNode.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.HintNode.hinttype"
			string m_FriendlyName = "Hint"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.HintNode.hintactivity"
			string m_FriendlyName = "Hint Activity"
			string m_TooltipOverride = ""
			string m_HelpText = "Activity associated with this hint node. Various parts of the NPC AI play this activity at times. i.e. Actbusy nodes will play this activity when an NPC acts busy on the node."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.HintNode.nodeFOV"
			string m_FriendlyName = "Node FOV"
			string m_TooltipOverride = ""
			string m_HelpText = "Imagine this node requires that an NPC be in the node\'s field of view in order to use this hint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.HintNode.StartHintDisabled"
			string m_FriendlyName = "Start Hint Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.HintNode.Group"
			string m_FriendlyName = "Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, gives the hint a specific group name.  Useful for hint nodes that need to be logically grouped together. NPCs may also refuse to use hint nodes that don\'t match their hint group."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.HintNode.TargetNode"
			string m_FriendlyName = "Target node"
			string m_TooltipOverride = ""
			string m_HelpText = "The node ID of an associated target node, if any."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.HintNode.radius"
			string m_FriendlyName = "Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "How close an NPC must be to consider this hint. 0 means infinite."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.HintNode.IgnoreFacing"
			string m_FriendlyName = "Ignore Facing"
			string m_TooltipOverride = ""
			string m_HelpText = "Don\'t pay attention to the facing of the node. May not apply to a given hint type."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.HintNode.MinimumState"
			string m_FriendlyName = "Minimum State"
			string m_TooltipOverride = ""
			string m_HelpText = "Require an NPC have a minimum state to use the hint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.HintNode.MaximumState"
			string m_FriendlyName = "Maximum State"
			string m_TooltipOverride = ""
			string m_HelpText = "Require an NPC have a maximum state to use the hint."
		},
		CHelpEntry
		{
			string m_Id = "Element.TriggerOnce"
			string m_FriendlyName = "TriggerOnce"
			string m_TooltipOverride = ""
			string m_HelpText = "TriggerOnce"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TriggerOnce.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TriggerOnce.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TriggerOnce.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TriggerOnce.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TriggerOnce.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TriggerOnce.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TriggerOnce.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TriggerOnce.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TriggerOnce.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TriggerOnce.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TriggerOnce.filtername"
			string m_FriendlyName = "Filter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
		},
		CHelpEntry
		{
			string m_Id = "Element.Trigger"
			string m_FriendlyName = "Trigger"
			string m_TooltipOverride = ""
			string m_HelpText = "Trigger"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trigger.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trigger.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trigger.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trigger.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trigger.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trigger.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trigger.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trigger.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trigger.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trigger.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trigger.filtername"
			string m_FriendlyName = "Filter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
		},
		CHelpEntry
		{
			string m_Id = "Element.worldbase"
			string m_FriendlyName = "worldbase"
			string m_TooltipOverride = ""
			string m_HelpText = "worldbase"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldbase.message"
			string m_FriendlyName = "Map Description / Title"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldbase.skyname"
			string m_FriendlyName = "SkyBox Texture Name"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldbase.chaptertitle"
			string m_FriendlyName = "Chapter Title Message"
			string m_TooltipOverride = ""
			string m_HelpText = "Chapter Title that appears onscreen when this level starts."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldbase.startdark"
			string m_FriendlyName = "Level Fade In"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldbase.gametitle"
			string m_FriendlyName = "Display Game Title"
			string m_TooltipOverride = ""
			string m_HelpText = "Game Title that appears onscreen when this level starts."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldbase.newunit"
			string m_FriendlyName = "New Level Unit"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to clear out savegame data of previous levels to keep the savegame size as small as possible. Only set it to Yes if the player cannot return to any previous levels."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldbase.maxpropscreenwidth"
			string m_FriendlyName = "Start Fade Pixels"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of pixels wide at which all props in the level start to fade (<0 = use fademaxdist). This number is ignored if the prop has a specific fade distance specified."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldbase.minpropscreenwidth"
			string m_FriendlyName = "End Fade Pixels"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum number of pixels wide at which the prop is visible (0 = don\'t fade out). This number is ignored if the prop has a specific fade distance specified."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldbase.detailvbsp"
			string m_FriendlyName = "Detail.vbsp file"
			string m_TooltipOverride = ""
			string m_HelpText = "Detail.vbsp file to use for emitting detail props (found in directory <root>/modname)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldbase.detailmaterial"
			string m_FriendlyName = "Detail material file"
			string m_TooltipOverride = ""
			string m_HelpText = "Material for detail sprites to use for drawing detail props"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldbase.coldworld"
			string m_FriendlyName = "World is cold"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldbase.timeofday"
			string m_FriendlyName = "Time of day"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldbase.startmusictype"
			string m_FriendlyName = "Start Music Type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.worldbase.musicpostfix"
			string m_FriendlyName = "Music Post-Fix String"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.ambient_generic"
			string m_FriendlyName = "ambient_generic"
			string m_TooltipOverride = ""
			string m_HelpText = "Universal ambient sound. Use it to play and control a single sound."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ambient_generic.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ambient_generic.message"
			string m_FriendlyName = "Sound Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the GameSound entry for the sound to play. Also supports direct .wav filenames."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ambient_generic.health"
			string m_FriendlyName = "Volume"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound volume, expressed as a range from 0 to 10, where 10 is the loudest."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ambient_generic.preset"
			string m_FriendlyName = "Dynamic Presets"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ambient_generic.volstart"
			string m_FriendlyName = "Start Volume"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ambient_generic.fadeinsecs"
			string m_FriendlyName = "Fade in time in seconds (0-100)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ambient_generic.fadeoutsecs"
			string m_FriendlyName = "Fade out time in seconds (0-100)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ambient_generic.pitch"
			string m_FriendlyName = "Pitch"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound pitch, expressed as a range from 1 to 255, where 100 is the sound\'s default pitch."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ambient_generic.pitchstart"
			string m_FriendlyName = "Start Pitch"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ambient_generic.spinup"
			string m_FriendlyName = "Spin up time (0-100)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ambient_generic.spindown"
			string m_FriendlyName = "Spin down time (0-100)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ambient_generic.lfotype"
			string m_FriendlyName = "LFO type 0)off 1)sqr 2)tri 3)rnd"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ambient_generic.lforate"
			string m_FriendlyName = "LFO rate (0-1000)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ambient_generic.lfomodpitch"
			string m_FriendlyName = "LFO mod pitch (0-100)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ambient_generic.lfomodvol"
			string m_FriendlyName = "LFO mod vol (0-100)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ambient_generic.cspinup"
			string m_FriendlyName = "Incremental Spinup Count"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ambient_generic.radius"
			string m_FriendlyName = "Max Audible Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which this sound is audible."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ambient_generic.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ambient_generic.SourceEntityName"
			string m_FriendlyName = "SourceEntityName"
			string m_TooltipOverride = ""
			string m_HelpText = "If an entity is specified, sound will come from this named entity instead of the location of ambient_generic."
		},
		CHelpEntry
		{
			string m_Id = "Element.ambient_music"
			string m_FriendlyName = "ambient_music"
			string m_TooltipOverride = ""
			string m_HelpText = "Play L4D specfic music."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ambient_music.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ambient_music.message"
			string m_FriendlyName = "Sound Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the GameSound entry  to play. "
		},
		CHelpEntry
		{
			string m_Id = "Element.sound_mix_layer"
			string m_FriendlyName = "sound_mix_layer"
			string m_TooltipOverride = ""
			string m_HelpText = "Set a mix layer to a specific value."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.sound_mix_layer.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.sound_mix_layer.MixLayerName"
			string m_FriendlyName = "Mix Layer Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the mix layer to be setting the level of."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.sound_mix_layer.Level"
			string m_FriendlyName = "Level"
			string m_TooltipOverride = ""
			string m_HelpText = "Set the Mix Layer Level"
		},
		CHelpEntry
		{
			string m_Id = "Element.func_lod"
			string m_FriendlyName = "func_lod"
			string m_TooltipOverride = ""
			string m_HelpText = "Brush-built model that fades out over a specified distance. Useful for creating world detail that doesn\'t need to be drawn far away, for performance reasons."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_lod.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_lod.DisappearMinDist"
			string m_FriendlyName = "Disappear Min Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which these brushes should starting fade out."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_lod.DisappearMaxDist"
			string m_FriendlyName = "Disappear Max Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which these brushes should be completely faded out."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_lod.Solid"
			string m_FriendlyName = "Solid"
			string m_TooltipOverride = ""
			string m_HelpText = "Set whether or not these brushes should collide with other entities."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_zoom"
			string m_FriendlyName = "env_zoom"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that can be used to control the player\'s FOV. Useful for scenes where the player\'s view is being controlled, or player-usable binoculars/telescopes, etc."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_zoom.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_zoom.Rate"
			string m_FriendlyName = "Seconds to reach target"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time it should take to reach the specified FOV."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_zoom.FOV"
			string m_FriendlyName = "Target FOV"
			string m_TooltipOverride = ""
			string m_HelpText = "FOV that this entity should set the player\'s FOV to when active."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_zoom.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.env_screenoverlay"
			string m_FriendlyName = "env_screenoverlay"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that can display and control a set of screen overlays, to be displayed over the player\'s view. Useful for view effects like drunkenness, or teleporter afterimages, etc."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screenoverlay.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screenoverlay.OverlayName1"
			string m_FriendlyName = "Overlay Name 1"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the first overlay material to display."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screenoverlay.OverlayTime1"
			string m_FriendlyName = "Overlay Duration 1"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time that the first overlay should be displayed for, after which it will begin showing the second overlay."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screenoverlay.OverlayName2"
			string m_FriendlyName = "Overlay Name 2"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the second overlay material to display. If left blank, overlay displaying will finish, and this entity will consider itself done."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screenoverlay.OverlayTime2"
			string m_FriendlyName = "Overlay Duration 2"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time that the second overlay should be displayed for, after which it will begin showing the third overlay."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screenoverlay.OverlayName3"
			string m_FriendlyName = "Overlay Name 3"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the third overlay material to display. If left blank, overlay displaying will finish, and this entity will consider itself done."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screenoverlay.OverlayTime3"
			string m_FriendlyName = "Overlay Duration 3"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time that the third overlay should be displayed for, after which it will begin showing the fourth overlay."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screenoverlay.OverlayName4"
			string m_FriendlyName = "Overlay Name 4"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the fourth overlay material to display. If left blank, overlay displaying will finish, and this entity will consider itself done."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screenoverlay.OverlayTime4"
			string m_FriendlyName = "Overlay Duration 4"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time that the fourth overlay should be displayed for, after which it will begin showing the fifth overlay."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screenoverlay.OverlayName5"
			string m_FriendlyName = "Overlay Name 5"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the fifth overlay material to display. If left blank, overlay displaying will finish, and this entity will consider itself done."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screenoverlay.OverlayTime5"
			string m_FriendlyName = "Overlay Duration 5"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time that the fifth overlay should be displayed for, after which it will begin showing the sixth overlay."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screenoverlay.OverlayName6"
			string m_FriendlyName = "Overlay Name 6"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the sixth overlay material to display. If left blank, overlay displaying will finish, and this entity will consider itself done."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screenoverlay.OverlayTime6"
			string m_FriendlyName = "Overlay Duration 6"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time that the sixth overlay should be displayed for, after which it will begin showing the seventh overlay."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screenoverlay.OverlayName7"
			string m_FriendlyName = "Overlay Name 7"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the seventh overlay material to display. If left blank, overlay displaying will finish, and this entity will consider itself done."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screenoverlay.OverlayTime7"
			string m_FriendlyName = "Overlay Duration 7"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time that the seventh overlay should be displayed for, after which it will begin showing the eighth overlay."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screenoverlay.OverlayName8"
			string m_FriendlyName = "Overlay Name 8"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the eighth overlay material to display. If left blank, overlay displaying will finish, and this entity will consider itself done."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screenoverlay.OverlayTime8"
			string m_FriendlyName = "Overlay Duration 8"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time that the eighth overlay should be displayed for, after which it will begin showing the ninth overlay."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screenoverlay.OverlayName9"
			string m_FriendlyName = "Overlay Name 9"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the ninth overlay material to display. If left blank, overlay displaying will finish, and this entity will consider itself done."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screenoverlay.OverlayTime9"
			string m_FriendlyName = "Overlay Duration 9"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time that the ninth overlay should be displayed for, after which it will begin showing the tenth overlay."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screenoverlay.OverlayName10"
			string m_FriendlyName = "Overlay Name 10"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the tenth overlay material to display. If left blank, overlay displaying will finish, and this entity will consider itself done."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screenoverlay.OverlayTime10"
			string m_FriendlyName = "Overlay Duration 10"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time that the tenth overlay should be displayed for, after which this entity will stop displaying overlays."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_screeneffect"
			string m_FriendlyName = "env_screeneffect"
			string m_TooltipOverride = ""
			string m_HelpText = "Allows screenspace effects to be played on the player\'s view."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screeneffect.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_screeneffect.type"
			string m_FriendlyName = "Effect Type"
			string m_TooltipOverride = ""
			string m_HelpText = "Which effect to use."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_texturetoggle"
			string m_FriendlyName = "env_texturetoggle"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that allows you to change the textures on other brush-built entities."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_texturetoggle.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_texturetoggle.target"
			string m_FriendlyName = "Target Brush(es)."
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.env_splash"
			string m_FriendlyName = "env_splash"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that creates a splash effect at its origin. If the \'find water surface\' spawnflag is set, it will instead trace down below itself to find the water surface on which to create splashes."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_splash.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_splash.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_splash.scale"
			string m_FriendlyName = "Scale of the splash"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_splash.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.env_particlelight"
			string m_FriendlyName = "env_particlelight"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that can be used to light the smoke particles emitted by env_smokestack entities. Does not light any other particle types."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_particlelight.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_particlelight.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_particlelight.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_particlelight.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_particlelight.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_particlelight.Color"
			string m_FriendlyName = "Color"
			string m_TooltipOverride = ""
			string m_HelpText = "Color emitted by this light."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_particlelight.Intensity"
			string m_FriendlyName = "Intensity"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_particlelight.directional"
			string m_FriendlyName = "Directional"
			string m_TooltipOverride = ""
			string m_HelpText = "If this is specified, then this light will use the bump map on the particles. Each particle system can have one ambient and one directional light."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_particlelight.PSName"
			string m_FriendlyName = "Particle System Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "Set this to the name of the env_smokestack that you want this light to affect."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_sun"
			string m_FriendlyName = "env_sun"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity to control & draw a sun effect in the sky."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sun.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sun.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sun.target"
			string m_FriendlyName = "Viewer entity"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of an entity used to determine where the sun is in the skybox. The sun should be lined up on a line from this entity to the env_sun entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sun.use_angles"
			string m_FriendlyName = "UseAngles"
			string m_TooltipOverride = ""
			string m_HelpText = "The old way to orient env_sun is to point it at a target. The new way is to specify the angles. If you use the new way, set this property to YES."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sun.pitch"
			string m_FriendlyName = "Pitch"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sun.rendercolor"
			string m_FriendlyName = "Sun Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sun.overlaycolor"
			string m_FriendlyName = "Overlay Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "A value of 0 0 0 will act the old way."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sun.size"
			string m_FriendlyName = "Size"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sun.overlaysize"
			string m_FriendlyName = "Overlay Size"
			string m_TooltipOverride = ""
			string m_HelpText = "A value of -1 means the overlay will act the old way."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sun.material"
			string m_FriendlyName = "Material Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Material of the inner glow."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sun.overlaymaterial"
			string m_FriendlyName = "Overlay Material Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Material of the overlay glow."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sun.HDRColorScale"
			string m_FriendlyName = "HDR color scale."
			string m_TooltipOverride = ""
			string m_HelpText = "float value to multiply sprite color by when running in HDR mode."
		},
		CHelpEntry
		{
			string m_Id = "Element.game_ragdoll_manager"
			string m_FriendlyName = "game_ragdoll_manager"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity to control the number of ragdolls in the world, for performance reasons."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_ragdoll_manager.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_ragdoll_manager.MaxRagdollCount"
			string m_FriendlyName = "Max Ragdoll Count"
			string m_TooltipOverride = ""
			string m_HelpText = "Sets the max number of ragdolls that can be in the world at a time (if they are flagged to fade). Set to -1 if you want to use the default value (g_ragdoll_maxcount)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_ragdoll_manager.MaxRagdollCountDX8"
			string m_FriendlyName = "Max Ragdoll Count DX8"
			string m_TooltipOverride = ""
			string m_HelpText = "Sets the max number of ragdolls that can be in the world at a time on DX8 hardware (if they are flagged to fade). Set to -1 if you want to use the \'Max Ragdoll Count\' value."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_ragdoll_manager.SaveImportant"
			string m_FriendlyName = "Save Important Ragdolls"
			string m_TooltipOverride = ""
			string m_HelpText = "Should the ragdoll manager make sure ally ragdolls aren\'t deleted\?"
		},
		CHelpEntry
		{
			string m_Id = "Element.game_gib_manager"
			string m_FriendlyName = "game_gib_manager"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity to control the number of gibs in the world, for performance reasons."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_gib_manager.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_gib_manager.maxpieces"
			string m_FriendlyName = "Max Gib Count"
			string m_TooltipOverride = ""
			string m_HelpText = "Sets the max number of gib that can be spawned at a time. (-1=no limit)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_gib_manager.maxpiecesdx8"
			string m_FriendlyName = "Max Gib Count On DX8"
			string m_TooltipOverride = ""
			string m_HelpText = "Sets the max number of gib that can be spawned at a time under DX8. (-1=use Max Gib Count setting)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_gib_manager.allownewgibs"
			string m_FriendlyName = "Allow New Gibs To Spawn"
			string m_TooltipOverride = ""
			string m_HelpText = "If true, when the max gib count is reached, oldest gibs are removed as new gibs spawn. If false, new gibs will not be spawned once the gib limit is reached."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_dof_controller"
			string m_FriendlyName = "env_dof_controller"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that controls the depth of field settings for the player. Depth of field simulates camera blur of out-of-focus regions of the scene."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_dof_controller.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_lightglow"
			string m_FriendlyName = "env_lightglow"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that puts an additive glow in the world, mostly used over light sources."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_lightglow.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_lightglow.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_lightglow.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_lightglow.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_lightglow.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_lightglow.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_lightglow.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_lightglow.rendercolor"
			string m_FriendlyName = "Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_lightglow.VerticalGlowSize"
			string m_FriendlyName = "Vertical Size"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_lightglow.HorizontalGlowSize"
			string m_FriendlyName = "Horizontal Size"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_lightglow.MinDist"
			string m_FriendlyName = "Minimum Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "The distance at which this effect will be fully translucent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_lightglow.MaxDist"
			string m_FriendlyName = "Maximum Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "The distance at which this effect will be at full intensity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_lightglow.OuterMaxDist"
			string m_FriendlyName = "Outer Maximum Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "If larger than the maximum distance, this is the length at which the glow will fade completely out, between the span of the maximum distance and this length."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_lightglow.GlowProxySize"
			string m_FriendlyName = "Glow Proxy Geometry Size"
			string m_TooltipOverride = ""
			string m_HelpText = "Size of the glow to be rendered for visibility testing. Must be larger than the distance from the sprite center to empty space. So if this glow is inside geometry (like a light bulb), set this value to be bigger than the bulb\'s radius. Any time a sphere of this radius would be visible (poking through any nearby geometry), the glow will be rendered."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_lightglow.HDRColorScale"
			string m_FriendlyName = "HDR color scale."
			string m_TooltipOverride = ""
			string m_HelpText = "float value to multiply sprite color by when running in HDR mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_lightglow.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.env_smokestack"
			string m_FriendlyName = "env_smokestack"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that spits out a constant stream of smoke. See particlezoo.vmf for sample usage. You can place up to two env_particlelight entities near the smoke stack to add ambient light to its particles."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.InitialState"
			string m_FriendlyName = "Initial State"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.BaseSpread"
			string m_FriendlyName = "Spread at the base"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of random spread in the origins of the smoke particles when they\'re spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.SpreadSpeed"
			string m_FriendlyName = "Spread Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of random spread in the velocity of the smoke particles after they\'re spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.Speed"
			string m_FriendlyName = "Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "The speed at which the smoke particles move after they\'re spawned."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.StartSize"
			string m_FriendlyName = "Particle start size"
			string m_TooltipOverride = ""
			string m_HelpText = "Size of the smoke particles when they\'re first emitted."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.EndSize"
			string m_FriendlyName = "Particle end size"
			string m_TooltipOverride = ""
			string m_HelpText = "Size of the smoke particles at the point they fade out completely."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.Rate"
			string m_FriendlyName = "Emission rate"
			string m_TooltipOverride = ""
			string m_HelpText = "Rate at which to emit smoke particles (i.e. particles to emit per second)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.JetLength"
			string m_FriendlyName = "Length of smoke trail"
			string m_TooltipOverride = ""
			string m_HelpText = "Length of the smokestack. Lifetime of the smoke particles is derived from this & particle speed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.WindAngle"
			string m_FriendlyName = "Wind X/Y Angle"
			string m_TooltipOverride = ""
			string m_HelpText = "This specifies the wind direction. It is an angle in the XY plane. WindSpeed specifies the strength of the wind."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.WindSpeed"
			string m_FriendlyName = "Wind Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "The strength of the wind."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.SmokeMaterial"
			string m_FriendlyName = "Particle material"
			string m_TooltipOverride = ""
			string m_HelpText = "Material of the smoke particles emitted by this stack."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.twist"
			string m_FriendlyName = "Twist"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount, in degrees per second, that the smoke particles twist around the origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.roll"
			string m_FriendlyName = "Roll Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of roll in degrees per second."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.rendercolor"
			string m_FriendlyName = "Base Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smokestack.renderamt"
			string m_FriendlyName = "Translucency"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.env_fade"
			string m_FriendlyName = "env_fade"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that controls screen fades."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fade.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fade.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fade.duration"
			string m_FriendlyName = "Duration (seconds)"
			string m_TooltipOverride = ""
			string m_HelpText = "The time that it will take to fade the screen in or out."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fade.holdtime"
			string m_FriendlyName = "Hold Fade (seconds)"
			string m_TooltipOverride = ""
			string m_HelpText = "The time to hold the faded in/out state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fade.renderamt"
			string m_FriendlyName = "Fade Alpha"
			string m_TooltipOverride = ""
			string m_HelpText = "Alpha of the fade, where 0 = fully transparent and 255 = fully opaque."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fade.rendercolor"
			string m_FriendlyName = "Fade Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.env_player_surface_trigger"
			string m_FriendlyName = "env_player_surface_trigger"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that monitors the material of the surface the player is standing on, and fires outputs whenever it changes to/from a specific material."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_player_surface_trigger.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_player_surface_trigger.gamematerial"
			string m_FriendlyName = "Game Material to Watch"
			string m_TooltipOverride = ""
			string m_HelpText = "The material to watch. When the player stands on/off this material, this entity\'s outputs will be fired."
		},
		CHelpEntry
		{
			string m_Id = "Element.trigger_tonemap"
			string m_FriendlyName = "trigger_tonemap"
			string m_TooltipOverride = ""
			string m_HelpText = "Changes tonemap controllers for players touching the trigger."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_tonemap.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_tonemap.TonemapName"
			string m_FriendlyName = "Tonemap Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the tonemap controller entity associated with this trigger."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_useableladder"
			string m_FriendlyName = "func_useableladder"
			string m_TooltipOverride = ""
			string m_HelpText = "A Half-Life 2 ladder. Handles player auto mount/unmount, as well as +use to get onto the ladder. \n\nSee also \'info_ladder_dismount\', used to specify ladder auto-dismount points.\n\nNote: This entity is non-functional in Counter-Strike: Source. Use func_ladder instead."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_useableladder.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_useableladder.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_useableladder.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_useableladder.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_useableladder.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_useableladder.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_useableladder.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_useableladder.point0"
			string m_FriendlyName = "Start"
			string m_TooltipOverride = ""
			string m_HelpText = "Ladder end point."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_useableladder.point1"
			string m_FriendlyName = "End"
			string m_TooltipOverride = ""
			string m_HelpText = "Ladder end point."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_useableladder.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_useableladder.ladderSurfaceProperties"
			string m_FriendlyName = "Surface properties (optional)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.func_ladderendpoint"
			string m_FriendlyName = "func_ladderendpoint"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity used to specify the endpoints of a ladder. This entity is functional, but has been replaced by the easier-to-use func_useableladder entity. Left in only for backwards-compatibility!\n\nTo be valid, a full sized player hull traced between the start and end points must not be obstructed at level activation time. The angle determines in which direction the player leaves the ladder if the player presses the +jump button.\n\nNote: This entity is non-functional in Counter-Strike: Source. In CS:S, use func_ladder instead."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_ladderendpoint.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_ladderendpoint.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_ladderendpoint.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_ladderendpoint.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_ladderendpoint.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_ladderendpoint.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_ladderendpoint.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_ladderendpoint.target"
			string m_FriendlyName = "Other"
			string m_TooltipOverride = ""
			string m_HelpText = "A ladder goes between any two func_ladderendpoints pointing at each other."
		},
		CHelpEntry
		{
			string m_Id = "Element.info_ladder_dismount"
			string m_FriendlyName = "info_ladder_dismount"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity to handle endpoints for multiple ladders that are too close to each other."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_ladder_dismount.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_ladder_dismount.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_ladder_dismount.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_ladder_dismount.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_ladder_dismount.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_ladder_dismount.target"
			string m_FriendlyName = "LadderName"
			string m_TooltipOverride = ""
			string m_HelpText = "If multiple ladders are near multiple endpoints, use this to stop them from interfering with each other."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_areaportalwindow"
			string m_FriendlyName = "func_areaportalwindow"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that can be used to optimize the visibility in a map. If you seal off an area with them, when the viewer moves the specified distance away from them, they will go opaque and the parts inside the area will not be drawn. The \'target\' brush model should enclose the func_areaportal window so no parts of it are culled by the window. If you use the optional foreground brush model, then it should enclose the \'target\' brush model."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_areaportalwindow.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_areaportalwindow.target"
			string m_FriendlyName = "Rendered Window"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a brush model to render as the window."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_areaportalwindow.FadeStartDist"
			string m_FriendlyName = "Fade Start Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "When the viewer is closer than this distance, the alpha is set to \'TranslucencyLimit\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_areaportalwindow.FadeDist"
			string m_FriendlyName = "Fade End Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "When the viewer is at this distance, the portal becomes solid and closes off."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_areaportalwindow.TranslucencyLimit"
			string m_FriendlyName = "Translucency limit"
			string m_TooltipOverride = ""
			string m_HelpText = "This value limits the translucency of the bmodel and prevents it from becoming invisible when the viewer is right on top of it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_areaportalwindow.BackgroundBModel"
			string m_FriendlyName = "Foreground bmodel"
			string m_TooltipOverride = ""
			string m_HelpText = "(Optional) brush model that is drawn after the fading brush model. This model should have alpha in its textures so you can see through it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_areaportalwindow.PortalVersion"
			string m_FriendlyName = "Portal Version"
			string m_TooltipOverride = ""
			string m_HelpText = "(Don\'t change). Differentiates between shipping HL2 maps and maps using new engine features."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_wall"
			string m_FriendlyName = "func_wall"
			string m_TooltipOverride = ""
			string m_HelpText = "Legacy support. Use func_brush instead."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_clip_vphysics"
			string m_FriendlyName = "func_clip_vphysics"
			string m_TooltipOverride = ""
			string m_HelpText = "A brush entity that\'s considered solid to vphysics."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_clip_vphysics.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_clip_vphysics.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_clip_vphysics.filtername"
			string m_FriendlyName = "Filter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter to use to see if activator collides with me. See filter_activator_name for more explanation. Allow means \'Allow to Block\' for this entity."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_brush"
			string m_FriendlyName = "func_brush"
			string m_TooltipOverride = ""
			string m_HelpText = "An brush built entity with various features."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.InputFilter"
			string m_FriendlyName = "Input Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to specify which inputs this entity will accept."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.Solidity"
			string m_FriendlyName = "Solidity"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to control the solidity/collision of these brushes."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.excludednpc"
			string m_FriendlyName = "NPC class excluded from collisions"
			string m_TooltipOverride = ""
			string m_HelpText = "If an NPC classname is specified here, NPCs of that type won\'t collide with these brushes. In Episodic, you may also specify an individual entity\'s name."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.invert_exclusion"
			string m_FriendlyName = "Invert NPC class exclusion"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, then the excluded NPC class will consider this brush solid, and all other NPC classes will consider it non-solid."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.solidbsp"
			string m_FriendlyName = "Solid BSP"
			string m_TooltipOverride = ""
			string m_HelpText = "Set this if this brush is in heirarchy with a moving object of some kind, and the player can stand on this brush."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_brush.vrad_brush_cast_shadows"
			string m_FriendlyName = "Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = "Set this if this brush casts lightmap shadows."
		},
		CHelpEntry
		{
			string m_Id = "Element.vgui_screen_base"
			string m_FriendlyName = "vgui_screen_base"
			string m_TooltipOverride = ""
			string m_HelpText = "vgui_screen_base"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen_base.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen_base.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen_base.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen_base.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen_base.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen_base.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen_base.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen_base.panelname"
			string m_FriendlyName = "Panel Name"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen_base.overlaymaterial"
			string m_FriendlyName = "Overlay Material"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of a material to overlay over the top of the VGUI screen. NOTE: This material must write Z for the VGUI screen to work."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen_base.width"
			string m_FriendlyName = "Panel Width in World"
			string m_TooltipOverride = ""
			string m_HelpText = "Width of the panel in units."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen_base.height"
			string m_FriendlyName = "Panel Height in World"
			string m_TooltipOverride = ""
			string m_HelpText = "Height of the panel in units."
		},
		CHelpEntry
		{
			string m_Id = "Element.vgui_screen"
			string m_FriendlyName = "vgui_screen"
			string m_TooltipOverride = ""
			string m_HelpText = "A VGUI screen. Useful for in-world monitors."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen.panelname"
			string m_FriendlyName = "Panel Name"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen.overlaymaterial"
			string m_FriendlyName = "Overlay Material"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of a material to overlay over the top of the VGUI screen. NOTE: This material must write Z for the VGUI screen to work."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen.width"
			string m_FriendlyName = "Panel Width in World"
			string m_TooltipOverride = ""
			string m_HelpText = "Width of the panel in units."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_screen.height"
			string m_FriendlyName = "Panel Height in World"
			string m_TooltipOverride = ""
			string m_HelpText = "Height of the panel in units."
		},
		CHelpEntry
		{
			string m_Id = "Element.vgui_slideshow_display"
			string m_FriendlyName = "vgui_slideshow_display"
			string m_TooltipOverride = ""
			string m_HelpText = "Slideshow Display"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_slideshow_display.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_slideshow_display.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_slideshow_display.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_slideshow_display.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_slideshow_display.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_slideshow_display.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_slideshow_display.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_slideshow_display.displaytext"
			string m_FriendlyName = "Display Text"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_slideshow_display.directory"
			string m_FriendlyName = "Image Directory (materials/vgui/...)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_slideshow_display.minslidetime"
			string m_FriendlyName = "Min Slide Time"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum amount of random time that a slide is displayed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_slideshow_display.maxslidetime"
			string m_FriendlyName = "Max Slide Time"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum amount of random time that a slide is displayed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_slideshow_display.cycletype"
			string m_FriendlyName = "Cycle Type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_slideshow_display.nolistrepeat"
			string m_FriendlyName = "No List Repeat"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_slideshow_display.width"
			string m_FriendlyName = "Panel width"
			string m_TooltipOverride = ""
			string m_HelpText = "Width of the panel in units."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.vgui_slideshow_display.height"
			string m_FriendlyName = "Panel height"
			string m_TooltipOverride = ""
			string m_HelpText = "Height of the panel in units."
		},
		CHelpEntry
		{
			string m_Id = "Element.cycler"
			string m_FriendlyName = "cycler"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity used to display a model for testing purposes. Shooting it with cycle through the model\'s animations."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.model"
			string m_FriendlyName = "Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.skin"
			string m_FriendlyName = "Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. This is programmatically populated from the model. The FGD data is unused!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.testMode"
			string m_FriendlyName = "Test Mode"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.doClientSideAnimation"
			string m_FriendlyName = "Use Client-Side Animation"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.clientSideEntity"
			string m_FriendlyName = "Create Client-Side Entity"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.sequenceName"
			string m_FriendlyName = "Sequence Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Default animation sequence for the model to be playing after spawning."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.sequenceName2"
			string m_FriendlyName = "Sequence Name 2"
			string m_TooltipOverride = ""
			string m_HelpText = "Used by the \'Toggle Base Layer Sequence\' test."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.poseParameterName"
			string m_FriendlyName = "Pose Parameter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Pose parameter to use for various unit tests"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.layerSequence1"
			string m_FriendlyName = "Layer 1 Sequence Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Layer sequence #1 for the Add/Remove Animation Layers test."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.cycler.layerSequence2"
			string m_FriendlyName = "Layer 2 Sequence Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Layer sequence #2 for the Add/Remove Animation Layers test."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_orator"
			string m_FriendlyName = "func_orator"
			string m_TooltipOverride = ""
			string m_HelpText = "A very simple model entity that has animations and response rules."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.model"
			string m_FriendlyName = "World Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.skin"
			string m_FriendlyName = "Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. This is programmatically populated from the model. The FGD data is unused!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.body"
			string m_FriendlyName = "Body"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple bodygroups. Set this to a number other than 0 to use that bodygroup instead of the default."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.disableshadows"
			string m_FriendlyName = "Disable Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to disable dynamic shadows on this entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_orator.maxThenAnyDispatchDist"
			string m_FriendlyName = "Max Followup Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "A \'then ANY\' followup on a response from this orator will dispatch to characters up to this many units away. Leave 0 to mean that even an infinitely distant character may respond."
		},
		CHelpEntry
		{
			string m_Id = "Element.gibshooterbase"
			string m_FriendlyName = "gibshooterbase"
			string m_TooltipOverride = ""
			string m_HelpText = "gibshooterbase"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooterbase.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooterbase.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooterbase.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooterbase.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooterbase.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooterbase.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooterbase.angles"
			string m_FriendlyName = "Gib Direction (Pitch Yaw Roll)"
			string m_TooltipOverride = ""
			string m_HelpText = "The direction the gibs will fly."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooterbase.m_iGibs"
			string m_FriendlyName = "Number of Gibs"
			string m_TooltipOverride = ""
			string m_HelpText = "Total number of gibs to shoot each time it\'s activated."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooterbase.delay"
			string m_FriendlyName = "Delay between shots"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay (in seconds) between shooting each gib. If 0, all gibs shoot at once."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooterbase.gibangles"
			string m_FriendlyName = "Gib Angles (Pitch Yaw Roll)"
			string m_TooltipOverride = ""
			string m_HelpText = "The orientation of the spawned gibs."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooterbase.gibanglevelocity"
			string m_FriendlyName = "Max angular velocity"
			string m_TooltipOverride = ""
			string m_HelpText = "How fast (degrees/sec) the gib pieces should spin. They will spin on x and y axis at between 10% and 100% of this speed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooterbase.m_flVelocity"
			string m_FriendlyName = "Gib Velocity"
			string m_TooltipOverride = ""
			string m_HelpText = "Speed of the fired gibs"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooterbase.m_flVariance"
			string m_FriendlyName = "Course Variance"
			string m_TooltipOverride = ""
			string m_HelpText = "How much variance in the direction gibs are fired."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooterbase.m_flGibLife"
			string m_FriendlyName = "Gib Life"
			string m_TooltipOverride = ""
			string m_HelpText = "Time in seconds for gibs to live +/- 5%"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooterbase.lightingorigin"
			string m_FriendlyName = "Lighting Origin"
			string m_TooltipOverride = ""
			string m_HelpText = "Select an info_lighting to specify a location to sample lighting from for all gibs spawned by this shooter, instead of their own origins."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooterbase.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.env_beam"
			string m_FriendlyName = "env_beam"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that creates a visible beam between two points. The points can be attached to entities to make the beam move around."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.renderamt"
			string m_FriendlyName = "Brightness (1 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.rendercolor"
			string m_FriendlyName = "Beam Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.Radius"
			string m_FriendlyName = "Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "If the \'Random Strike\' spawnflag is set, this radius determines the area within which the endpoints will randomly strike."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.life"
			string m_FriendlyName = "Life (seconds 0 = infinite)"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time before the beam dies. Setting to zero will make the beam stay forever."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.BoltWidth"
			string m_FriendlyName = "Width of beam"
			string m_TooltipOverride = ""
			string m_HelpText = "Pixel width of the beam."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.NoiseAmplitude"
			string m_FriendlyName = "Amount of noise (0-255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of noise in the beam. 0 is a perfectly straight beam."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.texture"
			string m_FriendlyName = "Sprite Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The material used to draw the beam."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.TextureScroll"
			string m_FriendlyName = "Texture Scroll Rate (0-100)"
			string m_TooltipOverride = ""
			string m_HelpText = "Rate at which the beam texture should scroll along the beam."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.framerate"
			string m_FriendlyName = "Frames per 10 seconds"
			string m_TooltipOverride = ""
			string m_HelpText = "Framerate at which the beam texture should animate, if it has multiple frames."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.framestart"
			string m_FriendlyName = "Starting Frame"
			string m_TooltipOverride = ""
			string m_HelpText = "The frame to start the beam texture on."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.StrikeTime"
			string m_FriendlyName = "Strike again time (secs)"
			string m_TooltipOverride = ""
			string m_HelpText = "Refire time between random strikes of the beam. Only used if the \'Random Strike\' spawnflag is set."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.damage"
			string m_FriendlyName = "Damage / second"
			string m_TooltipOverride = ""
			string m_HelpText = "How much damage this beam does per second to things it hits when it is continually on, or instantaneously if it strikes. For continuous damage, the value should be greater than 10 or it may not work."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.LightningStart"
			string m_FriendlyName = "Start Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "Entity that the beam starts at."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.LightningEnd"
			string m_FriendlyName = "Ending Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "Entity that the beam ends at."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.decalname"
			string m_FriendlyName = "Decal Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Decal to be applied at the end of the beam"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.HDRColorScale"
			string m_FriendlyName = "HDR color scale."
			string m_TooltipOverride = ""
			string m_HelpText = "float value to multiply sprite color by when running in HDR mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.TouchType"
			string m_FriendlyName = "Touch Type (tripwire)"
			string m_TooltipOverride = ""
			string m_HelpText = "If you want the beam to fire an output when touched by entities, choose the entity type here."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beam.filtername"
			string m_FriendlyName = "Filter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_beverage"
			string m_FriendlyName = "env_beverage"
			string m_TooltipOverride = ""
			string m_HelpText = "HL1 Legacy: Beverage Dispenser."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beverage.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beverage.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beverage.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beverage.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beverage.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beverage.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beverage.health"
			string m_FriendlyName = "Capacity"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of cans in the dispenser."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_beverage.beveragetype"
			string m_FriendlyName = "Beverage Type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.env_embers"
			string m_FriendlyName = "env_embers"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity used to create a volume in which to spawn fire embers."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_embers.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_embers.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_embers.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_embers.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_embers.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_embers.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_embers.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_embers.particletype"
			string m_FriendlyName = "Ember type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_embers.density"
			string m_FriendlyName = "Density (particles per second)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_embers.lifetime"
			string m_FriendlyName = "Particle Lifetime (seconds)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_embers.speed"
			string m_FriendlyName = "Particle Speed (units per second)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_embers.rendercolor"
			string m_FriendlyName = "Ember Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_embers.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.env_funnel"
			string m_FriendlyName = "env_funnel"
			string m_TooltipOverride = ""
			string m_HelpText = "HL1 Legacy: Large Portal Funnel"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_funnel.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_funnel.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_funnel.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_funnel.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_funnel.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_funnel.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_funnel.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.env_blood"
			string m_FriendlyName = "env_blood"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity used to spawn blood effects."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_blood.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_blood.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_blood.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_blood.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_blood.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_blood.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_blood.spraydir"
			string m_FriendlyName = "Spray Direction (Pitch Yaw Roll)"
			string m_TooltipOverride = ""
			string m_HelpText = "The general direction that the blood should spray and the direction to trace to apply the decal."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_blood.color"
			string m_FriendlyName = "Blood Color"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_blood.amount"
			string m_FriendlyName = "Amount of blood (damage to simulate)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_blood.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.env_bubbles"
			string m_FriendlyName = "env_bubbles"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity used to create a volume in which to spawn bubbles."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_bubbles.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_bubbles.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_bubbles.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_bubbles.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_bubbles.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_bubbles.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_bubbles.density"
			string m_FriendlyName = "Bubble density"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_bubbles.frequency"
			string m_FriendlyName = "Bubble frequency"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_bubbles.current"
			string m_FriendlyName = "Speed of Current"
			string m_TooltipOverride = ""
			string m_HelpText = "The speed of the water current in the volume, used to move the bubbles."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_bubbles.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.env_explosion"
			string m_FriendlyName = "env_explosion"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that creates an explosion at its origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_explosion.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_explosion.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_explosion.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_explosion.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_explosion.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_explosion.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_explosion.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_explosion.iMagnitude"
			string m_FriendlyName = "Magnitude"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of damage done by the explosion."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_explosion.iRadiusOverride"
			string m_FriendlyName = "Radius Override"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, the radius in which the explosion damages entities. If unspecified, the radius will be based on the magnitude."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_explosion.fireballsprite"
			string m_FriendlyName = "Fireball Sprite"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_explosion.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_explosion.ignoredEntity"
			string m_FriendlyName = "Ignored Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "Do not harm or affect the named entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_explosion.ignoredClass"
			string m_FriendlyName = "Ignored Class"
			string m_TooltipOverride = ""
			string m_HelpText = "Do not harm or affect this class."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_smoketrail"
			string m_FriendlyName = "env_smoketrail"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that creates a smoke trail."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smoketrail.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smoketrail.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smoketrail.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smoketrail.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smoketrail.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smoketrail.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smoketrail.opacity"
			string m_FriendlyName = "Sprite Opacity"
			string m_TooltipOverride = ""
			string m_HelpText = "Opacity of the sprites (range from 0 - 1)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smoketrail.spawnrate"
			string m_FriendlyName = "Spawn Rate"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of particles to emit each second."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smoketrail.lifetime"
			string m_FriendlyName = "Particle Life Time"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of seconds until each particle dies."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smoketrail.startcolor"
			string m_FriendlyName = "Start Color"
			string m_TooltipOverride = ""
			string m_HelpText = "Starting color of the emitted particles."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smoketrail.endcolor"
			string m_FriendlyName = "End Color"
			string m_TooltipOverride = ""
			string m_HelpText = "Ending color of the emitted particles."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smoketrail.emittime"
			string m_FriendlyName = "Emitter Life Time"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of seconds until the env_smoketrail stops emitting particles. 0 means never stop emitting particles."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smoketrail.minspeed"
			string m_FriendlyName = "Minimum Random Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum randomly-directed speed to use for emitted particles."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smoketrail.maxspeed"
			string m_FriendlyName = "Maximum Random Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum randomly-directed speed to use for emitted particles."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smoketrail.mindirectedspeed"
			string m_FriendlyName = "Minimum Directed Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum speed along the env_smoketrail\'s forward direction (x axis) to use for emitted particles."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smoketrail.maxdirectedspeed"
			string m_FriendlyName = "Maximum Directed Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum speed along the env_smoketrail\'s forward direction (x axis) to use for emitted particles."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smoketrail.startsize"
			string m_FriendlyName = "Starting particle size"
			string m_TooltipOverride = ""
			string m_HelpText = "Starting particle size."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smoketrail.endsize"
			string m_FriendlyName = "Ending particle size"
			string m_TooltipOverride = ""
			string m_HelpText = "Ending particle size."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smoketrail.spawnradius"
			string m_FriendlyName = "Spawn radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance from env_smoketrail at which particles are emitted."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smoketrail.firesprite"
			string m_FriendlyName = "Fire Sprite"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_smoketrail.smokesprite"
			string m_FriendlyName = "Smoke Puff"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.env_physexplosion"
			string m_FriendlyName = "env_physexplosion"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that creates an explosion at its origin. If the no-damage spawnflag is set, the explosion won\'t be visible, but will apply force to any physics objects within its radius."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physexplosion.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physexplosion.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physexplosion.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physexplosion.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physexplosion.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physexplosion.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physexplosion.magnitude"
			string m_FriendlyName = "Magnitude"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of physics force applied by the explosion."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physexplosion.radius"
			string m_FriendlyName = "Clamp Radius (0 = auto)"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, the radius in which the explosion damages entities. If unspecified, the radius will be based on the magnitude."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physexplosion.targetentityname"
			string m_FriendlyName = "Limit to Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, the explosion will only affect the matching entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physexplosion.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physexplosion.inner_radius"
			string m_FriendlyName = "Inner radius"
			string m_TooltipOverride = ""
			string m_HelpText = "If not zero, the LOS is calculated from a point intersecting this sphere."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_physimpact"
			string m_FriendlyName = "env_physimpact"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that will cause a physics impact on another entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physimpact.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physimpact.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physimpact.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physimpact.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physimpact.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physimpact.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physimpact.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "Direction to project the impact."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physimpact.magnitude"
			string m_FriendlyName = "Magnitude"
			string m_TooltipOverride = ""
			string m_HelpText = "Strength of the impact."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physimpact.distance"
			string m_FriendlyName = "Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "How far to project the impact (if 0 uses a default value)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physimpact.directionentityname"
			string m_FriendlyName = "Point to Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, \'Distance\' and Angle settings are ignored and the direction and distance to the target entity will be used."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_physimpact.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.env_fire"
			string m_FriendlyName = "env_fire"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that handles a single flame at its origin. The flame causes heat \'damage\' to other env_fire entities around it, and will eventually ignite non-flaming env_fire entities nearby, causing the fire to spread."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fire.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fire.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fire.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fire.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fire.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fire.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fire.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fire.health"
			string m_FriendlyName = "Duration"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time the fire will burn."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fire.firesize"
			string m_FriendlyName = "Size"
			string m_TooltipOverride = ""
			string m_HelpText = "Height (in world units) of the flame."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fire.fireattack"
			string m_FriendlyName = "Attack"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time the fire takes to grow to full strength."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fire.firetype"
			string m_FriendlyName = "Type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fire.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fire.ignitionpoint"
			string m_FriendlyName = "Ignition Point"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of heat \'damage\' to take before this flame should ignite."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fire.damagescale"
			string m_FriendlyName = "Damage Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Multiplier of the burn damage done by the flame."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_firesource"
			string m_FriendlyName = "env_firesource"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that provides heat to all nearby env_fire entities. Cannot be extinguished."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_firesource.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_firesource.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_firesource.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_firesource.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_firesource.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_firesource.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_firesource.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_firesource.fireradius"
			string m_FriendlyName = "Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "The radius around this entity in which to provide heat."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_firesource.firedamage"
			string m_FriendlyName = "Intensity / Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of heat \'damage\' to apply to env_fire entities within the radius."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_firesensor"
			string m_FriendlyName = "env_firesensor"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that detects changes in heat nearby."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_firesensor.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_firesensor.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_firesensor.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_firesensor.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_firesensor.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_firesensor.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_firesensor.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_firesensor.fireradius"
			string m_FriendlyName = "Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "The radius around this entity in which to detect heat changes."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_firesensor.heatlevel"
			string m_FriendlyName = "Heat level"
			string m_TooltipOverride = ""
			string m_HelpText = "The target heat level to check for. Outputs are fired when the heat moves over this target level (increasing or decreasing)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_firesensor.heattime"
			string m_FriendlyName = "Time at level"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of time the heat level must spend over the target level before the \'OnHeatLevelStart\' output is fired."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_entity_igniter"
			string m_FriendlyName = "env_entity_igniter"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that catches a target entity on fire. If the entity is an animating model, it will have sprite flames attached to its skeleton. Otherwise the entity will emit particle flame puffs."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_entity_igniter.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_entity_igniter.target"
			string m_FriendlyName = "Entity to ignite"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the entity to catch on fire."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_entity_igniter.lifetime"
			string m_FriendlyName = "Lifetime in seconds"
			string m_TooltipOverride = ""
			string m_HelpText = "Duration of flames."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_fog_controller"
			string m_FriendlyName = "env_fog_controller"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that controls the fog and view distance in the map."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fog_controller.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fog_controller.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fog_controller.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fog_controller.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fog_controller.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fog_controller.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fog_controller.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fog_controller.fogenable"
			string m_FriendlyName = "Fog Enable"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fog_controller.fogblend"
			string m_FriendlyName = "Fog Blend"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fog_controller.use_angles"
			string m_FriendlyName = "Use Angles for Fog Dir"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fog_controller.fogcolor"
			string m_FriendlyName = "Primary Fog Color"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fog_controller.fogcolor2"
			string m_FriendlyName = "Secondary Fog Color"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fog_controller.fogdir"
			string m_FriendlyName = "Primary Fog Direction"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fog_controller.fogstart"
			string m_FriendlyName = "Fog Start"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fog_controller.fogend"
			string m_FriendlyName = "Fog End"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fog_controller.fogmaxdensity"
			string m_FriendlyName = "Fog Max Density [0..1]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fog_controller.fogexponent"
			string m_FriendlyName = "Fog Exponent [0..1]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fog_controller.foglerptime"
			string m_FriendlyName = "Interpolate time"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fog_controller.farz"
			string m_FriendlyName = "Far Z Clip Plane"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fog_controller.HDRColorScale"
			string m_FriendlyName = "HDR color scale."
			string m_TooltipOverride = ""
			string m_HelpText = "float value to multiply fog color by when running in HDR mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_fog_controller.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.postprocess_controller"
			string m_FriendlyName = "postprocess_controller"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that controls the postprocess settings in the map."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.postprocess_controller.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.postprocess_controller.localcontraststrength"
			string m_FriendlyName = "Local contrast strength [-1..x]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.postprocess_controller.localcontrastedgestrength"
			string m_FriendlyName = "Local contrast edge strength [0..1]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.postprocess_controller.vignettestart"
			string m_FriendlyName = "Vignette start distance [0..1]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.postprocess_controller.vignetteend"
			string m_FriendlyName = "Vignette end distance [0..x]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.postprocess_controller.vignetteblurstrength"
			string m_FriendlyName = "Vignette blur strength [0..1]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.postprocess_controller.grainstrength"
			string m_FriendlyName = "Film grain strength [0..1]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.postprocess_controller.topvignettestrength"
			string m_FriendlyName = "Top-of-screen vignette strength [0..1]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.postprocess_controller.fadetime"
			string m_FriendlyName = "Fade-in time"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.postprocess_controller.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.env_steam"
			string m_FriendlyName = "env_steam"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity used to create a jet of steam."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_steam.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_steam.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_steam.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_steam.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_steam.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_steam.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_steam.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_steam.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_steam.InitialState"
			string m_FriendlyName = "Initial State"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_steam.type"
			string m_FriendlyName = "Particle Type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_steam.SpreadSpeed"
			string m_FriendlyName = "Spread Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of random spread in the particle\'s velocity after they spawn."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_steam.Speed"
			string m_FriendlyName = "Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "The default speed at which the particles move after they spawn."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_steam.StartSize"
			string m_FriendlyName = "Particle start size"
			string m_TooltipOverride = ""
			string m_HelpText = "The initial size of the particles after they spawn."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_steam.EndSize"
			string m_FriendlyName = "Particle end size"
			string m_TooltipOverride = ""
			string m_HelpText = "The size of the particles at the point at which they are removed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_steam.Rate"
			string m_FriendlyName = "Emission rate"
			string m_TooltipOverride = ""
			string m_HelpText = "The rate of particle emission. i.e. particles per second."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_steam.rendercolor"
			string m_FriendlyName = "Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_steam.JetLength"
			string m_FriendlyName = "Length of steam jet"
			string m_TooltipOverride = ""
			string m_HelpText = "The length of the jet determines the lifetime of each particle."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_steam.renderamt"
			string m_FriendlyName = "Translucency"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_steam.rollspeed"
			string m_FriendlyName = "How fast does the particles spin"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_steam.StartNoise"
			string m_FriendlyName = "Start Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound to play when starting emission."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_laser"
			string m_FriendlyName = "env_laser"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that creates a laser beam between itself and a given target."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_laser.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_laser.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_laser.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_laser.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_laser.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_laser.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_laser.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_laser.LaserTarget"
			string m_FriendlyName = "Target of Laser"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of entity, or entities, to strike at. The target is randomly chosen if there are multiple entities matching the given name."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_laser.renderamt"
			string m_FriendlyName = "Brightness (1 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_laser.rendercolor"
			string m_FriendlyName = "Beam Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_laser.width"
			string m_FriendlyName = "Width of Beam"
			string m_TooltipOverride = ""
			string m_HelpText = "The width of the laser beam, in pixels."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_laser.NoiseAmplitude"
			string m_FriendlyName = "Amount of noise (0-255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of noise in the beam. 0 is a perfectly straight beam."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_laser.texture"
			string m_FriendlyName = "Sprite Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The material used to draw the laser beam."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_laser.EndSprite"
			string m_FriendlyName = "End Sprite"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, this sprite will be drawn at the end of the laser beam."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_laser.TextureScroll"
			string m_FriendlyName = "Texture Scroll Rate (0-100)"
			string m_TooltipOverride = ""
			string m_HelpText = "Rate at which the beam texture should scroll along the beam."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_laser.framestart"
			string m_FriendlyName = "Starting Frame"
			string m_TooltipOverride = ""
			string m_HelpText = "The frame to start the beam texture on."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_laser.damage"
			string m_FriendlyName = "Damage / second"
			string m_TooltipOverride = ""
			string m_HelpText = "How much damage this laser does. per second. to things it hits."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_laser.dissolvetype"
			string m_FriendlyName = "Dissolve Type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_laser.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.env_message"
			string m_FriendlyName = "env_message"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that draws a text message on player\'s HUDs."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_message.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_message.message"
			string m_FriendlyName = "Message Text"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_message.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_message.messagesound"
			string m_FriendlyName = "Sound Effect"
			string m_TooltipOverride = ""
			string m_HelpText = "When the message is shown, this sound effect will be played, originating from this entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_message.messagevolume"
			string m_FriendlyName = "Volume 0-10"
			string m_TooltipOverride = ""
			string m_HelpText = "Volume of the sound effect."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_message.messageattenuation"
			string m_FriendlyName = "Sound Radius"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.env_hudhint"
			string m_FriendlyName = "env_hudhint"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity to control the display of HUD hints. HUD hints are used to show the player what key is bound to a particular command."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_hudhint.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_hudhint.message"
			string m_FriendlyName = "Hint Text (localized)"
			string m_TooltipOverride = ""
			string m_HelpText = "This should be set to match the desired HUD hint entry in the hl2resourcevalve_english.txt."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_shake"
			string m_FriendlyName = "env_shake"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity to control screen shake on players."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shake.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shake.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shake.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shake.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shake.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shake.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shake.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shake.amplitude"
			string m_FriendlyName = "Amplitude (0-16)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of noise in the screen shake. Should be a range between 0 and 16."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shake.radius"
			string m_FriendlyName = "Effect Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "The radius around this entity in which to affect players."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shake.duration"
			string m_FriendlyName = "Duration (seconds)"
			string m_TooltipOverride = ""
			string m_HelpText = "The length of time in which to shake the player\'s screens."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shake.frequency"
			string m_FriendlyName = "Frequency"
			string m_TooltipOverride = ""
			string m_HelpText = "The frequency used to apply the screen shake. Should be a value between 0 and 255, where 0.1 = jerk, and 255.0 = rumble."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_viewpunch"
			string m_FriendlyName = "env_viewpunch"
			string m_TooltipOverride = ""
			string m_HelpText = "Causes a view punch on players."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_viewpunch.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_viewpunch.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_viewpunch.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_viewpunch.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_viewpunch.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_viewpunch.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_viewpunch.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_viewpunch.punchangle"
			string m_FriendlyName = "Punch angles"
			string m_TooltipOverride = ""
			string m_HelpText = "The punch angles to apply."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_viewpunch.radius"
			string m_FriendlyName = "Effect Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "The radius around this entity in which to affect players."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_rotorwash_emitter"
			string m_FriendlyName = "env_rotorwash_emitter"
			string m_TooltipOverride = ""
			string m_HelpText = "Creates rotorwash."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorwash_emitter.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorwash_emitter.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorwash_emitter.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorwash_emitter.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorwash_emitter.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorwash_emitter.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorwash_emitter.altitude"
			string m_FriendlyName = "Altitude"
			string m_TooltipOverride = ""
			string m_HelpText = "Altitude the rotorwash will show up."
		},
		CHelpEntry
		{
			string m_Id = "Element.gibshooter"
			string m_FriendlyName = "gibshooter"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that shoots out gibs. Style of body part depends on language type."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooter.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooter.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooter.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooter.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooter.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooter.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooter.angles"
			string m_FriendlyName = "Gib Direction (Pitch Yaw Roll)"
			string m_TooltipOverride = ""
			string m_HelpText = "The direction the gibs will fly."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooter.m_iGibs"
			string m_FriendlyName = "Number of Gibs"
			string m_TooltipOverride = ""
			string m_HelpText = "Total number of gibs to shoot each time it\'s activated."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooter.delay"
			string m_FriendlyName = "Delay between shots"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay (in seconds) between shooting each gib. If 0, all gibs shoot at once."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooter.gibangles"
			string m_FriendlyName = "Gib Angles (Pitch Yaw Roll)"
			string m_TooltipOverride = ""
			string m_HelpText = "The orientation of the spawned gibs."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooter.gibanglevelocity"
			string m_FriendlyName = "Max angular velocity"
			string m_TooltipOverride = ""
			string m_HelpText = "How fast (degrees/sec) the gib pieces should spin. They will spin on x and y axis at between 10% and 100% of this speed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooter.m_flVelocity"
			string m_FriendlyName = "Gib Velocity"
			string m_TooltipOverride = ""
			string m_HelpText = "Speed of the fired gibs"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooter.m_flVariance"
			string m_FriendlyName = "Course Variance"
			string m_TooltipOverride = ""
			string m_HelpText = "How much variance in the direction gibs are fired."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooter.m_flGibLife"
			string m_FriendlyName = "Gib Life"
			string m_TooltipOverride = ""
			string m_HelpText = "Time in seconds for gibs to live +/- 5%"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooter.lightingorigin"
			string m_FriendlyName = "Lighting Origin"
			string m_TooltipOverride = ""
			string m_HelpText = "Select an info_lighting to specify a location to sample lighting from for all gibs spawned by this shooter, instead of their own origins."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.gibshooter.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.env_shooter"
			string m_FriendlyName = "env_shooter"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that shoots models, or sprites, out of its origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.angles"
			string m_FriendlyName = "Gib Direction (Pitch Yaw Roll)"
			string m_TooltipOverride = ""
			string m_HelpText = "The direction the gibs will fly."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.m_iGibs"
			string m_FriendlyName = "Number of Gibs"
			string m_TooltipOverride = ""
			string m_HelpText = "Total number of gibs to shoot each time it\'s activated."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.delay"
			string m_FriendlyName = "Delay between shots"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay (in seconds) between shooting each gib. If 0, all gibs shoot at once."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.gibangles"
			string m_FriendlyName = "Gib Angles (Pitch Yaw Roll)"
			string m_TooltipOverride = ""
			string m_HelpText = "The orientation of the spawned gibs."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.gibanglevelocity"
			string m_FriendlyName = "Max angular velocity"
			string m_TooltipOverride = ""
			string m_HelpText = "How fast (degrees/sec) the gib pieces should spin. They will spin on x and y axis at between 10% and 100% of this speed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.m_flVelocity"
			string m_FriendlyName = "Gib Velocity"
			string m_TooltipOverride = ""
			string m_HelpText = "Speed of the fired gibs"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.m_flVariance"
			string m_FriendlyName = "Course Variance"
			string m_TooltipOverride = ""
			string m_HelpText = "How much variance in the direction gibs are fired."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.m_flGibLife"
			string m_FriendlyName = "Gib Life"
			string m_TooltipOverride = ""
			string m_HelpText = "Time in seconds for gibs to live +/- 5%"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.lightingorigin"
			string m_FriendlyName = "Lighting Origin"
			string m_TooltipOverride = ""
			string m_HelpText = "Select an info_lighting to specify a location to sample lighting from for all gibs spawned by this shooter, instead of their own origins."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.shootmodel"
			string m_FriendlyName = "Model"
			string m_TooltipOverride = ""
			string m_HelpText = "Thing to shoot out. Can be a .vmdl or a .vmt."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.shootsounds"
			string m_FriendlyName = "Material Sound"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.simulation"
			string m_FriendlyName = "Simulate"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.skin"
			string m_FriendlyName = "Gib Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. Set this to a number other than 0 to use that skin on all gibs produced by this shooter."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.nogibshadows"
			string m_FriendlyName = "Disable Shadows on Gibs"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.gibgravityscale"
			string m_FriendlyName = "Gib gravity scale"
			string m_TooltipOverride = ""
			string m_HelpText = "ONLY WORKS FOR POINT GIBS. This field allows you to scale gravity so that gibs fall faster, slower, or not at all."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_shooter.massoverride"
			string m_FriendlyName = "Mass override"
			string m_TooltipOverride = ""
			string m_HelpText = "EPISODIC ONLY. Specify an arbitrary mass for the gibs emitted by me."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_rotorshooter"
			string m_FriendlyName = "env_rotorshooter"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that creates gibs when it\'s within the influence of a helicopter\'s rotor wash."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.angles"
			string m_FriendlyName = "Gib Direction (Pitch Yaw Roll)"
			string m_TooltipOverride = ""
			string m_HelpText = "The direction the gibs will fly."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.m_iGibs"
			string m_FriendlyName = "Number of Gibs"
			string m_TooltipOverride = ""
			string m_HelpText = "Total number of gibs to shoot each time it\'s activated."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.delay"
			string m_FriendlyName = "Delay between shots"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay (in seconds) between shooting each gib. If 0, all gibs shoot at once."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.gibangles"
			string m_FriendlyName = "Gib Angles (Pitch Yaw Roll)"
			string m_TooltipOverride = ""
			string m_HelpText = "The orientation of the spawned gibs."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.gibanglevelocity"
			string m_FriendlyName = "Max angular velocity"
			string m_TooltipOverride = ""
			string m_HelpText = "How fast (degrees/sec) the gib pieces should spin. They will spin on x and y axis at between 10% and 100% of this speed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.m_flVelocity"
			string m_FriendlyName = "Gib Velocity"
			string m_TooltipOverride = ""
			string m_HelpText = "Speed of the fired gibs"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.m_flVariance"
			string m_FriendlyName = "Course Variance"
			string m_TooltipOverride = ""
			string m_HelpText = "How much variance in the direction gibs are fired."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.m_flGibLife"
			string m_FriendlyName = "Gib Life"
			string m_TooltipOverride = ""
			string m_HelpText = "Time in seconds for gibs to live +/- 5%"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.lightingorigin"
			string m_FriendlyName = "Lighting Origin"
			string m_TooltipOverride = ""
			string m_HelpText = "Select an info_lighting to specify a location to sample lighting from for all gibs spawned by this shooter, instead of their own origins."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.shootmodel"
			string m_FriendlyName = "Model"
			string m_TooltipOverride = ""
			string m_HelpText = "Thing to shoot out.  Can be a .vmdl or a .vmt."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.shootsounds"
			string m_FriendlyName = "Material Sound"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.simulation"
			string m_FriendlyName = "Simulate"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.skin"
			string m_FriendlyName = "Gib Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. Set this to a number other than 0 to use that skin on all gibs produced by this shooter."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.rotortime"
			string m_FriendlyName = "Time Under Rotor"
			string m_TooltipOverride = ""
			string m_HelpText = "The average time it has to be under the rotor before it shoots a gib."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_rotorshooter.rotortimevariance"
			string m_FriendlyName = "Time variance"
			string m_TooltipOverride = ""
			string m_HelpText = "The random amount to vary the time it has to be under the rotor before it shoots a gib."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_soundscape_proxy"
			string m_FriendlyName = "env_soundscape_proxy"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that acts like a soundscape but gets all of its sound parameters from another env_soundscape entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_proxy.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_proxy.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_proxy.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_proxy.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_proxy.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_proxy.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_proxy.MainSoundscapeName"
			string m_FriendlyName = "Soundscape Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "The soundscape to get all sound parameters from."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_proxy.radius"
			string m_FriendlyName = "Radius"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.env_soundscape"
			string m_FriendlyName = "env_soundscape"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity to control sound in an area. The active soundscape at any time is the last one that had line-of-sight to the player, and was within the radius."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape.radius"
			string m_FriendlyName = "Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "If set to -1, then the player can hear the soundscape as long as he can see it (regardless of distance to it)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape.soundscape"
			string m_FriendlyName = "Soundscape"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the soundscape to use. Corresponds to an entry in the soundscapes*.txt file in the scripts directory."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape.position0"
			string m_FriendlyName = "Sound Position 0"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape.position1"
			string m_FriendlyName = "Sound Position 1"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape.position2"
			string m_FriendlyName = "Sound Position 2"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape.position3"
			string m_FriendlyName = "Sound Position 3"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape.position4"
			string m_FriendlyName = "Sound Position 4"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape.position5"
			string m_FriendlyName = "Sound Position 5"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape.position6"
			string m_FriendlyName = "Sound Position 6"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape.position7"
			string m_FriendlyName = "Sound Position 7"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_soundscape_triggerable"
			string m_FriendlyName = "env_soundscape_triggerable"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that works like env_soundscape except that it works in conjunction with trigger_soundscape to determine when a player hears it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_triggerable.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_triggerable.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_triggerable.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_triggerable.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_triggerable.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_triggerable.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_triggerable.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_triggerable.radius"
			string m_FriendlyName = "Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "If set to -1, then the player can hear the soundscape as long as he can see it (regardless of distance to it)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_triggerable.soundscape"
			string m_FriendlyName = "Soundscape"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the soundscape to use. Corresponds to an entry in the soundscapes*.txt file in the scripts directory."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_triggerable.position0"
			string m_FriendlyName = "Sound Position 0"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_triggerable.position1"
			string m_FriendlyName = "Sound Position 1"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_triggerable.position2"
			string m_FriendlyName = "Sound Position 2"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_triggerable.position3"
			string m_FriendlyName = "Sound Position 3"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_triggerable.position4"
			string m_FriendlyName = "Sound Position 4"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_triggerable.position5"
			string m_FriendlyName = "Sound Position 5"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_triggerable.position6"
			string m_FriendlyName = "Sound Position 6"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_soundscape_triggerable.position7"
			string m_FriendlyName = "Sound Position 7"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_spark"
			string m_FriendlyName = "env_spark"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity used to create sparks at its origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spark.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spark.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spark.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spark.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spark.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spark.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spark.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spark.MaxDelay"
			string m_FriendlyName = "Max Delay"
			string m_TooltipOverride = ""
			string m_HelpText = "The longest delay between sparks (in seconds)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spark.Magnitude"
			string m_FriendlyName = "Magnitude"
			string m_TooltipOverride = ""
			string m_HelpText = "The size of the sparks."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spark.TrailLength"
			string m_FriendlyName = "Spark Trail Length"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spark.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.env_sprite"
			string m_FriendlyName = "env_sprite"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that controls the drawing of a sprite in the world."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.framerate"
			string m_FriendlyName = "Framerate"
			string m_TooltipOverride = ""
			string m_HelpText = "Rate at which the sprite should animate, if at all."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.model"
			string m_FriendlyName = "Sprite Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Material of the sprite to be drawn."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.scale"
			string m_FriendlyName = "Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scale multiplier of the sprite."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.GlowProxySize"
			string m_FriendlyName = "Size of Glow Proxy Geometry."
			string m_TooltipOverride = ""
			string m_HelpText = "Size of the glow to be rendered for visibility testing. Must be larger than the distance from the sprite center to empty space.  So if this glow is inside geometry (like a light bulb), set this value to be bigger than the bulb\'s radius. Any time a sphere of this radius would be visible (poking through any nearby geometry), the glow will be rendered."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite.HDRColorScale"
			string m_FriendlyName = "HDR color scale."
			string m_TooltipOverride = ""
			string m_HelpText = "float value to multiply sprite color by when running in HDR mode."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_sprite_oriented"
			string m_FriendlyName = "env_sprite_oriented"
			string m_TooltipOverride = ""
			string m_HelpText = "A env_sprite that allows orientation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.framerate"
			string m_FriendlyName = "Framerate"
			string m_TooltipOverride = ""
			string m_HelpText = "Rate at which the sprite should animate, if at all."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.model"
			string m_FriendlyName = "Sprite Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Material of the sprite to be drawn."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.scale"
			string m_FriendlyName = "Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scale multiplier of the sprite."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.GlowProxySize"
			string m_FriendlyName = "Size of Glow Proxy Geometry."
			string m_TooltipOverride = ""
			string m_HelpText = "Size of the glow to be rendered for visibility testing. Must be larger than the distance from the sprite center to empty space.  So if this glow is inside geometry (like a light bulb), set this value to be bigger than the bulb\'s radius. Any time a sphere of this radius would be visible (poking through any nearby geometry), the glow will be rendered."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.HDRColorScale"
			string m_FriendlyName = "HDR color scale."
			string m_TooltipOverride = ""
			string m_HelpText = "float value to multiply sprite color by when running in HDR mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_sprite_oriented.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_wind"
			string m_FriendlyName = "env_wind"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity to control wind in the map. Partially functional."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_wind.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_wind.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_wind.minwind"
			string m_FriendlyName = "Min normal speed"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum speed of the wind while idling."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_wind.maxwind"
			string m_FriendlyName = "Max normal speed"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum speed of the wind while idling."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_wind.windradius"
			string m_FriendlyName = "Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "The radius this entity applies wind effects to.  -1 for global effect, other value to allow multiple or limited wind entities."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_wind.mingust"
			string m_FriendlyName = "Min gust speed"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum speed of wind gusts."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_wind.maxgust"
			string m_FriendlyName = "Max gust speed"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum speed of wind gusts."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_wind.mingustdelay"
			string m_FriendlyName = "Min gust delay"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum time delay between random gusts."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_wind.maxgustdelay"
			string m_FriendlyName = "Max gust delay"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum time delay between random gusts."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_wind.gustduration"
			string m_FriendlyName = "Gust Duration"
			string m_TooltipOverride = ""
			string m_HelpText = "How long will the wind gust for."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_wind.gustdirchange"
			string m_FriendlyName = "Max gust dir change (degrees)"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum amount that the wind\'s direction changes due to a gust."
		},
		CHelpEntry
		{
			string m_Id = "Element.sky_camera"
			string m_FriendlyName = "sky_camera"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity used to control the 3D Skybox. Its origin is used to determine the 3D Skybox\'s position relative to the map. Place this entity, in the 3D Skybox, at the point where the origin of the map should be."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.sky_camera.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.sky_camera.scale"
			string m_FriendlyName = "3D Skybox scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scale of the skybox."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.sky_camera.fogenable"
			string m_FriendlyName = "Fog Enable"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.sky_camera.fogblend"
			string m_FriendlyName = "Fog Blend"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.sky_camera.use_angles"
			string m_FriendlyName = "Use Angles for Fog Dir"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.sky_camera.clip_3D_skybox_near_to_world_far"
			string m_FriendlyName = "Clip 3D sky near plane to world far plane"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.sky_camera.clip_3D_skybox_near_to_world_far_offset"
			string m_FriendlyName = "3D sky near plane offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset for the near clip plane for the 3D sky in world units.  This is only used if the above field is true.  Negative values to pull closer, etc."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.sky_camera.fogcolor"
			string m_FriendlyName = "Primary Fog Color"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.sky_camera.fogcolor2"
			string m_FriendlyName = "Secondary Fog Color"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.sky_camera.fogdir"
			string m_FriendlyName = "Primary Fog Direction"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.sky_camera.fogstart"
			string m_FriendlyName = "Fog Start"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the skybox fog should start."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.sky_camera.fogend"
			string m_FriendlyName = "Fog End"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the skybox fog should be fully opaque."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.sky_camera.fogmaxdensity"
			string m_FriendlyName = "Fog Max Density [0..1]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.sky_camera.HDRColorScale"
			string m_FriendlyName = "HDR color scale."
			string m_TooltipOverride = ""
			string m_HelpText = "float value to multiply fog color by when running in HDR mode."
		},
		CHelpEntry
		{
			string m_Id = "Element.BaseSpeaker"
			string m_FriendlyName = "BaseSpeaker"
			string m_TooltipOverride = ""
			string m_HelpText = "BaseSpeaker"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseSpeaker.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseSpeaker.ResponseContext"
			string m_FriendlyName = "Response Contexts"
			string m_TooltipOverride = ""
			string m_HelpText = "Response system context(s) for this entity. Format should be: \'key:value,key2:value2,etc\'. When this entity speaks, the list of keys & values will be passed to the response rules system."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseSpeaker.delaymin"
			string m_FriendlyName = "Min Delay Between Announcements"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseSpeaker.delaymax"
			string m_FriendlyName = "Max Delay Between Announcements"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseSpeaker.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseSpeaker.rulescript"
			string m_FriendlyName = "Context rule script"
			string m_TooltipOverride = ""
			string m_HelpText = "Script file containing rules for playing appropriate sounds."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseSpeaker.concept"
			string m_FriendlyName = "Concept name"
			string m_TooltipOverride = ""
			string m_HelpText = "High level concept name used as primary search key."
		},
		CHelpEntry
		{
			string m_Id = "Element.game_weapon_manager"
			string m_FriendlyName = "game_weapon_manager"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity used to limit the number of a particular weapon type in the world. Useful in places where NPCs are spawning rapidly, dying, and dropping weapons."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_weapon_manager.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_weapon_manager.weaponname"
			string m_FriendlyName = "Weapon Classname"
			string m_TooltipOverride = ""
			string m_HelpText = "Classname of the weapon type to limit."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_weapon_manager.maxpieces"
			string m_FriendlyName = "Max Allowed in Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The maximum amount of the specified weapon type allowed in the world."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_weapon_manager.ammomod"
			string m_FriendlyName = "Ammo modifier"
			string m_TooltipOverride = ""
			string m_HelpText = "Modifier for ammount of ammo dropped by a weapon."
		},
		CHelpEntry
		{
			string m_Id = "Element.game_end"
			string m_FriendlyName = "game_end"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that ends a multiplayer game."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_end.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_end.master"
			string m_FriendlyName = "Master (Obsolete)"
			string m_TooltipOverride = ""
			string m_HelpText = "Legacy support: The name of a master entity. If the master hasn\'t been activated, this entity will not activate."
		},
		CHelpEntry
		{
			string m_Id = "Element.game_player_equip"
			string m_FriendlyName = "game_player_equip"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that gives equipment to the player who activates it. To use, add new keys to this entity, where each key is the classname of a weapon/item, and the corresponding value is the number of those weapons/items to give to the player who uses this entity. If the \'Use Only\' spawnflag isn\'t set, then players can just touch this entity to get the equipment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_player_equip.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_player_equip.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_player_equip.master"
			string m_FriendlyName = "Team Master (Obsolete)"
			string m_TooltipOverride = ""
			string m_HelpText = "Legacy support: The name of a master entity. If the master hasn\'t been activated, this entity will not activate."
		},
		CHelpEntry
		{
			string m_Id = "Element.game_player_team"
			string m_FriendlyName = "game_player_team"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that changes the team of the player who activates it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_player_team.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_player_team.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_player_team.target"
			string m_FriendlyName = "game_team_master to use"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_player_team.master"
			string m_FriendlyName = "Master (Obsolete)"
			string m_TooltipOverride = ""
			string m_HelpText = "Legacy support: The name of a master entity. If the master hasn\'t been activated, this entity will not activate."
		},
		CHelpEntry
		{
			string m_Id = "Element.game_score"
			string m_FriendlyName = "game_score"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that awards/deducts points from the player who activates it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_score.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_score.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_score.points"
			string m_FriendlyName = "Points to add (+/-)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_score.master"
			string m_FriendlyName = "Master (Obsolete)"
			string m_TooltipOverride = ""
			string m_HelpText = "Legacy support: The name of a master entity. If the master hasn\'t been activated, this entity will not activate."
		},
		CHelpEntry
		{
			string m_Id = "Element.game_text"
			string m_FriendlyName = "game_text"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that displays text on player\'s screens."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_text.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_text.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_text.message"
			string m_FriendlyName = "Message Text"
			string m_TooltipOverride = ""
			string m_HelpText = "Message to display onscreen."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_text.x"
			string m_FriendlyName = "X (0 - 1.0 = left to right) (-1 centers)"
			string m_TooltipOverride = ""
			string m_HelpText = "Horizontal position on the player\'s screens to draw the text. The value should be between 0 and 1, where 0 is the far left of the screen and 1 is the far right. -1 centers the text."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_text.y"
			string m_FriendlyName = "Y (0 - 1.0 = top to bottom) (-1 centers)"
			string m_TooltipOverride = ""
			string m_HelpText = "Vertical position on the player\'s screens to draw the text. The value should be between 0 and 1, where 0 is the top of the screen and 1 is the bottom. -1 centers the text."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_text.effect"
			string m_FriendlyName = "Text Effect"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_text.color"
			string m_FriendlyName = "Color1"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_text.color2"
			string m_FriendlyName = "Color2"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_text.fadein"
			string m_FriendlyName = "Fade in Time (or character scan time)"
			string m_TooltipOverride = ""
			string m_HelpText = "The time it should take for the text to fully fade in."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_text.fadeout"
			string m_FriendlyName = "Fade Out Time"
			string m_TooltipOverride = ""
			string m_HelpText = "The time it should take for the text to fade out, after the hold time has expired."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_text.holdtime"
			string m_FriendlyName = "Hold Time"
			string m_TooltipOverride = ""
			string m_HelpText = "The time the text should stay onscreen, after fading in, before it begins to fade out."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_text.fxtime"
			string m_FriendlyName = "Scan time (scan effect only)"
			string m_TooltipOverride = ""
			string m_HelpText = "If the \'Text Effect\' is set to Scan Out, this is the time it should take to scan out all the letters in the text."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_text.channel"
			string m_FriendlyName = "Text Channel"
			string m_TooltipOverride = ""
			string m_HelpText = "You can have up to four individual game_text messages onscreen at once, stored in channels. Select which channel this text should be placed in, which will overwrite any active message already in that channel."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_text.master"
			string m_FriendlyName = "Master"
			string m_TooltipOverride = ""
			string m_HelpText = "Legacy support: The name of a master entity. If the master hasn\'t been activated, this entity will not activate."
		},
		CHelpEntry
		{
			string m_Id = "Element.point_enable_motion_fixup"
			string m_FriendlyName = "point_enable_motion_fixup"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity used to move a motion-disabled prop when it enables motion. Parent this entity to the prop, and when the prop has its motion enabled, it will immediately teleport to the origin of this entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_enable_motion_fixup.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_enable_motion_fixup.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_enable_motion_fixup.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_enable_motion_fixup.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_enable_motion_fixup.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_enable_motion_fixup.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Element.point_message"
			string m_FriendlyName = "point_message"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that displays a text message in the world, at its origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_message.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_message.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_message.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_message.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_message.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_message.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_message.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_message.message"
			string m_FriendlyName = "Entity Message"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_message.radius"
			string m_FriendlyName = "Show message radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance the player must be within to see this message."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_message.developeronly"
			string m_FriendlyName = "Developer Only\?"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, this message will only be visible when developer mode is on."
		},
		CHelpEntry
		{
			string m_Id = "Element.point_spotlight"
			string m_FriendlyName = "point_spotlight"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity to draw a spotlight. Will draw a beam when the player views it side on, and a halo when it\'s facing towards the player. Unless the \'No Dynamic Light\' spawnflag is checked, it will also create a dynamic light wherever the end of the spotlight rests."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.rendercolor"
			string m_FriendlyName = "Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.spotlightlength"
			string m_FriendlyName = "Spotlight Length"
			string m_TooltipOverride = ""
			string m_HelpText = "Length of the spotlight beam."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.spotlightwidth"
			string m_FriendlyName = "Spotlight Width"
			string m_TooltipOverride = ""
			string m_HelpText = "Width of the spotlight beam."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.HaloScale"
			string m_FriendlyName = "Halo size scale."
			string m_TooltipOverride = ""
			string m_HelpText = "float value to determine the size of the halo."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_spotlight.HDRColorScale"
			string m_FriendlyName = "HDR color scale."
			string m_TooltipOverride = ""
			string m_HelpText = "float value to multiply sprite color by when running in HDR mode."
		},
		CHelpEntry
		{
			string m_Id = "Element.point_tesla"
			string m_FriendlyName = "point_tesla"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that creates tesla lightning arcs around its origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_tesla.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_tesla.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_tesla.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_tesla.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_tesla.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_tesla.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_tesla.m_SourceEntityName"
			string m_FriendlyName = "Source Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, tesla lightning will originate from the specified entity. Otherwise, they originate from this entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_tesla.m_SoundName"
			string m_FriendlyName = "Sound Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound to be played whenever lightning is created."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_tesla.texture"
			string m_FriendlyName = "Sprite Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Material to use for the tesla lightning beams."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_tesla.m_Color"
			string m_FriendlyName = "Color"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_tesla.m_flRadius"
			string m_FriendlyName = "Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Radius around the origin to find a point to strike with a tesla lightning beam."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_tesla.beamcount_min"
			string m_FriendlyName = "Min # of Beams"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum number of tesla lightning beams to create when creating an arc."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_tesla.beamcount_max"
			string m_FriendlyName = "Max # of Beams"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum number of tesla lightning beams to create when creating an arc."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_tesla.thick_min"
			string m_FriendlyName = "Min Beam Width"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum width of the tesla lightning beams."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_tesla.thick_max"
			string m_FriendlyName = "Max Beam Width"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum width of the tesla lightning beams."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_tesla.lifetime_min"
			string m_FriendlyName = "Min Time Visible"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum lifetime of the tesla lightning beams."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_tesla.lifetime_max"
			string m_FriendlyName = "Max Time Visible"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum lifetime of the tesla lightning beams."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_tesla.interval_min"
			string m_FriendlyName = "Min Time Between Arcs"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum time delay between random arcing."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_tesla.interval_max"
			string m_FriendlyName = "Max Time Between Arcs"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum time delay between random arcing."
		},
		CHelpEntry
		{
			string m_Id = "Element.point_clientcommand"
			string m_FriendlyName = "point_clientcommand"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that issues commands to the client console, as if it was typed in by the player (if activator is a player, or the local player in single player)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_clientcommand.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Element.point_servercommand"
			string m_FriendlyName = "point_servercommand"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that issues commands to the server console."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_servercommand.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Element.point_broadcastclientcommand"
			string m_FriendlyName = "point_broadcastclientcommand"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that issues commands to each valid client\'s console, as if it was typed in by that player locally."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_broadcastclientcommand.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Element.point_bonusmaps_accessor"
			string m_FriendlyName = "point_bonusmaps_accessor"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that relays bonus maps changes."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_bonusmaps_accessor.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_bonusmaps_accessor.filename"
			string m_FriendlyName = "File Name"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_bonusmaps_accessor.mapname"
			string m_FriendlyName = "Map Name"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.game_ui"
			string m_FriendlyName = "game_ui"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity used to override player input when the player is looking at it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_ui.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_ui.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_ui.FieldOfView"
			string m_FriendlyName = "FieldOfView"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of tolerance in the view checking when determining whether the player\'s input is still under control. 1.0 = straight ahead, 0.0 = +/- 90 degrees, -1.0 = all directions. If the player isn\'t within the tolerance, the player regains control."
		},
		CHelpEntry
		{
			string m_Id = "Element.point_entity_finder"
			string m_FriendlyName = "point_entity_finder"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that will find an entity and pass it along as the !Caller with the OutEntity output.  Requires using !Caller as the parameter on the input."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_entity_finder.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_entity_finder.filtername"
			string m_FriendlyName = "Filter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter to use to narrow set of findable entities. See filter_activator_name for more explanation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_entity_finder.referencename"
			string m_FriendlyName = "Reference Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the entity to use when evaluating criteria.  For example, when using \'Nearest\', this is the entity that distance will be measured from.  If left blank will use the point_entity_finder."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_entity_finder.Method"
			string m_FriendlyName = "Search Method"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.game_zone_player"
			string m_FriendlyName = "game_zone_player"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity used to count the number of players within a zone."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_zone_player.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_zone_player.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_zone_player.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_zone_player.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_zone_player.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.game_zone_player.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Element.infodecal"
			string m_FriendlyName = "infodecal"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that places a decal on the world. If the decal has no target name, it will immediately apply itself when the level is loaded. If it has a name specified, it won\'t apply until it receives the \'Activate\' input."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.infodecal.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.infodecal.texture"
			string m_FriendlyName = "texture"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.infodecal.LowPriority"
			string m_FriendlyName = "Low Priority (can be replaced)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.infodecal.ApplyEntity"
			string m_FriendlyName = "Apply Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "An optional entity to apply the decal to.  If this is empty, the decal will locate the entity by tracing."
		},
		CHelpEntry
		{
			string m_Id = "Element.info_projecteddecal"
			string m_FriendlyName = "info_projecteddecal"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that projects a decal onto the world (or props). If the decal has no target name, it will immediately apply itself when the level is loaded. If it has a name specified, it won\'t apply until it receives the \'Activate\' input."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_projecteddecal.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_projecteddecal.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_projecteddecal.texture"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "texture"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_projecteddecal.Distance"
			string m_FriendlyName = "Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance from the origin to project the decal."
		},
		CHelpEntry
		{
			string m_Id = "Element.info_no_dynamic_shadow"
			string m_FriendlyName = "info_no_dynamic_shadow"
			string m_TooltipOverride = ""
			string m_HelpText = "Use this entity to mark surfaces that shouldn\'t receive dynamic shadows. Useful to apply to walls and floors where shadows are drawn improperly, giving away the location of enemies."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_no_dynamic_shadow.sides"
			string m_FriendlyName = "Brush faces"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.info_player_start"
			string m_FriendlyName = "info_player_start"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity indicates the position and facing direction at which the player will spawn. Any number of info_player_start entities may be placed in a map for when working in cordoned-off portions of the map. When multiple info_player_start entities are present in a map, set the \'Master\' spawnflag on one of them to indicate which one should be used when running the entire map."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_player_start.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_player_start.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.info_overlay_transition"
			string m_FriendlyName = "info_overlay_transition"
			string m_TooltipOverride = ""
			string m_HelpText = "Overlay Transition"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_overlay_transition.material"
			string m_FriendlyName = "Material"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_overlay_transition.sides"
			string m_FriendlyName = "Brush faces"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_overlay_transition.sides2"
			string m_FriendlyName = "Water faces"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_overlay_transition.LengthTexcoordStart"
			string m_FriendlyName = "Texcoord Length Start"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_overlay_transition.LengthTexcoordEnd"
			string m_FriendlyName = "Texcoord Length End"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_overlay_transition.WidthTexcoordStart"
			string m_FriendlyName = "Texcoord Width Start"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_overlay_transition.WidthTexcoordEnd"
			string m_FriendlyName = "Texcoord Width End"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_overlay_transition.Width1"
			string m_FriendlyName = "Width Land"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_overlay_transition.Width2"
			string m_FriendlyName = "Width Water"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_overlay_transition.DebugDraw"
			string m_FriendlyName = "Show Debug"
			string m_TooltipOverride = ""
			string m_HelpText = "Boolean value (0 or 1)."
		},
		CHelpEntry
		{
			string m_Id = "Element.info_intermission"
			string m_FriendlyName = "info_intermission"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that defines an intermission spot where dead players will float until they respawn."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_intermission.target"
			string m_FriendlyName = "Entity to look at"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of entity that dead players will face while in intermission at this spot."
		},
		CHelpEntry
		{
			string m_Id = "Element.info_landmark"
			string m_FriendlyName = "info_landmark"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that acts as a landmark for transitions to another level. There should be a corresponding info_landmark entity in the next map. Entities will be transitioned to the next level relative to the info_landmark entities."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_landmark.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Element.info_spawngroup_load"
			string m_FriendlyName = "info_spawngroup_load"
			string m_TooltipOverride = ""
			string m_HelpText = "Logical entity that starts async loading the next level."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_spawngroup_load.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_spawngroup_load.mapname"
			string m_FriendlyName = "Level to stream in"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_spawngroup_load.entityfiltername"
			string m_FriendlyName = "Name of entity filter to apply"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_spawngroup_load.landmark"
			string m_FriendlyName = "The landmark (same landmark name should be in both maps) used to determine the offset of the second map to the first"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.info_spawngroup_unload"
			string m_FriendlyName = "info_spawngroup_unload"
			string m_TooltipOverride = ""
			string m_HelpText = "Logical entity that unloads a level."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_spawngroup_unload.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_spawngroup_unload.mapname"
			string m_FriendlyName = "Level to stream out"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.info_null"
			string m_FriendlyName = "info_null"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that\'s immediately removed on spawning. Useful as a spotlight target."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_null.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Element.info_particle_target"
			string m_FriendlyName = "info_particle_target"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that is a target for particle system control points"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_target.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_target.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_target.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_target.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_target.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_target.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_target.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Element.info_particle_system"
			string m_FriendlyName = "info_particle_system"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that spawns a particle system built using the particle editor."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.effect_name"
			string m_FriendlyName = "Particle System Name"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.start_active"
			string m_FriendlyName = "Start Active\?"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.render_in_front"
			string m_FriendlyName = "Render In Front"
			string m_TooltipOverride = ""
			string m_HelpText = "Hack to allow particles to render in front of everything else."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint1"
			string m_FriendlyName = "Control Point 1"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 1 of the effect will be at this entity\'s location."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint2"
			string m_FriendlyName = "Control Point 2"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 2 of the effect will be at this entity\'s location. If control point 1 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint3"
			string m_FriendlyName = "Control Point 3"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 3 of the effect will be at this entity\'s location. If control point 2 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint4"
			string m_FriendlyName = "Control Point 4"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 4 of the effect will be at this entity\'s location. If control point 3 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint5"
			string m_FriendlyName = "Control Point 5"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 5 of the effect will be at this entity\'s location. If control point 4 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint6"
			string m_FriendlyName = "Control Point 6"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 6 of the effect will be at this entity\'s location. If control point 5 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint7"
			string m_FriendlyName = "Control Point 7"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 7 of the effect will be at this entity\'s location. If control point 6 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint8"
			string m_FriendlyName = "Control Point 8"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 8 of the effect will be at this entity\'s location. If control point 7 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint9"
			string m_FriendlyName = "Control Point 9"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 9 of the effect will be at this entity\'s location. If control point 8 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint10"
			string m_FriendlyName = "Control Point 10"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 10 of the effect will be at this entity\'s location. If control point 9 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint11"
			string m_FriendlyName = "Control Point 11"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 11 of the effect will be at this entity\'s location. If control point 10 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint12"
			string m_FriendlyName = "Control Point 12"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 12 of the effect will be at this entity\'s location. If control point 11 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint13"
			string m_FriendlyName = "Control Point 13"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 13 of the effect will be at this entity\'s location. If control point 12 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint14"
			string m_FriendlyName = "Control Point 14"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 14 of the effect will be at this entity\'s location. If control point 13 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint15"
			string m_FriendlyName = "Control Point 15"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 15 of the effect will be at this entity\'s location. If control point 14 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint16"
			string m_FriendlyName = "Control Point 16"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 16 of the effect will be at this entity\'s location. If control point 15 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint17"
			string m_FriendlyName = "Control Point 17"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 17 of the effect will be at this entity\'s location. If control point 16 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint18"
			string m_FriendlyName = "Control Point 18"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 18 of the effect will be at this entity\'s location. If control point 17 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint19"
			string m_FriendlyName = "Control Point 19"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 19 of the effect will be at this entity\'s location. If control point 18 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint20"
			string m_FriendlyName = "Control Point 20"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 20 of the effect will be at this entity\'s location. If control point 19 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint21"
			string m_FriendlyName = "Control Point 21"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 21 of the effect will be at this entity\'s location. If control point 10 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint22"
			string m_FriendlyName = "Control Point 22"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 22 of the effect will be at this entity\'s location. If control point 21 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint23"
			string m_FriendlyName = "Control Point 23"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 23 of the effect will be at this entity\'s location. If control point 22 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint24"
			string m_FriendlyName = "Control Point 24"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 24 of the effect will be at this entity\'s location. If control point 23 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint25"
			string m_FriendlyName = "Control Point 25"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 25 of the effect will be at this entity\'s location. If control point 24 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint26"
			string m_FriendlyName = "Control Point 26"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 26 of the effect will be at this entity\'s location. If control point 25 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint27"
			string m_FriendlyName = "Control Point 27"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 27 of the effect will be at this entity\'s location. If control point 26 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint28"
			string m_FriendlyName = "Control Point 28"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 28 of the effect will be at this entity\'s location. If control point 27 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint29"
			string m_FriendlyName = "Control Point 29"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 29 of the effect will be at this entity\'s location. If control point 28 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint30"
			string m_FriendlyName = "Control Point 30"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 30 of the effect will be at this entity\'s location. If control point 29 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint31"
			string m_FriendlyName = "Control Point 31"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 31 of the effect will be at this entity\'s location. If control point 30 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint32"
			string m_FriendlyName = "Control Point 32"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 32 of the effect will be at this entity\'s location. If control point 31 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint33"
			string m_FriendlyName = "Control Point 33"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 33 of the effect will be at this entity\'s location. If control point 32 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint34"
			string m_FriendlyName = "Control Point 34"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 34 of the effect will be at this entity\'s location. If control point 33 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint35"
			string m_FriendlyName = "Control Point 35"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 35 of the effect will be at this entity\'s location. If control point 34 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint36"
			string m_FriendlyName = "Control Point 36"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 36 of the effect will be at this entity\'s location. If control point 35 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint37"
			string m_FriendlyName = "Control Point 37"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 37 of the effect will be at this entity\'s location. If control point 36 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint38"
			string m_FriendlyName = "Control Point 38"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 38 of the effect will be at this entity\'s location. If control point 37 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint39"
			string m_FriendlyName = "Control Point 39"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 39 of the effect will be at this entity\'s location. If control point 38 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint40"
			string m_FriendlyName = "Control Point 40"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 40 of the effect will be at this entity\'s location. If control point 39 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint41"
			string m_FriendlyName = "Control Point 41"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 41 of the effect will be at this entity\'s location. If control point 40 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint42"
			string m_FriendlyName = "Control Point 42"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 42 of the effect will be at this entity\'s location. If control point 41 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint43"
			string m_FriendlyName = "Control Point 43"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 43 of the effect will be at this entity\'s location. If control point 42 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint44"
			string m_FriendlyName = "Control Point 44"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 44 of the effect will be at this entity\'s location. If control point 43 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint45"
			string m_FriendlyName = "Control Point 45"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 45 of the effect will be at this entity\'s location. If control point 44 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint46"
			string m_FriendlyName = "Control Point 46"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 46 of the effect will be at this entity\'s location. If control point 45 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint47"
			string m_FriendlyName = "Control Point 47"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 47 of the effect will be at this entity\'s location. If control point 46 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint48"
			string m_FriendlyName = "Control Point 48"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 48 of the effect will be at this entity\'s location. If control point 47 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint49"
			string m_FriendlyName = "Control Point 49"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 49 of the effect will be at this entity\'s location. If control point 48 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint50"
			string m_FriendlyName = "Control Point 50"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 50 of the effect will be at this entity\'s location. If control point 49 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint51"
			string m_FriendlyName = "Control Point 51"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 51 of the effect will be at this entity\'s location. If control point 50 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint52"
			string m_FriendlyName = "Control Point 52"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 52 of the effect will be at this entity\'s location. If control point 51 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint53"
			string m_FriendlyName = "Control Point 53"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 53 of the effect will be at this entity\'s location. If control point 52 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint54"
			string m_FriendlyName = "Control Point 54"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 54 of the effect will be at this entity\'s location. If control point 53 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint55"
			string m_FriendlyName = "Control Point 55"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 55 of the effect will be at this entity\'s location. If control point 54 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint56"
			string m_FriendlyName = "Control Point 56"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 56 of the effect will be at this entity\'s location. If control point 55 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint57"
			string m_FriendlyName = "Control Point 57"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 57 of the effect will be at this entity\'s location. If control point 56 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint58"
			string m_FriendlyName = "Control Point 58"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 58 of the effect will be at this entity\'s location. If control point 57 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint59"
			string m_FriendlyName = "Control Point 59"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 59 of the effect will be at this entity\'s location. If control point 58 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint60"
			string m_FriendlyName = "Control Point 60"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 60 of the effect will be at this entity\'s location. If control point 59 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint61"
			string m_FriendlyName = "Control Point 61"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 61 of the effect will be at this entity\'s location. If control point 60 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint62"
			string m_FriendlyName = "Control Point 62"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 62 of the effect will be at this entity\'s location. If control point 61 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint63"
			string m_FriendlyName = "Control Point 63"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, control point 63 of the effect will be at this entity\'s location. If control point 62 is not set, this will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint1_parent"
			string m_FriendlyName = "Control Point 1\'s Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "If set and nonzero, control point 1 of the effect will use this point for its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint2_parent"
			string m_FriendlyName = "Control Point 2\'s Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "If set and nonzero, control point 2 of the effect will use this point for its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint3_parent"
			string m_FriendlyName = "Control Point 3\'s Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "If set and nonzero, control point 3 of the effect will use this point for its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint4_parent"
			string m_FriendlyName = "Control Point 4\'s Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "If set and nonzero, control point 4 of the effect will use this point for its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint5_parent"
			string m_FriendlyName = "Control Point 5\'s Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "If set and nonzero, control point 5 of the effect will use this point for its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint6_parent"
			string m_FriendlyName = "Control Point 6\'s Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "If set and nonzero, control point 6 of the effect will use this point for its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_particle_system.cpoint7_parent"
			string m_FriendlyName = "Control Point 7\'s Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "If set and nonzero, control point 7 of the effect will use this point for its parent."
		},
		CHelpEntry
		{
			string m_Id = "Element.phys_ragdollmagnet"
			string m_FriendlyName = "phys_ragdollmagnet"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that acts like a magnet for ragdolls. Useful for crafting exaggerated ragdoll behavior (i.e. guys falling over rails on death). If the Bar Magnet spawnflag is set, the magnet works like it was a cylindrical magnet i.e. it attracts ragdolls to the nearest point on a line."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollmagnet.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollmagnet.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollmagnet.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollmagnet.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollmagnet.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollmagnet.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollmagnet.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollmagnet.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollmagnet.axis"
			string m_FriendlyName = "Bar Magnet Axis"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollmagnet.radius"
			string m_FriendlyName = "Effective Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Radius in which ragdolls are affected around this entity\'s origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollmagnet.force"
			string m_FriendlyName = "Force"
			string m_TooltipOverride = ""
			string m_HelpText = "Magnetic force to apply to ragdolls within the radius. Expressed as kilograms per inch per second. So a force of 1000 will add 10 inches/second to a 100kg man. It will add 100 inches per second to a 10kg headcrab."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollmagnet.target"
			string m_FriendlyName = "Entity to affect"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, the phys_ragdollmagnet will only affect the target entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollmagnet.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.info_lighting"
			string m_FriendlyName = "info_lighting"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that can be used to change the lighting origin of a prop_static. Set the prop_static\'s Lighting Origin to point at this entity to make the prop_static light as if it was at the info_lighting\'s origin. Good for prop_static entities that are embedded in world geometry (like rocks/windows/etc)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_lighting.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Element.info_teleport_destination"
			string m_FriendlyName = "info_teleport_destination"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that does nothing itself, but can be used to specify the destination for a trigger_teleport entity. An info_target can be used instead."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_teleport_destination.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_teleport_destination.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_teleport_destination.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_teleport_destination.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_teleport_destination.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_teleport_destination.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_teleport_destination.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Element.info_node"
			string m_FriendlyName = "info_node"
			string m_TooltipOverride = ""
			string m_HelpText = "A navigation node for ground moving NPCs. Navigation nodes are baked into the nodegraph so that NPCs can move to them. Ground nodes fall to the ground when they spawn."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node.nodeid"
			string m_FriendlyName = "Node ID"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.info_node_hint"
			string m_FriendlyName = "info_node_hint"
			string m_TooltipOverride = ""
			string m_HelpText = "A navigation node for ground moving NPCs that includes some context information for NPCs that are interested in it. The hint might indicate a window that could be looked out of, or an item of interest that could be commented on. Many hint nodes are NPC-specific, so it\'s helpful to use naming conventions like \'Crow: Fly to point\' in the hint choices list. The angles of a hint node indicate what direction the NPC should face to perform the hint behavior.\n\nIt\'s important to understand the distinction between scripts, such as scripted_sequence and scripted_schedule, and info_hint entities. Scripts summon NPCs to specific cue points to play their parts, while hints provide context information to the AI that they use to perform their behaviors. Hints require code support in the NPC, while scripts are generic and may require only animations to play. Use a hint if the behavior is driven by the AI, use a script if the behavior is driven by the map."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_hint.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_hint.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_hint.nodeid"
			string m_FriendlyName = "Node ID"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_hint.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_hint.hinttype"
			string m_FriendlyName = "Hint"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_hint.hintactivity"
			string m_FriendlyName = "Hint Activity"
			string m_TooltipOverride = ""
			string m_HelpText = "Activity associated with this hint node. Various parts of the NPC AI play this activity at times. i.e. Actbusy nodes will play this activity when an NPC acts busy on the node."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_hint.nodeFOV"
			string m_FriendlyName = "Node FOV"
			string m_TooltipOverride = ""
			string m_HelpText = "Imagine this node requires that an NPC be in the node\'s field of view in order to use this hint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_hint.StartHintDisabled"
			string m_FriendlyName = "Start Hint Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_hint.Group"
			string m_FriendlyName = "Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, gives the hint a specific group name.  Useful for hint nodes that need to be logically grouped together. NPCs may also refuse to use hint nodes that don\'t match their hint group."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_hint.TargetNode"
			string m_FriendlyName = "Target node"
			string m_TooltipOverride = ""
			string m_HelpText = "The node ID of an associated target node, if any."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_hint.radius"
			string m_FriendlyName = "Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "How close an NPC must be to consider this hint. 0 means infinite."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_hint.IgnoreFacing"
			string m_FriendlyName = "Ignore Facing"
			string m_TooltipOverride = ""
			string m_HelpText = "Don\'t pay attention to the facing of the node. May not apply to a given hint type."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_hint.MinimumState"
			string m_FriendlyName = "Minimum State"
			string m_TooltipOverride = ""
			string m_HelpText = "Require an NPC have a minimum state to use the hint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_hint.MaximumState"
			string m_FriendlyName = "Maximum State"
			string m_TooltipOverride = ""
			string m_HelpText = "Require an NPC have a maximum state to use the hint."
		},
		CHelpEntry
		{
			string m_Id = "Element.info_node_air"
			string m_FriendlyName = "info_node_air"
			string m_TooltipOverride = ""
			string m_HelpText = "A navigation node for flying NPCs. Air navigation nodes are baked into the nodegraph so that NPCs can move to them. Air nodes do not fall to the ground when they spawn."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_air.nodeid"
			string m_FriendlyName = "Node ID"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_air.nodeheight"
			string m_FriendlyName = "NodeHeight"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.info_node_air_hint"
			string m_FriendlyName = "info_node_air_hint"
			string m_TooltipOverride = ""
			string m_HelpText = "A navigation node for flying NPCs that includes some context information for NPCs that are interested in it. The hint might indicate a window that could be looked into, or an item of interest that could be commented on. Many hint nodes are NPC-specific, so it\'s helpful to use naming conventions like \'Crow: Fly to point\' in the hint choices list. The angles of a hint node indicate what direction the NPC should face to perform the hint behavior."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_air_hint.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_air_hint.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_air_hint.nodeid"
			string m_FriendlyName = "Node ID"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_air_hint.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_air_hint.hinttype"
			string m_FriendlyName = "Hint"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_air_hint.hintactivity"
			string m_FriendlyName = "Hint Activity"
			string m_TooltipOverride = ""
			string m_HelpText = "Activity associated with this hint node. Various parts of the NPC AI play this activity at times. i.e. Actbusy nodes will play this activity when an NPC acts busy on the node."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_air_hint.nodeFOV"
			string m_FriendlyName = "Node FOV"
			string m_TooltipOverride = ""
			string m_HelpText = "Imagine this node requires that an NPC be in the node\'s field of view in order to use this hint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_air_hint.StartHintDisabled"
			string m_FriendlyName = "Start Hint Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_air_hint.Group"
			string m_FriendlyName = "Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, gives the hint a specific group name.  Useful for hint nodes that need to be logically grouped together. NPCs may also refuse to use hint nodes that don\'t match their hint group."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_air_hint.TargetNode"
			string m_FriendlyName = "Target node"
			string m_TooltipOverride = ""
			string m_HelpText = "The node ID of an associated target node, if any."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_air_hint.radius"
			string m_FriendlyName = "Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "How close an NPC must be to consider this hint. 0 means infinite."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_air_hint.IgnoreFacing"
			string m_FriendlyName = "Ignore Facing"
			string m_TooltipOverride = ""
			string m_HelpText = "Don\'t pay attention to the facing of the node. May not apply to a given hint type."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_air_hint.MinimumState"
			string m_FriendlyName = "Minimum State"
			string m_TooltipOverride = ""
			string m_HelpText = "Require an NPC have a minimum state to use the hint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_air_hint.MaximumState"
			string m_FriendlyName = "Maximum State"
			string m_TooltipOverride = ""
			string m_HelpText = "Require an NPC have a maximum state to use the hint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_air_hint.nodeheight"
			string m_FriendlyName = "NodeHeight"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.info_hint"
			string m_FriendlyName = "info_hint"
			string m_TooltipOverride = ""
			string m_HelpText = "A hint that is not used for navigation. They don\'t go into the nodegraph, nor do they fall to the ground. Use these to provide some spatial context for NPCs, such as \'look here if you can\'t find the player\' or \'throw rocks at this spot\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_hint.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_hint.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_hint.nodeid"
			string m_FriendlyName = "Node ID"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_hint.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_hint.hinttype"
			string m_FriendlyName = "Hint"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_hint.hintactivity"
			string m_FriendlyName = "Hint Activity"
			string m_TooltipOverride = ""
			string m_HelpText = "Activity associated with this hint node. Various parts of the NPC AI play this activity at times. i.e. Actbusy nodes will play this activity when an NPC acts busy on the node."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_hint.nodeFOV"
			string m_FriendlyName = "Node FOV"
			string m_TooltipOverride = ""
			string m_HelpText = "Imagine this node requires that an NPC be in the node\'s field of view in order to use this hint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_hint.StartHintDisabled"
			string m_FriendlyName = "Start Hint Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_hint.Group"
			string m_FriendlyName = "Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, gives the hint a specific group name.  Useful for hint nodes that need to be logically grouped together. NPCs may also refuse to use hint nodes that don\'t match their hint group."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_hint.TargetNode"
			string m_FriendlyName = "Target node"
			string m_TooltipOverride = ""
			string m_HelpText = "The node ID of an associated target node, if any."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_hint.radius"
			string m_FriendlyName = "Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "How close an NPC must be to consider this hint. 0 means infinite."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_hint.IgnoreFacing"
			string m_FriendlyName = "Ignore Facing"
			string m_TooltipOverride = ""
			string m_HelpText = "Don\'t pay attention to the facing of the node. May not apply to a given hint type."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_hint.MinimumState"
			string m_FriendlyName = "Minimum State"
			string m_TooltipOverride = ""
			string m_HelpText = "Require an NPC have a minimum state to use the hint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_hint.MaximumState"
			string m_FriendlyName = "Maximum State"
			string m_TooltipOverride = ""
			string m_HelpText = "Require an NPC have a maximum state to use the hint."
		},
		CHelpEntry
		{
			string m_Id = "Element.info_node_link"
			string m_FriendlyName = "info_node_link"
			string m_TooltipOverride = ""
			string m_HelpText = "A dynamic connection between two navigation nodes. You specify the node IDs of the start and end nodes, and then you can use entity I/O to turn on and off the connection. This could be used to create or destroy a connection in the nodegraph because of some event in your map (a bridge being created/destroyed, etc)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_link.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_link.StartNode"
			string m_FriendlyName = "Start node ID"
			string m_TooltipOverride = ""
			string m_HelpText = "The node ID of one end of the node connection."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_link.EndNode"
			string m_FriendlyName = "End node ID"
			string m_TooltipOverride = ""
			string m_HelpText = "The node ID of one end of the node connection."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_link.initialstate"
			string m_FriendlyName = "Initial State"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_link.linktype"
			string m_FriendlyName = "Type of Connection"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_link.AllowUse"
			string m_FriendlyName = "Allow Pass When Off"
			string m_TooltipOverride = ""
			string m_HelpText = "Entity or class to allow passage even when node is off"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_link.InvertAllow"
			string m_FriendlyName = "Invert exclusion rules"
			string m_TooltipOverride = ""
			string m_HelpText = "Allowed entity is the only entity NOT allowed when this is set to \'yes\'"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_link.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.info_node_link_controller"
			string m_FriendlyName = "info_node_link_controller"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that controls all connections between nodes that intersect the controller\'s volume. This allows for mass enabling/disabling of all node connections through a volume."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_link_controller.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_link_controller.mins"
			string m_FriendlyName = "Mins"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_link_controller.maxs"
			string m_FriendlyName = "Maxs"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_link_controller.initialstate"
			string m_FriendlyName = "Initial State"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_link_controller.useairlinkradius"
			string m_FriendlyName = "Use Larger Radius (for air links)"
			string m_TooltipOverride = ""
			string m_HelpText = "Set this to \'Yes\' if this controller is intended to control air links. Air links connect using a larger search radius so leaving this at \'No\' might miss some air links."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_link_controller.AllowUse"
			string m_FriendlyName = "Allow Pass When Off"
			string m_TooltipOverride = ""
			string m_HelpText = "Entity or class to allow passage even when node is off"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_link_controller.InvertAllow"
			string m_FriendlyName = "Invert exclusion rules"
			string m_TooltipOverride = ""
			string m_HelpText = "Allowed entity is the only entity NOT allowed when this is set to \'yes\'"
		},
		CHelpEntry
		{
			string m_Id = "Element.info_radial_link_controller"
			string m_FriendlyName = "info_radial_link_controller"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity automatically severs node connections that pass through its radius. If it moves, it will restore those connections."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_radial_link_controller.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_radial_link_controller.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_radial_link_controller.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_radial_link_controller.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_radial_link_controller.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_radial_link_controller.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_radial_link_controller.radius"
			string m_FriendlyName = "Radius (Use Helper!)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.info_node_climb"
			string m_FriendlyName = "info_node_climb"
			string m_TooltipOverride = ""
			string m_HelpText = "A climb-node for AI navigation. Only usable by NPCs that can climb."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_climb.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_climb.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_climb.nodeid"
			string m_FriendlyName = "Node ID"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_climb.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_climb.hinttype"
			string m_FriendlyName = "Hint"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_climb.hintactivity"
			string m_FriendlyName = "Hint Activity"
			string m_TooltipOverride = ""
			string m_HelpText = "Activity associated with this hint node. Various parts of the NPC AI play this activity at times. i.e. Actbusy nodes will play this activity when an NPC acts busy on the node."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_climb.nodeFOV"
			string m_FriendlyName = "Node FOV"
			string m_TooltipOverride = ""
			string m_HelpText = "Imagine this node requires that an NPC be in the node\'s field of view in order to use this hint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_climb.StartHintDisabled"
			string m_FriendlyName = "Start Hint Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_climb.Group"
			string m_FriendlyName = "Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, gives the hint a specific group name.  Useful for hint nodes that need to be logically grouped together. NPCs may also refuse to use hint nodes that don\'t match their hint group."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_climb.TargetNode"
			string m_FriendlyName = "Target node"
			string m_TooltipOverride = ""
			string m_HelpText = "The node ID of an associated target node, if any."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_climb.radius"
			string m_FriendlyName = "Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "How close an NPC must be to consider this hint. 0 means infinite."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_climb.IgnoreFacing"
			string m_FriendlyName = "Ignore Facing"
			string m_TooltipOverride = ""
			string m_HelpText = "Don\'t pay attention to the facing of the node. May not apply to a given hint type."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_climb.MinimumState"
			string m_FriendlyName = "Minimum State"
			string m_TooltipOverride = ""
			string m_HelpText = "Require an NPC have a minimum state to use the hint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_node_climb.MaximumState"
			string m_FriendlyName = "Maximum State"
			string m_TooltipOverride = ""
			string m_HelpText = "Require an NPC have a maximum state to use the hint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light.target"
			string m_FriendlyName = "Entity To Point At"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of an entity in the map that the spotlight will point at. This will override the spotlight\'s angles."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light._distance"
			string m_FriendlyName = "Maximum Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "This is the distance that light is allowed to cast, in inches."
		},
		CHelpEntry
		{
			string m_Id = "Element.light_environment"
			string m_FriendlyName = "light_environment"
			string m_TooltipOverride = ""
			string m_HelpText = "Sets the color and angle of the light from the sun and sky."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_environment.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_environment.pitch"
			string m_FriendlyName = "Pitch"
			string m_TooltipOverride = ""
			string m_HelpText = "The downward pitch of the light from the sun. 0 is horizontal, -90 is straight down."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_environment._light"
			string m_FriendlyName = "Brightness"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_environment._ambient"
			string m_FriendlyName = "Ambient"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_environment._lightHDR"
			string m_FriendlyName = "BrightnessHDR"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_environment._lightscaleHDR"
			string m_FriendlyName = "BrightnessScaleHDR"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount to scale the light by when compiling for HDR."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_environment._ambientHDR"
			string m_FriendlyName = "AmbientHDR"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_environment._AmbientScaleHDR"
			string m_FriendlyName = "AmbientScaleHDR"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount to scale the ambient light by when compiling for hdr."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_environment.SunSpreadAngle"
			string m_FriendlyName = "SunSpreadAngle"
			string m_TooltipOverride = ""
			string m_HelpText = "The angular extent of the sun for casting soft shadows. Higher numbers are more diffuse. 5 is a good starting value."
		},
		CHelpEntry
		{
			string m_Id = "Element.light_dynamic"
			string m_FriendlyName = "light_dynamic"
			string m_TooltipOverride = ""
			string m_HelpText = "An invisible lightsource that changes in some way over time."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_dynamic.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_dynamic.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_dynamic.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_dynamic.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_dynamic.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_dynamic.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_dynamic.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_dynamic.target"
			string m_FriendlyName = "Entity to point at"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of an entity in the map that the dynamic light will point at."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_dynamic._light"
			string m_FriendlyName = "Light color"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_dynamic.brightness"
			string m_FriendlyName = "Light brightness"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_dynamic._inner_cone"
			string m_FriendlyName = "Inner (bright) angle"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_dynamic._cone"
			string m_FriendlyName = "Outer (fading) angle"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_dynamic.pitch"
			string m_FriendlyName = "Pitch"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_dynamic.distance"
			string m_FriendlyName = "Maximum distance"
			string m_TooltipOverride = ""
			string m_HelpText = "This is the distance that light is allowed to cast, in inches."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_dynamic.spotlight_radius"
			string m_FriendlyName = "Spotlight end radius"
			string m_TooltipOverride = ""
			string m_HelpText = "This is the radius of the light, in inches, at the object that it is hitting."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_dynamic.style"
			string m_FriendlyName = "Appearance"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.light_dynamic.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.shadow_control"
			string m_FriendlyName = "shadow_control"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity to control the shadows in the map."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.shadow_control.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.shadow_control.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This is the shadow direction. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, and roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.shadow_control.color"
			string m_FriendlyName = "Shadow Color"
			string m_TooltipOverride = ""
			string m_HelpText = "This is the color of the shadows."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.shadow_control.distance"
			string m_FriendlyName = "Maximum Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "This is the maximum distance the shadow is allowed to cast, in inches."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.shadow_control.disableallshadows"
			string m_FriendlyName = "All Shadows Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.shadow_control.enableshadowsfromlocallights"
			string m_FriendlyName = "Enable Local Light Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.color_correction"
			string m_FriendlyName = "color_correction"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity to control the color correction in the map."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.color_correction.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.color_correction.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.color_correction.minfalloff"
			string m_FriendlyName = "Lookup Falloff Start Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "This is the distance to the start of the falloff region (-1 = everywhere)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.color_correction.maxfalloff"
			string m_FriendlyName = "Lookup Falloff End Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "This is the distance to the end of the falloff region (-1 = everywhere)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.color_correction.maxweight"
			string m_FriendlyName = "Maximum Weight"
			string m_TooltipOverride = ""
			string m_HelpText = "This is the maximum weight for this lookup"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.color_correction.filename"
			string m_FriendlyName = "Lookup Table Filename"
			string m_TooltipOverride = ""
			string m_HelpText = "This is the lookup table filename"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.color_correction.fadeInDuration"
			string m_FriendlyName = "Lookup Fade In Duration"
			string m_TooltipOverride = ""
			string m_HelpText = "Duration of fade in on when enabled."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.color_correction.fadeOutDuration"
			string m_FriendlyName = "Lookup Fade out Duration"
			string m_TooltipOverride = ""
			string m_HelpText = "Dration of fade out on when disabled."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.color_correction.exclusive"
			string m_FriendlyName = "Exlusive"
			string m_TooltipOverride = ""
			string m_HelpText = "An exclusive color_correction entity disables and fades out all other color corrections when it is enabled. There should only be one active exclusive color_correction ent at any time."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.color_correction.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.color_correction_volume"
			string m_FriendlyName = "color_correction_volume"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity to control the color correction in the map."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.color_correction_volume.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.color_correction_volume.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.color_correction_volume.fadeDuration"
			string m_FriendlyName = "Lookup Fade Duration"
			string m_TooltipOverride = ""
			string m_HelpText = "This is the duration for the lookup to fade in/out on extry/exit"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.color_correction_volume.maxweight"
			string m_FriendlyName = "Maximum Weight"
			string m_TooltipOverride = ""
			string m_HelpText = "This is the maximum weight for this lookup"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.color_correction_volume.filename"
			string m_FriendlyName = "Lookup Table Filename"
			string m_TooltipOverride = ""
			string m_HelpText = "This is the lookup table filename"
		},
		CHelpEntry
		{
			string m_Id = "Element.KeyFrame"
			string m_FriendlyName = "KeyFrame"
			string m_TooltipOverride = ""
			string m_HelpText = "KeyFrame"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.KeyFrame.NextKey"
			string m_FriendlyName = "Next KeyFrame"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the next keyframe along this keyframe path."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.KeyFrame.MoveSpeed"
			string m_FriendlyName = "Speed (units per second)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.Mover"
			string m_FriendlyName = "Mover"
			string m_TooltipOverride = ""
			string m_HelpText = "Mover"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Mover.PositionInterpolator"
			string m_FriendlyName = "Position Interpolator"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.func_movelinear"
			string m_FriendlyName = "func_movelinear"
			string m_TooltipOverride = ""
			string m_HelpText = "A brush entity that moves linearly along a given distance, in a given direction."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.movedir"
			string m_FriendlyName = "Move Direction (Pitch Yaw Roll)"
			string m_TooltipOverride = ""
			string m_HelpText = "The direction the brushes will move, when told to."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.startposition"
			string m_FriendlyName = "Start Position"
			string m_TooltipOverride = ""
			string m_HelpText = "Position of brush when spawned. The range is a value between 0.0 and 1.0, where 0 is the starting position and 1 is the starting position + (move direction * move distance)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.speed"
			string m_FriendlyName = "Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "The speed that the brush moves, in inches per second."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.movedistance"
			string m_FriendlyName = "Move Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "The distance from the starting point that the brush should move, in inches."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.blockdamage"
			string m_FriendlyName = "Block Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of damage to do to any entity that blocks the brushes, per frame."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.startsound"
			string m_FriendlyName = "Sound played when the brush starts moving."
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_movelinear.stopsound"
			string m_FriendlyName = "Sound played when the brush stops moving."
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.func_water_analog"
			string m_FriendlyName = "func_water_analog"
			string m_TooltipOverride = ""
			string m_HelpText = "A water brush entity that moves linearly along a given distance, in a given direction"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_water_analog.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_water_analog.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_water_analog.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_water_analog.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_water_analog.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_water_analog.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_water_analog.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_water_analog.movedir"
			string m_FriendlyName = "Move Direction (Pitch Yaw Roll)"
			string m_TooltipOverride = ""
			string m_HelpText = "The direction the water will move, when told to \'Open\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_water_analog.startposition"
			string m_FriendlyName = "Start Position"
			string m_TooltipOverride = ""
			string m_HelpText = "Position of the water brush when spawned. The range is a value between 0.0 and 1.0, where 0 is the starting position and 1 is the starting position + (move direction * move distance)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_water_analog.speed"
			string m_FriendlyName = "Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "The speed that the water brush moves, in inches per second."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_water_analog.movedistance"
			string m_FriendlyName = "Move Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "The distance from the starting point that the water brush should move, in inches."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_water_analog.startsound"
			string m_FriendlyName = "Sound played when the water brush starts moving."
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_water_analog.stopsound"
			string m_FriendlyName = "Sound played when the water brush stops moving."
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_water_analog.WaveHeight"
			string m_FriendlyName = "Wave Height"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.func_rotating"
			string m_FriendlyName = "func_rotating"
			string m_TooltipOverride = ""
			string m_HelpText = "A rotating brush entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.maxspeed"
			string m_FriendlyName = "Max Rotation Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "The maximum rotation speed of the brushes, in degrees per second."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.fanfriction"
			string m_FriendlyName = "Friction (0 - 100%)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of rotational friction. Value must be between 0 and 100 %."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.message"
			string m_FriendlyName = "Rotating sound WAV"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound to play while rotating."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.volume"
			string m_FriendlyName = "Volume (10 = loudest)"
			string m_TooltipOverride = ""
			string m_HelpText = "The volume of the rotation sound."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.dmg"
			string m_FriendlyName = "Blocking Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "Damage done to any entity that blocks the rotation, per frame."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rotating.solidbsp"
			string m_FriendlyName = "Solid Type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.func_platrot"
			string m_FriendlyName = "func_platrot"
			string m_TooltipOverride = ""
			string m_HelpText = "A brush entity that moves vertically, and can rotate while doing so."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.noise1"
			string m_FriendlyName = "Movement Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "The sound to play when the brush moves."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.noise2"
			string m_FriendlyName = "Stop Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "The sound to play when the brush stops moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.speed"
			string m_FriendlyName = "Speed of Rotation"
			string m_TooltipOverride = ""
			string m_HelpText = "Speed at which the brush rotates, in degrees per second."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.height"
			string m_FriendlyName = "Travel Altitude"
			string m_TooltipOverride = ""
			string m_HelpText = "The vertical distance from the starting position that this platform moves. If negative, the platform will lower."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot.rotation"
			string m_FriendlyName = "Spin amount"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount this platform should rotate as it moves, in degrees."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_platrot._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Element.keyframe_track"
			string m_FriendlyName = "keyframe_track"
			string m_TooltipOverride = ""
			string m_HelpText = "Animation KeyFrame"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_track.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_track.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_track.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_track.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_track.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_track.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_track.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_track.NextKey"
			string m_FriendlyName = "Next KeyFrame"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the next keyframe along this keyframe path."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_track.MoveSpeed"
			string m_FriendlyName = "Speed (units per second)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.move_keyframed"
			string m_FriendlyName = "move_keyframed"
			string m_TooltipOverride = ""
			string m_HelpText = "Keyframed Move Behavior"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_keyframed.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_keyframed.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_keyframed.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_keyframed.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_keyframed.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_keyframed.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_keyframed.NextKey"
			string m_FriendlyName = "Next KeyFrame"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the next keyframe along this keyframe path."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_keyframed.MoveSpeed"
			string m_FriendlyName = "Speed (units per second)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_keyframed.PositionInterpolator"
			string m_FriendlyName = "Position Interpolator"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.move_track"
			string m_FriendlyName = "move_track"
			string m_TooltipOverride = ""
			string m_HelpText = "Track Move Behavior"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_track.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_track.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_track.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_track.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_track.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_track.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_track.PositionInterpolator"
			string m_FriendlyName = "Position Interpolator"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_track.NextKey"
			string m_FriendlyName = "Next KeyFrame"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the next keyframe along this keyframe path."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_track.MoveSpeed"
			string m_FriendlyName = "Speed (units per second)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_track.WheelBaseLength"
			string m_FriendlyName = "Distance between the wheels"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_track.Damage"
			string m_FriendlyName = "Damage done to blocking entities"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_track.NoRotate"
			string m_FriendlyName = "Turn to face down path"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.RopeKeyFrame"
			string m_FriendlyName = "RopeKeyFrame"
			string m_TooltipOverride = ""
			string m_HelpText = "RopeKeyFrame"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RopeKeyFrame.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RopeKeyFrame.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RopeKeyFrame.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RopeKeyFrame.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RopeKeyFrame.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RopeKeyFrame.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RopeKeyFrame.Slack"
			string m_FriendlyName = "Slack"
			string m_TooltipOverride = ""
			string m_HelpText = "How much extra length the rope has (by default it has the length between its two endpoints in the editor)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RopeKeyFrame.Type"
			string m_FriendlyName = "Type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RopeKeyFrame.Subdiv"
			string m_FriendlyName = "Subdivision"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of subdivisions between each rope segment. Maximum value is 8. Higher values make smoother ropes, but are slower to render."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RopeKeyFrame.Barbed"
			string m_FriendlyName = "Barbed"
			string m_TooltipOverride = ""
			string m_HelpText = "Test effect that makes the rope look sharper and more barbed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RopeKeyFrame.Width"
			string m_FriendlyName = "Width (1-64)"
			string m_TooltipOverride = ""
			string m_HelpText = "Width of the rope."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RopeKeyFrame.TextureScale"
			string m_FriendlyName = "Texture Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "This changes the texture resolution. The default resolution is 4 pixels per inch. Larger values stretch the texture and smaller values scrunch it up."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RopeKeyFrame.Collide"
			string m_FriendlyName = "Collide with world"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RopeKeyFrame.Dangling"
			string m_FriendlyName = "Start Dangling"
			string m_TooltipOverride = ""
			string m_HelpText = "When set to Yes, the rope starts out detached from its target endpoint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RopeKeyFrame.Breakable"
			string m_FriendlyName = "Breakable"
			string m_TooltipOverride = ""
			string m_HelpText = "When set to yes, the rope can be detached from either endpoint when shot."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RopeKeyFrame.UseWind"
			string m_FriendlyName = "Use Wind"
			string m_TooltipOverride = ""
			string m_HelpText = "When set to Yes, the rope be blown by the wind (is expensive!)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.RopeKeyFrame.RopeMaterial"
			string m_FriendlyName = "Rope Material"
			string m_TooltipOverride = ""
			string m_HelpText = "The material to use when rendering the rope."
		},
		CHelpEntry
		{
			string m_Id = "Element.keyframe_rope"
			string m_FriendlyName = "keyframe_rope"
			string m_TooltipOverride = ""
			string m_HelpText = "A node entity that marks a point in a rope. The first node in the rope should be a move_rope, followed by 1 or more keyframe_ropes."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.NextKey"
			string m_FriendlyName = "Next KeyFrame"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the next keyframe along this keyframe path."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.MoveSpeed"
			string m_FriendlyName = "Speed (units per second)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.Slack"
			string m_FriendlyName = "Slack"
			string m_TooltipOverride = ""
			string m_HelpText = "How much extra length the rope has (by default it has the length between its two endpoints in the editor)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.Type"
			string m_FriendlyName = "Type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.Subdiv"
			string m_FriendlyName = "Subdivision"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of subdivisions between each rope segment. Maximum value is 8. Higher values make smoother ropes, but are slower to render."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.Barbed"
			string m_FriendlyName = "Barbed"
			string m_TooltipOverride = ""
			string m_HelpText = "Test effect that makes the rope look sharper and more barbed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.Width"
			string m_FriendlyName = "Width (1-64)"
			string m_TooltipOverride = ""
			string m_HelpText = "Width of the rope."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.TextureScale"
			string m_FriendlyName = "Texture Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "This changes the texture resolution. The default resolution is 4 pixels per inch. Larger values stretch the texture and smaller values scrunch it up."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.Collide"
			string m_FriendlyName = "Collide with world"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.Dangling"
			string m_FriendlyName = "Start Dangling"
			string m_TooltipOverride = ""
			string m_HelpText = "When set to Yes, the rope starts out detached from its target endpoint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.Breakable"
			string m_FriendlyName = "Breakable"
			string m_TooltipOverride = ""
			string m_HelpText = "When set to yes, the rope can be detached from either endpoint when shot."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.UseWind"
			string m_FriendlyName = "Use Wind"
			string m_TooltipOverride = ""
			string m_HelpText = "When set to Yes, the rope be blown by the wind (is expensive!)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.keyframe_rope.RopeMaterial"
			string m_FriendlyName = "Rope Material"
			string m_TooltipOverride = ""
			string m_HelpText = "The material to use when rendering the rope."
		},
		CHelpEntry
		{
			string m_Id = "Element.move_rope"
			string m_FriendlyName = "move_rope"
			string m_TooltipOverride = ""
			string m_HelpText = "The first node in set of nodes that are used to place ropes in the world. It should connect to 1 or more keyframe_rope entities."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.NextKey"
			string m_FriendlyName = "Next KeyFrame"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the next keyframe along this keyframe path."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.MoveSpeed"
			string m_FriendlyName = "Speed (units per second)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.Slack"
			string m_FriendlyName = "Slack"
			string m_TooltipOverride = ""
			string m_HelpText = "How much extra length the rope has (by default it has the length between its two endpoints in the editor)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.Type"
			string m_FriendlyName = "Type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.Subdiv"
			string m_FriendlyName = "Subdivision"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of subdivisions between each rope segment. Maximum value is 8. Higher values make smoother ropes, but are slower to render."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.Barbed"
			string m_FriendlyName = "Barbed"
			string m_TooltipOverride = ""
			string m_HelpText = "Test effect that makes the rope look sharper and more barbed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.Width"
			string m_FriendlyName = "Width (1-64)"
			string m_TooltipOverride = ""
			string m_HelpText = "Width of the rope."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.TextureScale"
			string m_FriendlyName = "Texture Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "This changes the texture resolution. The default resolution is 4 pixels per inch. Larger values stretch the texture and smaller values scrunch it up."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.Collide"
			string m_FriendlyName = "Collide with world"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.Dangling"
			string m_FriendlyName = "Start Dangling"
			string m_TooltipOverride = ""
			string m_HelpText = "When set to Yes, the rope starts out detached from its target endpoint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.Breakable"
			string m_FriendlyName = "Breakable"
			string m_TooltipOverride = ""
			string m_HelpText = "When set to yes, the rope can be detached from either endpoint when shot."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.UseWind"
			string m_FriendlyName = "Use Wind"
			string m_TooltipOverride = ""
			string m_HelpText = "When set to Yes, the rope be blown by the wind (is expensive!)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.RopeMaterial"
			string m_FriendlyName = "Rope Material"
			string m_TooltipOverride = ""
			string m_HelpText = "The material to use when rendering the rope."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.move_rope.PositionInterpolator"
			string m_FriendlyName = "Position Interpolator"
			string m_TooltipOverride = ""
			string m_HelpText = "Curve Type. Currently only type 2 (Rope) is fully supported."
		},
		CHelpEntry
		{
			string m_Id = "Element.Button"
			string m_FriendlyName = "Button"
			string m_TooltipOverride = ""
			string m_HelpText = "Button"
		},
		CHelpEntry
		{
			string m_Id = "Element.func_button"
			string m_FriendlyName = "func_button"
			string m_TooltipOverride = ""
			string m_HelpText = "A brush entity that\'s designed to be used for a player-useable button. When used by the player, it moves to a pressed position."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.movedir"
			string m_FriendlyName = "Move Direction (Pitch Yaw Roll)"
			string m_TooltipOverride = ""
			string m_HelpText = "Specifies the direction of motion to move when the button is used."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.speed"
			string m_FriendlyName = "Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "The speed that the button moves, in inches per second."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.health"
			string m_FriendlyName = "Health (Obsolete)"
			string m_TooltipOverride = ""
			string m_HelpText = "Legacy method of specifying whether or not the button can be shot to activate it. Use the \'Damage Activates\' spawnflag instead."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.lip"
			string m_FriendlyName = "Lip"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount, in inches, of the button to leave sticking out of the wall it recedes into when pressed. Negative values make the button recede even further into the wall."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.master"
			string m_FriendlyName = "Master (Obsolete)"
			string m_TooltipOverride = ""
			string m_HelpText = "Legacy support: The name of a master entity. If the master hasn\'t been activated, this button cannot be pressed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.glow"
			string m_FriendlyName = "Glow Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of an entity that will get the +use glow for this button."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.sounds"
			string m_FriendlyName = "Sounds"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.wait"
			string m_FriendlyName = "Delay Before Reset (-1 stay)"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time, in seconds, after the button has been pressed before it returns to the starting position. Once it has returned, it can be used again. If the value is set to -1, the button never returns."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.locked_sound"
			string m_FriendlyName = "Locked Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound played when the player tries to use the button, and fails because it\'s locked."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.unlocked_sound"
			string m_FriendlyName = "Unlocked Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound played when the button is unlocked."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.locked_sentence"
			string m_FriendlyName = "Locked Sentence"
			string m_TooltipOverride = ""
			string m_HelpText = "A sentence played when the player tries to use the button, and fails because it\'s locked."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button.unlocked_sentence"
			string m_FriendlyName = "Unlocked Sentence"
			string m_TooltipOverride = ""
			string m_HelpText = "A sentence played when the button is unlocked."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_button._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_rot_button"
			string m_FriendlyName = "func_rot_button"
			string m_TooltipOverride = ""
			string m_HelpText = "A brush entity that\'s designed to be used for a rotating player-useable button. When used by the player, it rotates to a pressed position."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rot_button.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rot_button.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rot_button.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rot_button.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rot_button.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rot_button.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rot_button.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rot_button.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rot_button.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rot_button.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rot_button.master"
			string m_FriendlyName = "Master (Obsolete)"
			string m_TooltipOverride = ""
			string m_HelpText = "Legacy support: The name of a master entity. If the master hasn\'t been activated, this button cannot be used."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rot_button.speed"
			string m_FriendlyName = "Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "The speed that the button rotates, in degrees per second."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rot_button.health"
			string m_FriendlyName = "Health (Obsolete)"
			string m_TooltipOverride = ""
			string m_HelpText = "Legacy method of specifying whether or not the button can be shot to activate it. Use the \'Damage Activates\' spawnflag instead."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rot_button.sounds"
			string m_FriendlyName = "Sounds"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rot_button.wait"
			string m_FriendlyName = "Delay Before Reset (-1 stay)"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time, in seconds, after the button has been pressed before it returns to the starting position. Once it has returned, it can be used again. If the value is set to -1, the button never returns."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rot_button.distance"
			string m_FriendlyName = "Distance (deg)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount, in degrees, that the button should rotate when it\'s pressed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rot_button.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_rot_button._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Element.momentary_rot_button"
			string m_FriendlyName = "momentary_rot_button"
			string m_TooltipOverride = ""
			string m_HelpText = "A brush entity that\'s designed to be used for rotating wheels, where the player can rotate them to arbitrary positions before stopping."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.speed"
			string m_FriendlyName = "Speed (deg/sec)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount, in degrees, that the wheel turns per second."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.master"
			string m_FriendlyName = "Master (Obsolete)"
			string m_TooltipOverride = ""
			string m_HelpText = "Legacy support: The name of a master entity. If the master hasn\'t been activated, this button cannot be used."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.glow"
			string m_FriendlyName = "Glow Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of an entity that will get the +use glow for this button."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.sounds"
			string m_FriendlyName = "Sounds"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.distance"
			string m_FriendlyName = "Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "The maximum amount, in degrees, that the wheel is allowed to rotate."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.returnspeed"
			string m_FriendlyName = "Auto-return speed"
			string m_TooltipOverride = ""
			string m_HelpText = "If the \'Toggle\' spawnflag is not set, the speed at which the wheel auto-returns when left alone, in degrees per second."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.startposition"
			string m_FriendlyName = "Start Position"
			string m_TooltipOverride = ""
			string m_HelpText = "Postion when spawned. The value is a range between 0.0 and 1.0, where 0 is the unrotated position and 1 is the rotated position + \'Distance\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.startdirection"
			string m_FriendlyName = "Start Direction"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.momentary_rot_button.solidbsp"
			string m_FriendlyName = "Solid BSP"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.Door"
			string m_FriendlyName = "Door"
			string m_TooltipOverride = ""
			string m_HelpText = "Door"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.speed"
			string m_FriendlyName = "Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "The speed at which the door moves."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.master"
			string m_FriendlyName = "Master (Obsolete)"
			string m_TooltipOverride = ""
			string m_HelpText = "Legacy support: The name of a master entity. If the master hasn\'t been activated, this button cannot be used."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.noise1"
			string m_FriendlyName = "Start Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound to play when the door starts moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.noise2"
			string m_FriendlyName = "Stop Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound to play when the door stops moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.startclosesound"
			string m_FriendlyName = "Start Close Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "(Optional) Sound to play when the door starts closing."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.closesound"
			string m_FriendlyName = "Stop Close Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "(Optional) Sound to play when the door stops closing."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.wait"
			string m_FriendlyName = "Delay Before Reset (-1 stay)"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time, in seconds, after the door has opened before it closes. Once it has closed, it can be used again. If the value is set to -1, the door never closes itself."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.lip"
			string m_FriendlyName = "Lip"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount, in inches, of the button to leave sticking out of the wall it recedes into when pressed. Negative values make the button recede even further into the wall."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.dmg"
			string m_FriendlyName = "Blocking Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of damage done to entities that block the movement of this door, per frame."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.forceclosed"
			string m_FriendlyName = "Force Closed"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, this door will close no matter what. Useful for doors that have to close even if the player tries to block them with objects."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.ignoredebris"
			string m_FriendlyName = "Ignore Debris"
			string m_TooltipOverride = ""
			string m_HelpText = "If set this will change the door\'s collision group to one that ignore collisions with debris objects (note that this is not compatible with the non-solid-to-player spawnflag)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.message"
			string m_FriendlyName = "Message If Triggered"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.health"
			string m_FriendlyName = "Health (shoot open)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.locked_sound"
			string m_FriendlyName = "Locked Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound played when the player tries to use the door, and fails because it\'s locked."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.unlocked_sound"
			string m_FriendlyName = "Unlocked Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound played when the button is door."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.spawnpos"
			string m_FriendlyName = "Spawn Position"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.locked_sentence"
			string m_FriendlyName = "Locked Sentence"
			string m_TooltipOverride = ""
			string m_HelpText = "A sentence played when the player tries to use the door, and fails because it\'s locked."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.unlocked_sentence"
			string m_FriendlyName = "Unlocked Sentence"
			string m_TooltipOverride = ""
			string m_HelpText = "A sentence played when the door is unlocked."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Door.loopmovesound"
			string m_FriendlyName = "Loop Moving Sound\?"
			string m_TooltipOverride = ""
			string m_HelpText = "If set to true, the door\'s \'Start Sound\' will be continually looped until the door finishes moving."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_door"
			string m_FriendlyName = "func_door"
			string m_TooltipOverride = ""
			string m_HelpText = "A brush entity for use as a player-useable door."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.speed"
			string m_FriendlyName = "Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "The speed at which the door moves."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.master"
			string m_FriendlyName = "Master (Obsolete)"
			string m_TooltipOverride = ""
			string m_HelpText = "Legacy support: The name of a master entity. If the master hasn\'t been activated, this button cannot be used."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.noise1"
			string m_FriendlyName = "Start Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound to play when the door starts moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.noise2"
			string m_FriendlyName = "Stop Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound to play when the door stops moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.startclosesound"
			string m_FriendlyName = "Start Close Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "(Optional) Sound to play when the door starts closing."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.closesound"
			string m_FriendlyName = "Stop Close Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "(Optional) Sound to play when the door stops closing."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.wait"
			string m_FriendlyName = "Delay Before Reset (-1 stay)"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time, in seconds, after the door has opened before it closes. Once it has closed, it can be used again. If the value is set to -1, the door never closes itself."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.lip"
			string m_FriendlyName = "Lip"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount, in inches, of the button to leave sticking out of the wall it recedes into when pressed. Negative values make the button recede even further into the wall."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.dmg"
			string m_FriendlyName = "Blocking Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of damage done to entities that block the movement of this door, per frame."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.forceclosed"
			string m_FriendlyName = "Force Closed"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, this door will close no matter what. Useful for doors that have to close even if the player tries to block them with objects."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.ignoredebris"
			string m_FriendlyName = "Ignore Debris"
			string m_TooltipOverride = ""
			string m_HelpText = "If set this will change the door\'s collision group to one that ignore collisions with debris objects (note that this is not compatible with the non-solid-to-player spawnflag)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.message"
			string m_FriendlyName = "Message If Triggered"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.health"
			string m_FriendlyName = "Health (shoot open)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.locked_sound"
			string m_FriendlyName = "Locked Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound played when the player tries to use the door, and fails because it\'s locked."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.unlocked_sound"
			string m_FriendlyName = "Unlocked Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound played when the button is door."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.spawnpos"
			string m_FriendlyName = "Spawn Position"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.locked_sentence"
			string m_FriendlyName = "Locked Sentence"
			string m_TooltipOverride = ""
			string m_HelpText = "A sentence played when the player tries to use the door, and fails because it\'s locked."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.unlocked_sentence"
			string m_FriendlyName = "Unlocked Sentence"
			string m_TooltipOverride = ""
			string m_HelpText = "A sentence played when the door is unlocked."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.loopmovesound"
			string m_FriendlyName = "Loop Moving Sound\?"
			string m_TooltipOverride = ""
			string m_HelpText = "If set to true, the door\'s \'Start Sound\' will be continually looped until the door finishes moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.movedir"
			string m_FriendlyName = "Move Direction (Pitch Yaw Roll)"
			string m_TooltipOverride = ""
			string m_HelpText = "The direction the door will move, when it opens."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door.filtername"
			string m_FriendlyName = "Block Filter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter to use to determine entities that block the door. ( Half-Life: Source port only )"
		},
		CHelpEntry
		{
			string m_Id = "Element.func_door_rotating"
			string m_FriendlyName = "func_door_rotating"
			string m_TooltipOverride = ""
			string m_HelpText = "A brush entity for use as a rotating player-useable door."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.speed"
			string m_FriendlyName = "Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "The speed at which the door moves."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.master"
			string m_FriendlyName = "Master (Obsolete)"
			string m_TooltipOverride = ""
			string m_HelpText = "Legacy support: The name of a master entity. If the master hasn\'t been activated, this button cannot be used."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.noise1"
			string m_FriendlyName = "Start Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound to play when the door starts moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.noise2"
			string m_FriendlyName = "Stop Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound to play when the door stops moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.startclosesound"
			string m_FriendlyName = "Start Close Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "(Optional) Sound to play when the door starts closing."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.closesound"
			string m_FriendlyName = "Stop Close Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "(Optional) Sound to play when the door stops closing."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.wait"
			string m_FriendlyName = "Delay Before Reset (-1 stay)"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time, in seconds, after the door has opened before it closes. Once it has closed, it can be used again. If the value is set to -1, the door never closes itself."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.lip"
			string m_FriendlyName = "Lip"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount, in inches, of the button to leave sticking out of the wall it recedes into when pressed. Negative values make the button recede even further into the wall."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.dmg"
			string m_FriendlyName = "Blocking Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of damage done to entities that block the movement of this door, per frame."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.forceclosed"
			string m_FriendlyName = "Force Closed"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, this door will close no matter what. Useful for doors that have to close even if the player tries to block them with objects."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.ignoredebris"
			string m_FriendlyName = "Ignore Debris"
			string m_TooltipOverride = ""
			string m_HelpText = "If set this will change the door\'s collision group to one that ignore collisions with debris objects (note that this is not compatible with the non-solid-to-player spawnflag)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.message"
			string m_FriendlyName = "Message If Triggered"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.health"
			string m_FriendlyName = "Health (shoot open)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.locked_sound"
			string m_FriendlyName = "Locked Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound played when the player tries to use the door, and fails because it\'s locked."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.unlocked_sound"
			string m_FriendlyName = "Unlocked Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound played when the button is door."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.spawnpos"
			string m_FriendlyName = "Spawn Position"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.locked_sentence"
			string m_FriendlyName = "Locked Sentence"
			string m_TooltipOverride = ""
			string m_HelpText = "A sentence played when the player tries to use the door, and fails because it\'s locked."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.unlocked_sentence"
			string m_FriendlyName = "Unlocked Sentence"
			string m_TooltipOverride = ""
			string m_HelpText = "A sentence played when the door is unlocked."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.loopmovesound"
			string m_FriendlyName = "Loop Moving Sound\?"
			string m_TooltipOverride = ""
			string m_HelpText = "If set to true, the door\'s \'Start Sound\' will be continually looped until the door finishes moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.distance"
			string m_FriendlyName = "Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount, in degrees, that the button should rotate when it\'s pressed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_door_rotating.solidbsp"
			string m_FriendlyName = "Solid Type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.BaseFadeProp"
			string m_FriendlyName = "BaseFadeProp"
			string m_TooltipOverride = ""
			string m_HelpText = "BaseFadeProp"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseFadeProp.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the prop starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseFadeProp.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Max fade distance at which the prop is visible (0 = don\'t fade out)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseFadeProp.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Element.prop_door_rotating"
			string m_FriendlyName = "prop_door_rotating"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity used to place a door in the world."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.model"
			string m_FriendlyName = "World Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.skin"
			string m_FriendlyName = "Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. This is programmatically populated from the model. The FGD data is unused!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.body"
			string m_FriendlyName = "Body"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple bodygroups. Set this to a number other than 0 to use that bodygroup instead of the default."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.disableshadows"
			string m_FriendlyName = "Disable Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to disable dynamic shadows on this entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the prop starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Max fade distance at which the prop is visible (0 = don\'t fade out)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.glowstate"
			string m_FriendlyName = "Glow State"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.glowrange"
			string m_FriendlyName = "Glow Range"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow becomes visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.glowrangemin"
			string m_FriendlyName = "Glow Range Min"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow stops being visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.glowcolor"
			string m_FriendlyName = "Glow Color Override (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "Change the render color of the glow."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.slavename"
			string m_FriendlyName = "Slave Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of any doors that should be slaved to this door (i.e. should open when this one opens, and close when this one closes)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.hardware"
			string m_FriendlyName = "Hardware Type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.ajarangles"
			string m_FriendlyName = "Ajar Angles (Pitch Yaw Roll)"
			string m_TooltipOverride = ""
			string m_HelpText = "If the door \'Spawn Position\' is set to Ajar, these are the angles to spawn at, instead of being open or closed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.spawnpos"
			string m_FriendlyName = "Spawn Position"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.axis"
			string m_FriendlyName = "Hinge Axis"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.distance"
			string m_FriendlyName = "Rotation Distance (deg)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount, in degrees, that the door should rotate when opened."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.speed"
			string m_FriendlyName = "Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "The speed at which the door moves."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.soundopenoverride"
			string m_FriendlyName = "Fully Open Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound played when the door has finished opening."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.soundcloseoverride"
			string m_FriendlyName = "Fully Closed Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound played when the door has finished closing."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.soundmoveoverride"
			string m_FriendlyName = "Moving Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound played when the door starts to move."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.returndelay"
			string m_FriendlyName = "Delay Before close (-1 stay open)"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time, in seconds, after the door has opened before it closes. If the value is set to -1, the door never closes itself."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.dmg"
			string m_FriendlyName = "Damage Inflicted When Blocked"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of damage done to entities that block the movement of this door, per frame."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.health"
			string m_FriendlyName = "Health (0 = Unbreakable)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.soundlockedoverride"
			string m_FriendlyName = "Locked Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound played when the player tries to open the door, and fails because it\'s locked."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.soundunlockedoverride"
			string m_FriendlyName = "Unlocked Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "Sound played when the door is unlocked."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.rendercolor"
			string m_FriendlyName = "Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.forceclosed"
			string m_FriendlyName = "Force Closed"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, this door will close no matter what. Useful for doors that have to close even if the player tries to block them with objects."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_door_rotating.opendir"
			string m_FriendlyName = "Open Direction"
			string m_TooltipOverride = ""
			string m_HelpText = "Force the door to open only forwards or only backwards. Both directions is the standard door behavior."
		},
		CHelpEntry
		{
			string m_Id = "Element.prop_wall_breakable"
			string m_FriendlyName = "prop_wall_breakable"
			string m_TooltipOverride = ""
			string m_HelpText = "A section of wall that\'s breakable just like doors are."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_wall_breakable.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_wall_breakable.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_wall_breakable.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_wall_breakable.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_wall_breakable.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_wall_breakable.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_wall_breakable.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_wall_breakable.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_wall_breakable.model"
			string m_FriendlyName = "World Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_wall_breakable.skin"
			string m_FriendlyName = "Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. This is programmatically populated from the model. The FGD data is unused!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_wall_breakable.body"
			string m_FriendlyName = "Body"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple bodygroups. Set this to a number other than 0 to use that bodygroup instead of the default."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_wall_breakable.disableshadows"
			string m_FriendlyName = "Disable Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to disable dynamic shadows on this entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_wall_breakable.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the prop starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_wall_breakable.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Max fade distance at which the prop is visible (0 = don\'t fade out)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_wall_breakable.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_wall_breakable.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.env_cubemap"
			string m_FriendlyName = "env_cubemap"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that creates a sample point for the Cubic Environment Map."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_cubemap.cubemapsize"
			string m_FriendlyName = "Cubemap Size"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.BModelParticleSpawner"
			string m_FriendlyName = "BModelParticleSpawner"
			string m_TooltipOverride = ""
			string m_HelpText = "BModelParticleSpawner"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BModelParticleSpawner.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BModelParticleSpawner.Color"
			string m_FriendlyName = "Particle Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BModelParticleSpawner.SpawnRate"
			string m_FriendlyName = "Particle Per Second"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of particles to spawn, per second."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BModelParticleSpawner.SpeedMax"
			string m_FriendlyName = "Maximum Particle Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum speed that the particles can move after spawning."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BModelParticleSpawner.LifetimeMin"
			string m_FriendlyName = "Minimum Particle Lifetime"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum number of seconds until each particle dies. Particles live for a random duration between this and \'Maximum Particle Lifetime\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BModelParticleSpawner.LifetimeMax"
			string m_FriendlyName = "Maximum Particle Lifetime"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum number of seconds until each particle dies. Particles live for a random duration between \'Minimum Particle Lifetime\' and this."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BModelParticleSpawner.DistMax"
			string m_FriendlyName = "Maximum Visible Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which particles are visible. They fade to translucent at this distance."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BModelParticleSpawner.Frozen"
			string m_FriendlyName = "Frozen"
			string m_TooltipOverride = ""
			string m_HelpText = "When set, this entity spawns the number of particles in SpawnRate immediately, and then goes inactive."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_dustmotes"
			string m_FriendlyName = "func_dustmotes"
			string m_TooltipOverride = ""
			string m_HelpText = "A brush entity that spawns sparkling dust motes within its volume."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustmotes.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustmotes.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustmotes.Color"
			string m_FriendlyName = "Particle Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustmotes.SpawnRate"
			string m_FriendlyName = "Particle Per Second"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of particles to spawn, per second."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustmotes.SpeedMax"
			string m_FriendlyName = "Maximum Particle Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum speed that the particles can move after spawning."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustmotes.LifetimeMin"
			string m_FriendlyName = "Minimum Particle Lifetime"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum number of seconds until each particle dies. Particles live for a random duration between this and \'Maximum Particle Lifetime\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustmotes.LifetimeMax"
			string m_FriendlyName = "Maximum Particle Lifetime"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum number of seconds until each particle dies. Particles live for a random duration between \'Minimum Particle Lifetime\' and this."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustmotes.DistMax"
			string m_FriendlyName = "Maximum Visible Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which particles are visible. They fade to translucent at this distance."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustmotes.Frozen"
			string m_FriendlyName = "Frozen"
			string m_TooltipOverride = ""
			string m_HelpText = "When set, this entity spawns the number of particles in SpawnRate immediately, and then goes inactive."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustmotes.SizeMin"
			string m_FriendlyName = "Minimum Particle Size"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustmotes.SizeMax"
			string m_FriendlyName = "Maximum Particle Size"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustmotes.Alpha"
			string m_FriendlyName = "Alpha"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.func_smokevolume"
			string m_FriendlyName = "func_smokevolume"
			string m_TooltipOverride = ""
			string m_HelpText = "A brush entity that spawns smoke particles within its volume."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_smokevolume.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_smokevolume.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_smokevolume.Color1"
			string m_FriendlyName = "Particle Color1 (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_smokevolume.Color2"
			string m_FriendlyName = "Particle Color2 (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_smokevolume.material"
			string m_FriendlyName = "Material"
			string m_TooltipOverride = ""
			string m_HelpText = "The material to use for the particles"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_smokevolume.ParticleDrawWidth"
			string m_FriendlyName = "Particle Draw Width (units)"
			string m_TooltipOverride = ""
			string m_HelpText = "The size of the particles, in units/inches."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_smokevolume.ParticleSpacingDistance"
			string m_FriendlyName = "Particle Spacing Distance (units)"
			string m_TooltipOverride = ""
			string m_HelpText = "The distance between the particles inside the volume. The lower the number, the denser the particles, and the more overdraw there will be. It is best to keep it as high as you can without it looking bad."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_smokevolume.DensityRampSpeed"
			string m_FriendlyName = "Density Ramp Speed (seconds)"
			string m_TooltipOverride = ""
			string m_HelpText = "Time to go from density 0 to density 1, in seconds."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_smokevolume.RotationSpeed"
			string m_FriendlyName = "Rotation Speed (degrees/sec)"
			string m_TooltipOverride = ""
			string m_HelpText = "The speed that the particles should rotate, in degrees per second."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_smokevolume.MovementSpeed"
			string m_FriendlyName = "Movement Speed (units/sec)"
			string m_TooltipOverride = ""
			string m_HelpText = "The speed that the particles should move around, in units/inches per second."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_smokevolume.Density"
			string m_FriendlyName = "Density [0..1]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_smokevolume.MaxDrawDistance"
			string m_FriendlyName = "Max Draw Distance (0 is unlimited)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.func_dustcloud"
			string m_FriendlyName = "func_dustcloud"
			string m_TooltipOverride = ""
			string m_HelpText = "A brush entity that spawns a translucent dust cloud within its volume."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustcloud.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustcloud.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustcloud.Color"
			string m_FriendlyName = "Particle Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustcloud.SpawnRate"
			string m_FriendlyName = "Particle Per Second"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of particles to spawn, per second."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustcloud.SpeedMax"
			string m_FriendlyName = "Maximum Particle Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum speed that the particles can move after spawning."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustcloud.LifetimeMin"
			string m_FriendlyName = "Minimum Particle Lifetime"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum number of seconds until each particle dies. Particles live for a random duration between this and \'Maximum Particle Lifetime\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustcloud.LifetimeMax"
			string m_FriendlyName = "Maximum Particle Lifetime"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum number of seconds until each particle dies. Particles live for a random duration between \'Minimum Particle Lifetime\' and this."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustcloud.DistMax"
			string m_FriendlyName = "Maximum Visible Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which particles are visible. They fade to translucent at this distance."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustcloud.Frozen"
			string m_FriendlyName = "Frozen"
			string m_TooltipOverride = ""
			string m_HelpText = "When set, this entity spawns the number of particles in SpawnRate immediately, and then goes inactive."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustcloud.Alpha"
			string m_FriendlyName = "Alpha"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustcloud.SizeMin"
			string m_FriendlyName = "Minimum Particle Size"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_dustcloud.SizeMax"
			string m_FriendlyName = "Maximum Particle Size"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.env_dustpuff"
			string m_FriendlyName = "env_dustpuff"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that can emit dust puffs."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_dustpuff.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_dustpuff.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_dustpuff.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_dustpuff.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_dustpuff.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_dustpuff.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_dustpuff.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_dustpuff.scale"
			string m_FriendlyName = "Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Size of the dust puff."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_dustpuff.speed"
			string m_FriendlyName = "Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "Speed at which the dust particles should move."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_dustpuff.color"
			string m_FriendlyName = "Dust color"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.env_particlescript"
			string m_FriendlyName = "env_particlescript"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that has special animation events that can be fired by a model with an animation inside its .qc designed foruse by this entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_particlescript.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_particlescript.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_particlescript.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_particlescript.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_particlescript.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_particlescript.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_particlescript.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_particlescript.model"
			string m_FriendlyName = "Script Model"
			string m_TooltipOverride = ""
			string m_HelpText = "Model to use for animation sequences."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_effectscript"
			string m_FriendlyName = "env_effectscript"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that allows you to script special visual effects via a script file."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_effectscript.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_effectscript.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_effectscript.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_effectscript.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_effectscript.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_effectscript.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_effectscript.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_effectscript.model"
			string m_FriendlyName = "Script Model"
			string m_TooltipOverride = ""
			string m_HelpText = "Model to use for animation sequences."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_effectscript.scriptfile"
			string m_FriendlyName = "Script File"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the script to use for this model."
		},
		CHelpEntry
		{
			string m_Id = "Element.logic_auto"
			string m_FriendlyName = "logic_auto"
			string m_TooltipOverride = ""
			string m_HelpText = "Fires outputs when a map spawns. If \'Remove on fire\' flag is set the logic_auto is deleted after firing. It can be set to check a global state before firing. This allows you to only fire events based on what took place in a previous map."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_auto.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_auto.globalstate"
			string m_FriendlyName = "Global State to Read"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, this specifies a global state to check before firing. The OnMapSpawn output will only fire if the global state is set."
		},
		CHelpEntry
		{
			string m_Id = "Element.point_viewcontrol"
			string m_FriendlyName = "point_viewcontrol"
			string m_TooltipOverride = ""
			string m_HelpText = "A camera entity that controls the player\'s view. While it\'s active, the player will see out of the camera."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_viewcontrol.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_viewcontrol.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_viewcontrol.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_viewcontrol.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_viewcontrol.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_viewcontrol.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_viewcontrol.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_viewcontrol.fov"
			string m_FriendlyName = "Field of view"
			string m_TooltipOverride = ""
			string m_HelpText = "Player FOV (if Set FOV spawnflag is set)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_viewcontrol.fov_rate"
			string m_FriendlyName = "Seconds to reach FOV target"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time it should take to reach the specified FOV"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_viewcontrol.target"
			string m_FriendlyName = "Entity to Look At"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the entity that the camera should point at and track while active."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_viewcontrol.targetattachment"
			string m_FriendlyName = "Target Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, the camera will focus on the specified attachment on the \'Entity to Look At\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_viewcontrol.wait"
			string m_FriendlyName = "Hold Time"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of time the camera should control the player\'s view for, after which it deactivates itself. If the camera should stay active until told to deactive, set the \'Infinite Hold Time\' spawnflag."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_viewcontrol.moveto"
			string m_FriendlyName = "Path Corner"
			string m_TooltipOverride = ""
			string m_HelpText = "The first path corner in a track that the camera should move along once it\'s activated. If not specified, the camera won\'t move."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_viewcontrol.interpolatepositiontoplayer"
			string m_FriendlyName = "Interpolate Position To Player"
			string m_TooltipOverride = ""
			string m_HelpText = "Gradually interpolate player\'s position to here on start. (Episodic only)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_viewcontrol.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_viewcontrol.speed"
			string m_FriendlyName = "Initial Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "The starting speed that the camera moves at, if it\'s on a path track."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_viewcontrol.acceleration"
			string m_FriendlyName = "Acceleration units/sec^2"
			string m_TooltipOverride = ""
			string m_HelpText = "The speed at which the camera accelerates to path corner\'s desired speeds."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_viewcontrol.deceleration"
			string m_FriendlyName = "Stop Deceleration units/sec^2"
			string m_TooltipOverride = ""
			string m_HelpText = "The speed at which the camera decelerates to path corner\'s desired speeds."
		},
		CHelpEntry
		{
			string m_Id = "Element.point_posecontroller"
			string m_FriendlyName = "point_posecontroller"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that controls a pose parameter of a prop and cycles the pose clientside."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_posecontroller.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_posecontroller.PropName"
			string m_FriendlyName = "Prop Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the prop to control."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_posecontroller.PoseParameterName"
			string m_FriendlyName = "Pose Parameter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the pose parameter to control."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_posecontroller.PoseValue"
			string m_FriendlyName = "Pose Parameter Value"
			string m_TooltipOverride = ""
			string m_HelpText = "Normalized value for the pose parameter from 0.0 and 1.0 (maps to min and max range)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_posecontroller.InterpolationTime"
			string m_FriendlyName = "Interpolation Time"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of seconds (0.0 to 10.0) for client to match absolue pose values."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_posecontroller.InterpolationWrap"
			string m_FriendlyName = "Should wrap from 0.0 to 1.0 when interpolating."
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_posecontroller.CycleFrequency"
			string m_FriendlyName = "Cycle Frequency"
			string m_TooltipOverride = ""
			string m_HelpText = "Base cycles per second from -10.0 to 10.0."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_posecontroller.FModulationType"
			string m_FriendlyName = "Frequency Modulation Type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_posecontroller.FModTimeOffset"
			string m_FriendlyName = "Frequency Modulation Time Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Modulation time offset from -1.0f to 1.0."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_posecontroller.FModRate"
			string m_FriendlyName = "Frequency Modulation Rate"
			string m_TooltipOverride = ""
			string m_HelpText = "Modulation cycles per second from -10.0f to 10.0."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_posecontroller.FModAmplitude"
			string m_FriendlyName = "Frequency Modulation Amplitude"
			string m_TooltipOverride = ""
			string m_HelpText = "Modulation extents from 0.0f to 10.0."
		},
		CHelpEntry
		{
			string m_Id = "Element.logic_compare"
			string m_FriendlyName = "logic_compare"
			string m_TooltipOverride = ""
			string m_HelpText = "Compares an input value to another value. If the input value is less than the compare value, the OnLessThan output is fired with the input value. If the input value is equal to the compare value, the OnEqualTo output is fired with the input value. If the input value is greater than the compare value, the OnGreaterThan output is fired with the input value."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_compare.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_compare.InitialValue"
			string m_FriendlyName = "Initial value"
			string m_TooltipOverride = ""
			string m_HelpText = "Initial value for the input value."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_compare.CompareValue"
			string m_FriendlyName = "Compare value"
			string m_TooltipOverride = ""
			string m_HelpText = "The value to compare against."
		},
		CHelpEntry
		{
			string m_Id = "Element.logic_branch"
			string m_FriendlyName = "logic_branch"
			string m_TooltipOverride = ""
			string m_HelpText = "Tests a boolean value and fires an output based on whether the value is true or false. Use this entity to branch between two potential sets of events."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_branch.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_branch.InitialValue"
			string m_FriendlyName = "Initial value"
			string m_TooltipOverride = ""
			string m_HelpText = "Initial value for the boolean value (0 or 1)."
		},
		CHelpEntry
		{
			string m_Id = "Element.logic_branch_listener"
			string m_FriendlyName = "logic_branch_listener"
			string m_TooltipOverride = ""
			string m_HelpText = "Contains a list of logic_branch entities and fires outputs when the state of any of the logic_branches changes.\n\nThis entity is used to fire an event when a set of conditions are all satisfied."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_branch_listener.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_branch_listener.Branch01"
			string m_FriendlyName = "Logic Branch 01"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of one or more logic_branches (wildcards allowed)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_branch_listener.Branch02"
			string m_FriendlyName = "Logic Branch 02"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of one or more logic_branches (wildcards allowed)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_branch_listener.Branch03"
			string m_FriendlyName = "Logic Branch 03"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of one or more logic_branches (wildcards allowed)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_branch_listener.Branch04"
			string m_FriendlyName = "Logic Branch 04"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of one or more logic_branches (wildcards allowed)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_branch_listener.Branch05"
			string m_FriendlyName = "Logic Branch 05"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of one or more logic_branches (wildcards allowed)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_branch_listener.Branch06"
			string m_FriendlyName = "Logic Branch 06"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of one or more logic_branches (wildcards allowed)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_branch_listener.Branch07"
			string m_FriendlyName = "Logic Branch 07"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of one or more logic_branches (wildcards allowed)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_branch_listener.Branch08"
			string m_FriendlyName = "Logic Branch 08"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of one or more logic_branches (wildcards allowed)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_branch_listener.Branch09"
			string m_FriendlyName = "Logic Branch 09"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of one or more logic_branches (wildcards allowed)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_branch_listener.Branch10"
			string m_FriendlyName = "Logic Branch 10"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of one or more logic_branches (wildcards allowed)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_branch_listener.Branch11"
			string m_FriendlyName = "Logic Branch 11"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of one or more logic_branches (wildcards allowed)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_branch_listener.Branch12"
			string m_FriendlyName = "Logic Branch 12"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of one or more logic_branches (wildcards allowed)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_branch_listener.Branch13"
			string m_FriendlyName = "Logic Branch 13"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of one or more logic_branches (wildcards allowed)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_branch_listener.Branch14"
			string m_FriendlyName = "Logic Branch 14"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of one or more logic_branches (wildcards allowed)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_branch_listener.Branch15"
			string m_FriendlyName = "Logic Branch 15"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of one or more logic_branches (wildcards allowed)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_branch_listener.Branch16"
			string m_FriendlyName = "Logic Branch 16"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of one or more logic_branches (wildcards allowed)."
		},
		CHelpEntry
		{
			string m_Id = "Element.logic_case"
			string m_FriendlyName = "logic_case"
			string m_TooltipOverride = ""
			string m_HelpText = "Compares an input to up to 16 preset values. If the input value is the same as any of the preset values, an output corresponding to that value is fired.\n\nFor example: if Case01 is set to 2 and Case02 is set to 5, and the input value is 5, the OnCase02 output will be fired.\n\nThis entity can also be used to select from a number of random targets via the PickRandom input. One of the OnCase outputs that is connected to another entity will be picked at random and fired."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_case.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_case.Case01"
			string m_FriendlyName = "Case 01"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_case.Case02"
			string m_FriendlyName = "Case 02"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_case.Case03"
			string m_FriendlyName = "Case 03"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_case.Case04"
			string m_FriendlyName = "Case 04"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_case.Case05"
			string m_FriendlyName = "Case 05"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_case.Case06"
			string m_FriendlyName = "Case 06"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_case.Case07"
			string m_FriendlyName = "Case 07"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_case.Case08"
			string m_FriendlyName = "Case 08"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_case.Case09"
			string m_FriendlyName = "Case 09"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_case.Case10"
			string m_FriendlyName = "Case 10"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_case.Case11"
			string m_FriendlyName = "Case 11"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_case.Case12"
			string m_FriendlyName = "Case 12"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_case.Case13"
			string m_FriendlyName = "Case 13"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_case.Case14"
			string m_FriendlyName = "Case 14"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_case.Case15"
			string m_FriendlyName = "Case 15"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_case.Case16"
			string m_FriendlyName = "Case 16"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.logic_multicompare"
			string m_FriendlyName = "logic_multicompare"
			string m_TooltipOverride = ""
			string m_HelpText = "Compares a set of inputs to each other. If they are all the same, fires an OnEqual output. If any are different, fires the OnNotEqual output."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_multicompare.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_multicompare.IntegerValue"
			string m_FriendlyName = "Integer Value (optional)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_multicompare.ShouldComparetoValue"
			string m_FriendlyName = "Should use Integer Value"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.logic_relay"
			string m_FriendlyName = "logic_relay"
			string m_TooltipOverride = ""
			string m_HelpText = "A message forwarder. Fires an OnTrigger output when triggered, and can be disabled to prevent forwarding outputs.\n\nUseful as an intermediary between one entity and another for turning on or off an I/O connection, or as a container for holding a set of outputs that can be triggered from multiple places."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_relay.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_relay.targetname"
			string m_FriendlyName = "targetname"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_relay.TriggerOnce"
			string m_FriendlyName = "Trigger Once"
			string m_TooltipOverride = ""
			string m_HelpText = "Deletes the logic relay after firing an OnTrigger() or a connected OnSpawn() output"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_relay.FastRetrigger"
			string m_FriendlyName = "Fast Retrigger"
			string m_TooltipOverride = ""
			string m_HelpText = "Without this, the logic_relay will wait until all inputs connected to OnTrigger() have fired before retriggering"
		},
		CHelpEntry
		{
			string m_Id = "Element.logic_timer"
			string m_FriendlyName = "logic_timer"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that fires a timer event at regular, or random, intervals. It can also be set to oscillate betweena high and low end, in which case it will fire alternating high/low outputs each time it fires."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_timer.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_timer.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_timer.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_timer.UseRandomTime"
			string m_FriendlyName = "Use Random Time"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_timer.LowerRandomBound"
			string m_FriendlyName = "Minimum Random Interval"
			string m_TooltipOverride = ""
			string m_HelpText = "If \'Use Random Time\' is set, this is the minimum time between timer fires. The time will be a random number between this and the \'Maximum Random Interval\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_timer.UpperRandomBound"
			string m_FriendlyName = "Maximum Random Interval"
			string m_TooltipOverride = ""
			string m_HelpText = "If \'Use Random Time\' is set, this is the maximum time between timer fires. The time will be a random number between the \'Minimum Random Interval\' and this."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_timer.RefireTime"
			string m_FriendlyName = "Refire Interval"
			string m_TooltipOverride = ""
			string m_HelpText = "If \'Use Random Time\' isn\'t set, this is the time between timer fires, in seconds."
		},
		CHelpEntry
		{
			string m_Id = "Element.hammer_updateignorelist"
			string m_FriendlyName = "hammer_updateignorelist"
			string m_TooltipOverride = ""
			string m_HelpText = "Specifies entities that are to be ignored by the hammer_update_safe_entities console command. Enter the targetnames of entities that you want to exclude into the list of fields here. Several of these may exist in a map."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.hammer_updateignorelist.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.hammer_updateignorelist.IgnoredName01"
			string m_FriendlyName = "IgnoredName 01"
			string m_TooltipOverride = ""
			string m_HelpText = "Do not send this entity\'s information back to hammer during hammer_update_safe_entities"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.hammer_updateignorelist.IgnoredName02"
			string m_FriendlyName = "IgnoredName 02"
			string m_TooltipOverride = ""
			string m_HelpText = "Do not send this entity\'s information back to hammer during hammer_update_safe_entities"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.hammer_updateignorelist.IgnoredName03"
			string m_FriendlyName = "IgnoredName 03"
			string m_TooltipOverride = ""
			string m_HelpText = "Do not send this entity\'s information back to hammer during hammer_update_safe_entities"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.hammer_updateignorelist.IgnoredName04"
			string m_FriendlyName = "IgnoredName 04"
			string m_TooltipOverride = ""
			string m_HelpText = "Do not send this entity\'s information back to hammer during hammer_update_safe_entities"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.hammer_updateignorelist.IgnoredName05"
			string m_FriendlyName = "IgnoredName 05"
			string m_TooltipOverride = ""
			string m_HelpText = "Do not send this entity\'s information back to hammer during hammer_update_safe_entities"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.hammer_updateignorelist.IgnoredName06"
			string m_FriendlyName = "IgnoredName 06"
			string m_TooltipOverride = ""
			string m_HelpText = "Do not send this entity\'s information back to hammer during hammer_update_safe_entities"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.hammer_updateignorelist.IgnoredName07"
			string m_FriendlyName = "IgnoredName 07"
			string m_TooltipOverride = ""
			string m_HelpText = "Do not send this entity\'s information back to hammer during hammer_update_safe_entities"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.hammer_updateignorelist.IgnoredName08"
			string m_FriendlyName = "IgnoredName 08"
			string m_TooltipOverride = ""
			string m_HelpText = "Do not send this entity\'s information back to hammer during hammer_update_safe_entities"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.hammer_updateignorelist.IgnoredName09"
			string m_FriendlyName = "IgnoredName 09"
			string m_TooltipOverride = ""
			string m_HelpText = "Do not send this entity\'s information back to hammer during hammer_update_safe_entities"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.hammer_updateignorelist.IgnoredName10"
			string m_FriendlyName = "IgnoredName 10"
			string m_TooltipOverride = ""
			string m_HelpText = "Do not send this entity\'s information back to hammer during hammer_update_safe_entities"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.hammer_updateignorelist.IgnoredName11"
			string m_FriendlyName = "IgnoredName 11"
			string m_TooltipOverride = ""
			string m_HelpText = "Do not send this entity\'s information back to hammer during hammer_update_safe_entities"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.hammer_updateignorelist.IgnoredName12"
			string m_FriendlyName = "IgnoredName 12"
			string m_TooltipOverride = ""
			string m_HelpText = "Do not send this entity\'s information back to hammer during hammer_update_safe_entities"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.hammer_updateignorelist.IgnoredName13"
			string m_FriendlyName = "IgnoredName 13"
			string m_TooltipOverride = ""
			string m_HelpText = "Do not send this entity\'s information back to hammer during hammer_update_safe_entities"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.hammer_updateignorelist.IgnoredName14"
			string m_FriendlyName = "IgnoredName 14"
			string m_TooltipOverride = ""
			string m_HelpText = "Do not send this entity\'s information back to hammer during hammer_update_safe_entities"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.hammer_updateignorelist.IgnoredName15"
			string m_FriendlyName = "IgnoredName 15"
			string m_TooltipOverride = ""
			string m_HelpText = "Do not send this entity\'s information back to hammer during hammer_update_safe_entities"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.hammer_updateignorelist.IgnoredName16"
			string m_FriendlyName = "IgnoredName 16"
			string m_TooltipOverride = ""
			string m_HelpText = "Do not send this entity\'s information back to hammer during hammer_update_safe_entities"
		},
		CHelpEntry
		{
			string m_Id = "Element.logic_collision_pair"
			string m_FriendlyName = "logic_collision_pair"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that can be used to enables/disable vphysics collisions between two target entities."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_collision_pair.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_collision_pair.attach1"
			string m_FriendlyName = "Attachment 1"
			string m_TooltipOverride = ""
			string m_HelpText = "The first entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_collision_pair.attach2"
			string m_FriendlyName = "Attachment 2"
			string m_TooltipOverride = ""
			string m_HelpText = "The second entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_collision_pair.startdisabled"
			string m_FriendlyName = "Start with collisions disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.env_microphone"
			string m_FriendlyName = "env_microphone"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that acts as a microphone. It works in one of two modes. If it has a \'Speaker\' set, it picks up all sounds within the specified sound range, and rebroadcasts them through the Speaker entity. In this Speaker mode, it ignores the Hears X spawnflags and does not fire the SoundLevel output. If it has no Speaker set, it measures the sound level at a point, and outputs the sound level as a value between 0 and 1. In Measuring mode, it only hears sounds that match the Hear X spawnflags."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_microphone.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_microphone.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_microphone.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_microphone.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_microphone.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_microphone.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_microphone.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_microphone.target"
			string m_FriendlyName = "Measure target"
			string m_TooltipOverride = ""
			string m_HelpText = "If the speaker is in Measuring mode, this is the name of the entity where the sound level is to be measured."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_microphone.SpeakerName"
			string m_FriendlyName = "Speaker target"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of an info_target entity through which to play any sounds heard by this microphone. If specified, the microphone will consider itself in Speaker mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_microphone.ListenFilter"
			string m_FriendlyName = "Listen Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of an filter entity which specifies the only entities the microphone can hear. Sounds emitted by other entities will not be heard."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_microphone.speaker_dsp_preset"
			string m_FriendlyName = "Speaker DSP Preset"
			string m_TooltipOverride = ""
			string m_HelpText = "Only useful in Speaker mode. If specified, when the microphone is enabled, it\'ll set the global dsp_speaker preset to this value. Sounds played back through speakers will then be affected by the selected DSP."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_microphone.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_microphone.Sensitivity"
			string m_FriendlyName = "Sensitivity (0 - 10)"
			string m_TooltipOverride = ""
			string m_HelpText = "Microphone sensitivity, 0=deaf, 1=default, 10=extremely sensitive). Only applicable in Measuring mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_microphone.SmoothFactor"
			string m_FriendlyName = "Smoothing (0 - 1)"
			string m_TooltipOverride = ""
			string m_HelpText = "Smoothing factor, 0=no smoothing, 1=maximum smoothing). Only applicable in Measuring mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_microphone.MaxRange"
			string m_FriendlyName = "Maximum hearing range (0=infinite)"
			string m_TooltipOverride = ""
			string m_HelpText = "Sounds beyond this range won\'t be heard, irrelevant of attenuation. WARNING: setting this to zero (or a value > 1024) when the microphone is in Speaker mode can be very bad for performance!!"
		},
		CHelpEntry
		{
			string m_Id = "Element.math_remap"
			string m_FriendlyName = "math_remap"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that remaps a range of input values to a given range of output values."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.math_remap.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.math_remap.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.math_remap.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.math_remap.in1"
			string m_FriendlyName = "Minimum Valid Input Value"
			string m_TooltipOverride = ""
			string m_HelpText = "Input values below this value will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.math_remap.in2"
			string m_FriendlyName = "Maximum Valid Input Value"
			string m_TooltipOverride = ""
			string m_HelpText = "Input values above this value will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.math_remap.out1"
			string m_FriendlyName = "Output Value When Input Is Min."
			string m_TooltipOverride = ""
			string m_HelpText = "When the input value is equal to \'Minimum Valid Input Value\', this is the output value."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.math_remap.out2"
			string m_FriendlyName = "Output Value When Input Is Max."
			string m_TooltipOverride = ""
			string m_HelpText = "When the input value is equal to \'Maximum Valid Input Value\', this is the output value."
		},
		CHelpEntry
		{
			string m_Id = "Element.math_colorblend"
			string m_FriendlyName = "math_colorblend"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to create a blend between two colors for controlling the color of another entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.math_colorblend.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.math_colorblend.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.math_colorblend.inmin"
			string m_FriendlyName = "Minimum Valid Input Value"
			string m_TooltipOverride = ""
			string m_HelpText = "Input values below this value will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.math_colorblend.inmax"
			string m_FriendlyName = "Maximum Valid Input Value"
			string m_TooltipOverride = ""
			string m_HelpText = "Input values above this value will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.math_colorblend.colormin"
			string m_FriendlyName = "Output RGB color when input is min."
			string m_TooltipOverride = ""
			string m_HelpText = "When the input value is equal to \'Minimum Valid Input Value\', this is the output RGB color."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.math_colorblend.colormax"
			string m_FriendlyName = "Output RGB color when input is max."
			string m_TooltipOverride = ""
			string m_HelpText = "When the input value is equal to \'Maximum Valid Input Value\', this is the output RGB color."
		},
		CHelpEntry
		{
			string m_Id = "Element.math_counter"
			string m_FriendlyName = "math_counter"
			string m_TooltipOverride = ""
			string m_HelpText = "Holds a numeric value and performs arithmetic operations upon it. If either the minimum or maximum legal value is nonzero, OutValue will be clamped to the legal range, and the OnHitMin/OnHitMax outputs will be fired at the appropriate times. If both min and max are set to zero, no clamping is performed and only the OutValue output will be fired."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.math_counter.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.math_counter.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.math_counter.startvalue"
			string m_FriendlyName = "Initial Value"
			string m_TooltipOverride = ""
			string m_HelpText = "Starting value for the counter."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.math_counter.min"
			string m_FriendlyName = "Minimum Legal Value"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum legal value for the counter. If min=0 and max=0, no clamping is performed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.math_counter.max"
			string m_FriendlyName = "Maximum Legal Value"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum legal value for the counter. If min=0 and max=0, no clamping is performed."
		},
		CHelpEntry
		{
			string m_Id = "Element.logic_lineto"
			string m_FriendlyName = "logic_lineto"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that calculates and outputs a vector from one entity to another."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_lineto.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_lineto.source"
			string m_FriendlyName = "Start entity"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the entity the line should start from."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_lineto.target"
			string m_FriendlyName = "End entity"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the entity that line should end at."
		},
		CHelpEntry
		{
			string m_Id = "Element.logic_navigation"
			string m_FriendlyName = "logic_navigation"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that is used to set navigation properties on other entities. Useful to make NPCs ignore physics props in their way that they can easily push."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_navigation.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_navigation.target"
			string m_FriendlyName = "Navigation Entity"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_navigation.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_navigation.navprop"
			string m_FriendlyName = "Nav Property"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.logic_autosave"
			string m_FriendlyName = "logic_autosave"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that is used to force an autosave."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_autosave.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_autosave.NewLevelUnit"
			string m_FriendlyName = "Force New Level Unit"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, the save will discard any savedata from previous levels, for the purpose of keeping savegame filesizes down. Can only be safely used if there is no way for the player to return to previous levels."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_autosave.MinimumHitPoints"
			string m_FriendlyName = "Minimum Hit Points"
			string m_TooltipOverride = ""
			string m_HelpText = "Don\'t save dangerous when player has less than this many hitpoints."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_autosave.MinHitPointsToCommit"
			string m_FriendlyName = "Minimum Hit Points to Commit"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum hitpoints required to commit to save. The save will be made if you have at least Minimum Hit Points, but when the autosave timer expires, the autosave is only kept if you have at least Min Hitpoints to Commit."
		},
		CHelpEntry
		{
			string m_Id = "Element.logic_active_autosave"
			string m_FriendlyName = "logic_active_autosave"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that is used to look for opportunities to autosave."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_active_autosave.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_active_autosave.MinimumHitPoints"
			string m_FriendlyName = "Initiation Hit Points"
			string m_TooltipOverride = ""
			string m_HelpText = "Start looking for an opportunity to save if player drops below this hitpoint level."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_active_autosave.TriggerHitPoints"
			string m_FriendlyName = "Trigger Hit Points"
			string m_TooltipOverride = ""
			string m_HelpText = "If started looking for an opportunity, save when hitpoints reach this level."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_active_autosave.TimeToTrigget"
			string m_FriendlyName = "Time to trigger"
			string m_TooltipOverride = ""
			string m_HelpText = "If > 0, how long to try and get a save off before giving up"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_active_autosave.DangerousTime"
			string m_FriendlyName = "Dangerous time"
			string m_TooltipOverride = ""
			string m_HelpText = "If 0, just autosave. Otherwise, do an autosavedangerous with this time threshold"
		},
		CHelpEntry
		{
			string m_Id = "Element.point_template"
			string m_FriendlyName = "point_template"
			string m_TooltipOverride = ""
			string m_HelpText = "Turns an entity, or set of entities, into a single template that can be instanced anywhere, and multiple times. If there are interdependencies (entity I/O, hierarchy, or other name references) between the entities in the template, the entities in the template will have their names changed and the interdependencies will be reconnected to the changes names. The name change format is as follows: \'<original name>&0000\', where the 0000 will be replaced with the current global template instance, so wildcard searches for \'<original name>*\' will still find them.\nIf you don\'t want the name fixup to happen, because you\'re only spawning the template once, or you want inputs to trigger all instances of the template, check the \'Preserve entity names\' spawnflag. \nTo spawn the template in other places, use an env_entity_maker."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_template.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_template.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_template.Template01"
			string m_FriendlyName = "Template 1"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_template.Template02"
			string m_FriendlyName = "Template 2"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_template.Template03"
			string m_FriendlyName = "Template 3"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_template.Template04"
			string m_FriendlyName = "Template 4"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_template.Template05"
			string m_FriendlyName = "Template 5"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_template.Template06"
			string m_FriendlyName = "Template 6"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_template.Template07"
			string m_FriendlyName = "Template 7"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_template.Template08"
			string m_FriendlyName = "Template 8"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_template.Template09"
			string m_FriendlyName = "Template 9"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_template.Template10"
			string m_FriendlyName = "Template 10"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_template.Template11"
			string m_FriendlyName = "Template 11"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_template.Template12"
			string m_FriendlyName = "Template 12"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_template.Template13"
			string m_FriendlyName = "Template 13"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_template.Template14"
			string m_FriendlyName = "Template 14"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_template.Template15"
			string m_FriendlyName = "Template 15"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_template.Template16"
			string m_FriendlyName = "Template 16"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.env_entity_maker"
			string m_FriendlyName = "env_entity_maker"
			string m_TooltipOverride = ""
			string m_HelpText = "Spawns the specified entity template at its origin. If set to auto-spawn, it will spawn the template whenever there\'s room and the player is looking elsewhere."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_entity_maker.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_entity_maker.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_entity_maker.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_entity_maker.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_entity_maker.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_entity_maker.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_entity_maker.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_entity_maker.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_entity_maker.EntityTemplate"
			string m_FriendlyName = "Point_template To Spawn"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the point_template to spawn here."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_entity_maker.PostSpawnSpeed"
			string m_FriendlyName = "PostSpawn Movement Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, all the entities created in the template will move this fast in the specified PostSpawn Movement Direction."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_entity_maker.PostSpawnDirection"
			string m_FriendlyName = "PostSpawn Movement Direction"
			string m_TooltipOverride = ""
			string m_HelpText = "If a PostSpawn Movement Speed is specified, all the entities created in the template will move in this direction."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_entity_maker.PostSpawnDirectionVariance"
			string m_FriendlyName = "PostSpawn Direction Variance"
			string m_TooltipOverride = ""
			string m_HelpText = "This variance is applied to the PostSpawn Movement Direction for each spawned entity in the template. Use it to apply some randomness to the directions."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_entity_maker.PostSpawnInheritAngles"
			string m_FriendlyName = "PostSpawn Inherit Angles"
			string m_TooltipOverride = ""
			string m_HelpText = "If in hierarchy, is spawn direction in world space, or object local space of parent"
		},
		CHelpEntry
		{
			string m_Id = "Element.BaseFilter"
			string m_FriendlyName = "BaseFilter"
			string m_TooltipOverride = ""
			string m_HelpText = "BaseFilter"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseFilter.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseFilter.Negated"
			string m_FriendlyName = "Filter mode"
			string m_TooltipOverride = ""
			string m_HelpText = "If set to Allow, only entities who match the criteria will pass the filter. If set to Disallow, only entities who do NOT match the criteria will pass the filter."
		},
		CHelpEntry
		{
			string m_Id = "Element.filter_multi"
			string m_FriendlyName = "filter_multi"
			string m_TooltipOverride = ""
			string m_HelpText = "A filter that tests the activator against multiple filters. This allows you to build more complex filters, such as\'Allow anyone on Team 1 who is also class engineer\', or \'Allow everyone except classes npc_zombie and npc_headcrab\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_multi.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_multi.Negated"
			string m_FriendlyName = "Negate Outcome"
			string m_TooltipOverride = ""
			string m_HelpText = "Whether to negate the result of the subfilters, after combining them using the Logic Type chosen.\nNegating the outcome using the AND logic type means that any subfilter must fail for this filter to pass.\nNegating the outcome using the OR logic type means that all subfilters must fail for this filter to pass."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_multi.filtertype"
			string m_FriendlyName = "Logic Type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_multi.Filter01"
			string m_FriendlyName = "Filter 1"
			string m_TooltipOverride = ""
			string m_HelpText = "Activator filter to test."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_multi.Filter02"
			string m_FriendlyName = "Filter 2"
			string m_TooltipOverride = ""
			string m_HelpText = "Activator filter to test."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_multi.Filter03"
			string m_FriendlyName = "Filter 3"
			string m_TooltipOverride = ""
			string m_HelpText = "Activator filter to test."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_multi.Filter04"
			string m_FriendlyName = "Filter 4"
			string m_TooltipOverride = ""
			string m_HelpText = "Activator filter to test."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_multi.Filter05"
			string m_FriendlyName = "Filter 5"
			string m_TooltipOverride = ""
			string m_HelpText = "Activator filter to test."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_multi.Filter06"
			string m_FriendlyName = "Filter 6"
			string m_TooltipOverride = ""
			string m_HelpText = "Activator filter to test."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_multi.Filter07"
			string m_FriendlyName = "Filter 7"
			string m_TooltipOverride = ""
			string m_HelpText = "Activator filter to test."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_multi.Filter08"
			string m_FriendlyName = "Filter 8"
			string m_TooltipOverride = ""
			string m_HelpText = "Activator filter to test."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_multi.Filter09"
			string m_FriendlyName = "Filter 9"
			string m_TooltipOverride = ""
			string m_HelpText = "Activator filter to test."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_multi.Filter10"
			string m_FriendlyName = "Filter 10"
			string m_TooltipOverride = ""
			string m_HelpText = "Activator filter to test."
		},
		CHelpEntry
		{
			string m_Id = "Element.filter_activator_name"
			string m_FriendlyName = "filter_activator_name"
			string m_TooltipOverride = ""
			string m_HelpText = "A filter that filters by the name of the activator."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_activator_name.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_activator_name.Negated"
			string m_FriendlyName = "Filter mode"
			string m_TooltipOverride = ""
			string m_HelpText = "If set to Allow, only entities who match the criteria will pass the filter. If set to Disallow, only entities who do NOT match the criteria will pass the filter."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_activator_name.filtername"
			string m_FriendlyName = "Filter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name to filter by. If the filter mode is Allow, only entities whose name matches the given string will pass the filter. If the filter mode is Disallow, all entities EXCEPT those whose name matches the string will pass the filter."
		},
		CHelpEntry
		{
			string m_Id = "Element.filter_activator_model"
			string m_FriendlyName = "filter_activator_model"
			string m_TooltipOverride = ""
			string m_HelpText = "A filter that filters by the model of the activator."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_activator_model.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_activator_model.Negated"
			string m_FriendlyName = "Filter mode"
			string m_TooltipOverride = ""
			string m_HelpText = "If set to Allow, only entities who match the criteria will pass the filter. If set to Disallow, only entities who do NOT match the criteria will pass the filter."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_activator_model.model"
			string m_FriendlyName = "Filter Model"
			string m_TooltipOverride = ""
			string m_HelpText = "The model to filter by. If the filter mode is Allow, only entities whose model matches the given string will pass the filter. If the filter mode is Disallow, all entities EXCEPT those whose model matches the string will pass the filter."
		},
		CHelpEntry
		{
			string m_Id = "Element.filter_activator_context"
			string m_FriendlyName = "filter_activator_context"
			string m_TooltipOverride = ""
			string m_HelpText = "A filter that filters by a context on the activator."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_activator_context.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_activator_context.Negated"
			string m_FriendlyName = "Filter mode"
			string m_TooltipOverride = ""
			string m_HelpText = "If set to Allow, only entities who match the criteria will pass the filter. If set to Disallow, only entities who do NOT match the criteria will pass the filter."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_activator_context.ResponseContext"
			string m_FriendlyName = "Filter Context"
			string m_TooltipOverride = ""
			string m_HelpText = "The context to filter by. If the filter mode is Allow, only entities that have a context matching the given string, of any value, will pass the filter. If the filter mode is Disallow, all entities EXCEPT those whose context matches the string will pass the filter."
		},
		CHelpEntry
		{
			string m_Id = "Element.filter_activator_class"
			string m_FriendlyName = "filter_activator_class"
			string m_TooltipOverride = ""
			string m_HelpText = "A filter that filters by the class name of the activator."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_activator_class.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_activator_class.Negated"
			string m_FriendlyName = "Filter mode"
			string m_TooltipOverride = ""
			string m_HelpText = "If set to Allow, only entities who match the criteria will pass the filter. If set to Disallow, only entities who do NOT match the criteria will pass the filter."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_activator_class.filterclass"
			string m_FriendlyName = "Filter Classname"
			string m_TooltipOverride = ""
			string m_HelpText = "The class name to filter by. If the filter mode is Allow, only entities whose class name matches the given string will pass the filter. If the filter mode is Disallow, all entities EXCEPT those whose class name matches the given string will pass the filter."
		},
		CHelpEntry
		{
			string m_Id = "Element.filter_activator_mass_greater"
			string m_FriendlyName = "filter_activator_mass_greater"
			string m_TooltipOverride = ""
			string m_HelpText = "A filter that filters by the mass of the activator."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_activator_mass_greater.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_activator_mass_greater.Negated"
			string m_FriendlyName = "Filter mode"
			string m_TooltipOverride = ""
			string m_HelpText = "If set to Allow, only entities who match the criteria will pass the filter. If set to Disallow, only entities who do NOT match the criteria will pass the filter."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_activator_mass_greater.filtermass"
			string m_FriendlyName = "Filter Mass"
			string m_TooltipOverride = ""
			string m_HelpText = "The mass to filter by. If the filter mode is Allow, only entities whose mass is greater than the give float will pass the filter. If the filter mode is Disallow, all entities EXCEPT those whose mass is greater than the given float will pass the filter."
		},
		CHelpEntry
		{
			string m_Id = "Element.filter_damage_type"
			string m_FriendlyName = "filter_damage_type"
			string m_TooltipOverride = ""
			string m_HelpText = "A damage filter that filters by the type of damage inflicted. This can only be used as a damage filter, not as an activator filter."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_damage_type.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_damage_type.Negated"
			string m_FriendlyName = "Filter mode"
			string m_TooltipOverride = ""
			string m_HelpText = "If set to Allow, only entities who match the criteria will pass the filter. If set to Disallow, only entities who do NOT match the criteria will pass the filter."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_damage_type.damagetype"
			string m_FriendlyName = "Damage type"
			string m_TooltipOverride = ""
			string m_HelpText = "The damage type to filter by. If the filter mode is Allow, only damage types that match will pass the filter. If the filter mode is Disallow, all damage types EXCEPT those who match will pass the filter."
		},
		CHelpEntry
		{
			string m_Id = "Element.filter_enemy"
			string m_FriendlyName = "filter_enemy"
			string m_TooltipOverride = ""
			string m_HelpText = "A filter that filters a potential enemy entity by a set of criteria."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_enemy.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_enemy.Negated"
			string m_FriendlyName = "Filter mode"
			string m_TooltipOverride = ""
			string m_HelpText = "If set to Allow, only entities who match the criteria will pass the filter. If set to Disallow, only entities who do NOT match the criteria will pass the filter."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_enemy.filtername"
			string m_FriendlyName = "Name/Classname"
			string m_TooltipOverride = ""
			string m_HelpText = "The classname or entity name to filter by. If the filter mode is Allow, only entities whose class name matches the given string will pass the filter. If the filter mode is Disallow, all entities EXCEPT those whose class name matches the given string will pass the filter."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_enemy.filter_radius"
			string m_FriendlyName = "Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Radius by which to test the proximity of the enemy.  If the filter mode is Allow, only entities whose distance is equal to or closer than the radius will pass the filter. If the filter mode is Disallow, all entities outside the radius will pass the filter."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_enemy.filter_outer_radius"
			string m_FriendlyName = "Outer Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Enemies outside this radius are considered invalid if Allow is set and valid if Disallow is set."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_enemy.filter_max_per_enemy"
			string m_FriendlyName = "Max Squadmates Per Enemy"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum number of squadmates allowed to target any given entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.filter_enemy.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.point_anglesensor"
			string m_FriendlyName = "point_anglesensor"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that detects if another entity points in a given direction for a period of time."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_anglesensor.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_anglesensor.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_anglesensor.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_anglesensor.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_anglesensor.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_anglesensor.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_anglesensor.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_anglesensor.target"
			string m_FriendlyName = "Target Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the entity whose angles will be sensed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_anglesensor.lookatname"
			string m_FriendlyName = "Look At Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "The entity we want to check to see if the Target Entity is looking at."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_anglesensor.duration"
			string m_FriendlyName = "Duration"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of time the Target Entity must look at the \'Look at Entity\' to trigger this entity, in seconds."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_anglesensor.tolerance"
			string m_FriendlyName = "Tolerance"
			string m_TooltipOverride = ""
			string m_HelpText = "The tolerance, in degrees, in the checking to determine when the Target Entity is looking at the Look At Entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_anglesensor.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.point_angularvelocitysensor"
			string m_FriendlyName = "point_angularvelocitysensor"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that detects if another entity\'s angular velocity meets or exceeds a threshold value."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_angularvelocitysensor.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_angularvelocitysensor.target"
			string m_FriendlyName = "Target Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the entity whose angular velocity will be sensed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_angularvelocitysensor.threshold"
			string m_FriendlyName = "Threshold Velocity"
			string m_TooltipOverride = ""
			string m_HelpText = "The threshold angular velocity to compare against, in degrees per second."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_angularvelocitysensor.fireinterval"
			string m_FriendlyName = "Fire Interval"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular velocity must cross the threshold for at least this long to fire."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_angularvelocitysensor.axis"
			string m_FriendlyName = "Axis"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_angularvelocitysensor.usehelper"
			string m_FriendlyName = "Use Axis Helper"
			string m_TooltipOverride = ""
			string m_HelpText = "Use axis helper to determine rotation values (clockwise/counter-clockwise)."
		},
		CHelpEntry
		{
			string m_Id = "Element.point_velocitysensor"
			string m_FriendlyName = "point_velocitysensor"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that detects and outputs an entity\'s velocity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_velocitysensor.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_velocitysensor.target"
			string m_FriendlyName = "Target Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the entity whose velocity will be sensed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_velocitysensor.axis"
			string m_FriendlyName = "Measurement Axis"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_velocitysensor.enabled"
			string m_FriendlyName = "Start Enabled"
			string m_TooltipOverride = ""
			string m_HelpText = "Whether or not to start enabled and active."
		},
		CHelpEntry
		{
			string m_Id = "Element.point_proximity_sensor"
			string m_FriendlyName = "point_proximity_sensor"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that detects another entity\'s proximity to a target position."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_proximity_sensor.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_proximity_sensor.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_proximity_sensor.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_proximity_sensor.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_proximity_sensor.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_proximity_sensor.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_proximity_sensor.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_proximity_sensor.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_proximity_sensor.target"
			string m_FriendlyName = "Target Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the entity whose angles will be sensed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_proximity_sensor.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.point_teleport"
			string m_FriendlyName = "point_teleport"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that teleports a target entity to this position and angles. If \'Teleport Home\' spawn flag is set, teleports the target entity to its spawn position instead.If object is physically simulated, simulation is turned off when teleported."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_teleport.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_teleport.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_teleport.target"
			string m_FriendlyName = "Entity To Teleport"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the entity that will be teleported."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_teleport.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.point_hurt"
			string m_FriendlyName = "point_hurt"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that does damage to all entities in a radius around itself, with a specified delay.If \'Target Entity\' is specified, the damage is only done to that entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_hurt.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_hurt.DamageTarget"
			string m_FriendlyName = "Target Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, only this entity will take damage. Otherwise, all entities within the Radius will take damage."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_hurt.DamageRadius"
			string m_FriendlyName = "Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "All entities within this radius of this entity will take damage. If a \'Target Entity\' is specified, only that entity will take damage."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_hurt.Damage"
			string m_FriendlyName = "Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "Damage done to all affected entities each time this entity fires."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_hurt.DamageDelay"
			string m_FriendlyName = "Delay"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay between refires, in seconds."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_hurt.DamageType"
			string m_FriendlyName = "Damage Type"
			string m_TooltipOverride = ""
			string m_HelpText = "Type of damage to inflict on entities damaged."
		},
		CHelpEntry
		{
			string m_Id = "Element.point_playermoveconstraint"
			string m_FriendlyName = "point_playermoveconstraint"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that constrains players to a radius around itself, slowing them down the closer they get to the edge of the radius."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_playermoveconstraint.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_playermoveconstraint.radius"
			string m_FriendlyName = "Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Radius to constrain players to."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_playermoveconstraint.width"
			string m_FriendlyName = "Constraint Width"
			string m_TooltipOverride = ""
			string m_HelpText = "Width of the constraint edge. This is the distance in which to start slowing players down as they approach the edge of the radius."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_playermoveconstraint.speedfactor"
			string m_FriendlyName = "Speed Factor"
			string m_TooltipOverride = ""
			string m_HelpText = "Factor applied to the player\'s max speed as they approach the radius edge."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_physbox"
			string m_FriendlyName = "func_physbox"
			string m_TooltipOverride = ""
			string m_HelpText = "A brush entity that\'s physically simulated."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.ExplodeDamage"
			string m_FriendlyName = "Explosion Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \'Explosion Radius\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.ExplodeRadius"
			string m_FriendlyName = "Explosion Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \'Explosion Damage\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.PerformanceMode"
			string m_FriendlyName = "Performance Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to limit the amount of gibs produced when this entity breaks, for performance reasons."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.propdata"
			string m_FriendlyName = "Prop Data"
			string m_TooltipOverride = ""
			string m_HelpText = "Set to the best approximation of the size and material of this entity\'s brushes. If set, it will override this entity\'s health and damage taken from various weapons. See the propdata.txt file in the scripts directory of your MOD to get a detailed list of what each entry specifies."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.health"
			string m_FriendlyName = "Strength"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of points of damage to take before breaking.  0 means don\'t break."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.material"
			string m_FriendlyName = "Material Type"
			string m_TooltipOverride = ""
			string m_HelpText = "Set to the material type of the brush. Used to decide what sounds to make when damaged, and what gibs to produce when broken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.explosion"
			string m_FriendlyName = "Gibs Direction"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to decide which direction to throw gibs when broken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.gibdir"
			string m_FriendlyName = "Precise Gib Direction"
			string m_TooltipOverride = ""
			string m_HelpText = "Specifies the direction to throw gibs when this breakable breaks. Be sure to select Use Precise Gib Dir in the Gibs Direction field!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.nodamageforces"
			string m_FriendlyName = "Damaging it Doesn\'t Push It"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to determine whether or not damage should cause the brush to move."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.gibmodel"
			string m_FriendlyName = "Gib Model"
			string m_TooltipOverride = ""
			string m_HelpText = "Used by HL1Port to specify a custom gib model to break into, overriding the \'Material Type\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.spawnobject"
			string m_FriendlyName = "Spawn On Break"
			string m_TooltipOverride = ""
			string m_HelpText = "When broken, an entity of the selected type will be created."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.explodemagnitude"
			string m_FriendlyName = "Explode Magnitude"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.pressuredelay"
			string m_FriendlyName = "Pressure Delay"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay, in seconds, after \'broken\' by pressure before breaking apart (allows for sound to play before breaking apart)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.Damagetype"
			string m_FriendlyName = "Impact Damage Type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.massScale"
			string m_FriendlyName = "Mass Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "A scale multiplier for the object\'s mass."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.overridescript"
			string m_FriendlyName = "Override Parameters"
			string m_TooltipOverride = ""
			string m_HelpText = "A list of physics key/value pairs that are usually in a physics prop .qc file. Format is \'key,value,key,value,etc\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.damagetoenablemotion"
			string m_FriendlyName = "Health Level to Override Motion"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, this object will start motion disabled. Once its health has dropped below this specified amount, it will enable motion."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.forcetoenablemotion"
			string m_FriendlyName = "Physics Impact Force to Override Motion"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, this object will start motion disabled. Any impact that imparts a force greater than this value on the physbox will enable motion."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.preferredcarryangles"
			string m_FriendlyName = "Preferred Player-carry Angles"
			string m_TooltipOverride = ""
			string m_HelpText = "If the \'Use Preferred Carry Angles\' spawnflag is set, this angle is the angle which the object should orient to when the player picks it up, with the physgun or +USE."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_physbox.notsolid"
			string m_FriendlyName = "Not solid to world"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.TwoObjectPhysics"
			string m_FriendlyName = "TwoObjectPhysics"
			string m_TooltipOverride = ""
			string m_HelpText = "TwoObjectPhysics"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TwoObjectPhysics.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TwoObjectPhysics.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TwoObjectPhysics.attach1"
			string m_FriendlyName = "Entity 1"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TwoObjectPhysics.attach2"
			string m_FriendlyName = "Entity 2"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TwoObjectPhysics.constraintsystem"
			string m_FriendlyName = "Constraint System Manager"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a phys_constraintsystem that this constraint should be a part of. All constraints on a set of entities should be placed in the same system, or they will fight each other during simulation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TwoObjectPhysics.forcelimit"
			string m_FriendlyName = "Force Limit to Break (lbs)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of force an impact must apply to the constraint to break it. A way of calculating this is to set it to the mass of an object that would break this constraint if it were resting on the constrainted objects."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TwoObjectPhysics.torquelimit"
			string m_FriendlyName = "Torque Limit to Break (lbs * distance)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of torque required to break the constraint. A way of calculating this is to multiply any reference mass by the resting distance (from the center of mass of the object) needed to break the constraint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TwoObjectPhysics.breaksound"
			string m_FriendlyName = "Play Sound on Break"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound played when the constraint is broken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.TwoObjectPhysics.teleportfollowdistance"
			string m_FriendlyName = "Follow teleport distance"
			string m_TooltipOverride = ""
			string m_HelpText = "If one object teleports more than this many units away it will cause the other constrained object to teleport to an appropriate relative position."
		},
		CHelpEntry
		{
			string m_Id = "Element.phys_constraintsystem"
			string m_FriendlyName = "phys_constraintsystem"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity used to manage a group of interacting constraints and keep them stable. All constraints on a set of entities should be placed in the same system, or they will fight each other during simulation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_constraintsystem.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_constraintsystem.additionaliterations"
			string m_FriendlyName = "Additional System Iterations"
			string m_TooltipOverride = ""
			string m_HelpText = "Adding iterations makes the interactions among constraints in a system tighter.  It will not compensate for errors due to collision, but will help in cases where objects of disparate mass are constrained to each other."
		},
		CHelpEntry
		{
			string m_Id = "Element.phys_keepupright"
			string m_FriendlyName = "phys_keepupright"
			string m_TooltipOverride = ""
			string m_HelpText = "A controller that tries to keep an entity facing a particular direction."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_keepupright.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_keepupright.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_keepupright.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_keepupright.attach1"
			string m_FriendlyName = "Target Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "The entity to align to the desired angles."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_keepupright.angularlimit"
			string m_FriendlyName = "Angular Limit"
			string m_TooltipOverride = ""
			string m_HelpText = "The maximum angular velocity that this controller can compensate for, in degrees per second."
		},
		CHelpEntry
		{
			string m_Id = "Element.physics_cannister"
			string m_FriendlyName = "physics_cannister"
			string m_TooltipOverride = ""
			string m_HelpText = "A physically simulated gas cannister that can have its cap shot off, at which point gas will start escaping and cause the cannister to fly around. If it takes enough damage, it will explode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.physics_cannister.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.physics_cannister.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.physics_cannister.model"
			string m_FriendlyName = "World model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.physics_cannister.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.physics_cannister.expdamage"
			string m_FriendlyName = "Explosion Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of damage done by the explosion created when the cannister blows up."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.physics_cannister.expradius"
			string m_FriendlyName = "Explosion Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "The radius of the explosion to create when the cannister blows up."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.physics_cannister.health"
			string m_FriendlyName = "Health"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of damage the cannister takes before exploding."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.physics_cannister.thrust"
			string m_FriendlyName = "Thrust"
			string m_TooltipOverride = ""
			string m_HelpText = "When the cap has been blown off, and the escaping gas is thrusting the cannister about, this is the amount of thrust generated."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.physics_cannister.fuel"
			string m_FriendlyName = "Fuel Seconds"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of time that gas leaks from the cannister before being considered empty."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.physics_cannister.rendercolor"
			string m_FriendlyName = "Smoke Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.physics_cannister.renderamt"
			string m_FriendlyName = "Smoke Alpha (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.physics_cannister.gassound"
			string m_FriendlyName = "Thruster Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "The sound played when the gas is escaping from the cannister."
		},
		CHelpEntry
		{
			string m_Id = "Element.info_constraint_anchor"
			string m_FriendlyName = "info_constraint_anchor"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity used to attach constraints to a local position on an entity. Usually constraints will attach to the center of mass of an object. Attach the desired constraint to this entity, and then parent this entity to the entity you want the constraint to apply to."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_constraint_anchor.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_constraint_anchor.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_constraint_anchor.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_constraint_anchor.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_constraint_anchor.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_constraint_anchor.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_constraint_anchor.massScale"
			string m_FriendlyName = "Amount to scale the mass of this body in the constraint solver"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.info_mass_center"
			string m_FriendlyName = "info_mass_center"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that overrides the mass center of the target physics prop, or func_physbox, by moving it to the info_mass_center\'s location."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_mass_center.target"
			string m_FriendlyName = "Target object"
			string m_TooltipOverride = ""
			string m_HelpText = "The entity whose mass center will be overridden."
		},
		CHelpEntry
		{
			string m_Id = "Element.phys_spring"
			string m_FriendlyName = "phys_spring"
			string m_TooltipOverride = ""
			string m_HelpText = "A physically simulated spring. \'Length\' is what\'s known as the \'natural spring length\'. This is how long the spring would be if it was at rest (nothing hanging on it or attached). When you attach something to the spring, it will stretch longer than its \'natural length\'. The amount of stretch is determined by the \'Sprint Constant\'. The larger the spring constant the less stretch the spring."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_spring.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_spring.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_spring.attach1"
			string m_FriendlyName = "Entity 1"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_spring.attach2"
			string m_FriendlyName = "Entity 2"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_spring.springaxis"
			string m_FriendlyName = "Spring Axis"
			string m_TooltipOverride = ""
			string m_HelpText = "Use the helper. Drag it out to match the virtual spring."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_spring.length"
			string m_FriendlyName = "Spring Length"
			string m_TooltipOverride = ""
			string m_HelpText = "How long the spring would be if it was at rest (nothing hanging on it or attached). 0 means the length of the brush."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_spring.constant"
			string m_FriendlyName = "Spring Constant"
			string m_TooltipOverride = ""
			string m_HelpText = "Stiffness of the spring.  The larger the number the less the spring will stretch."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_spring.damping"
			string m_FriendlyName = "Damping Constant"
			string m_TooltipOverride = ""
			string m_HelpText = "How much energy the spring loses.  The larger the number, the less bouncy the spring."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_spring.relativedamping"
			string m_FriendlyName = "Relative Damping Constant"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of energy the spring loses proportional to the relative velocity of the two objects the spring is attached to."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_spring.breaklength"
			string m_FriendlyName = "Break on Length"
			string m_TooltipOverride = ""
			string m_HelpText = "If the spring\'s length ever exceeds this length, the spring breaks."
		},
		CHelpEntry
		{
			string m_Id = "Element.phys_hinge"
			string m_FriendlyName = "phys_hinge"
			string m_TooltipOverride = ""
			string m_HelpText = "A physically simulated hinge. Use the helper to define the axis of rotation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.attach1"
			string m_FriendlyName = "Entity 1"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.attach2"
			string m_FriendlyName = "Entity 2"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.constraintsystem"
			string m_FriendlyName = "Constraint System Manager"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a phys_constraintsystem that this constraint should be a part of. All constraints on a set of entities should be placed in the same system, or they will fight each other during simulation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.forcelimit"
			string m_FriendlyName = "Force Limit to Break (lbs)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of force an impact must apply to the constraint to break it. A way of calculating this is to set it to the mass of an object that would break this constraint if it were resting on the constrainted objects."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.torquelimit"
			string m_FriendlyName = "Torque Limit to Break (lbs * distance)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of torque required to break the constraint. A way of calculating this is to multiply any reference mass by the resting distance (from the center of mass of the object) needed to break the constraint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.breaksound"
			string m_FriendlyName = "Play Sound on Break"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound played when the constraint is broken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.teleportfollowdistance"
			string m_FriendlyName = "Follow teleport distance"
			string m_TooltipOverride = ""
			string m_HelpText = "If one object teleports more than this many units away it will cause the other constrained object to teleport to an appropriate relative position."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.hingefriction"
			string m_FriendlyName = "Friction"
			string m_TooltipOverride = ""
			string m_HelpText = "Resistance/friction in the hinge"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.hingeaxis"
			string m_FriendlyName = "Hinge Axis"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.SystemLoadScale"
			string m_FriendlyName = "Load Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scale of the load connected to this hinge (1=just the objects directly connected)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.minSoundThreshold"
			string m_FriendlyName = "Minimum Sound Velocity"
			string m_TooltipOverride = ""
			string m_HelpText = "When travelling below this many units/sec, will not play any sound."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.maxSoundThreshold"
			string m_FriendlyName = "Full Sound Velocity"
			string m_TooltipOverride = ""
			string m_HelpText = "When travelling at this speed or above, will play sound at full volume."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.slidesoundfwd"
			string m_FriendlyName = "Travel sound (forward)"
			string m_TooltipOverride = ""
			string m_HelpText = "Play this sound when travelling forward on helper axis"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.slidesoundback"
			string m_FriendlyName = "Travel sound (backward)"
			string m_TooltipOverride = ""
			string m_HelpText = "Play this sound when travelling backward on helper axis"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.reversalsoundthresholdSmall"
			string m_FriendlyName = "Reversal sound threshold (small)"
			string m_TooltipOverride = ""
			string m_HelpText = "When accelerating by more than this many units/sec^2 opposite to direction of travel, play the small reversal sound."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.reversalsoundthresholdMedium"
			string m_FriendlyName = "Reversal sound threshold (medium)"
			string m_TooltipOverride = ""
			string m_HelpText = "When accelerating by more than this many units/sec^2 opposite to direction of travel, play the medium reversal sound."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.reversalsoundthresholdLarge"
			string m_FriendlyName = "Reversal sound threshold (large)"
			string m_TooltipOverride = ""
			string m_HelpText = "When accelerating by more than this many units/sec^2 opposite to direction of travel, play the large reversal sound."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.reversalsoundSmall"
			string m_FriendlyName = "Reversal sound (small)"
			string m_TooltipOverride = ""
			string m_HelpText = "Play this sound when making a hard reverse over the small threshold but less than medium"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.reversalsoundMedium"
			string m_FriendlyName = "Reversal sound (medium)"
			string m_TooltipOverride = ""
			string m_HelpText = "Play this sound when making a hard reverse over the medium threshold but less than large"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_hinge.reversalsoundLarge"
			string m_FriendlyName = "Reversal sound (large)"
			string m_TooltipOverride = ""
			string m_HelpText = "Play this sound when making a hard reverse over the large threshold"
		},
		CHelpEntry
		{
			string m_Id = "Element.phys_ballsocket"
			string m_FriendlyName = "phys_ballsocket"
			string m_TooltipOverride = ""
			string m_HelpText = "A constraint that keeps the position of two objects fixed, relative to the constraint\'s origin. It does not affect rotation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ballsocket.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ballsocket.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ballsocket.attach1"
			string m_FriendlyName = "Entity 1"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ballsocket.attach2"
			string m_FriendlyName = "Entity 2"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ballsocket.constraintsystem"
			string m_FriendlyName = "Constraint System Manager"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a phys_constraintsystem that this constraint should be a part of. All constraints on a set of entities should be placed in the same system, or they will fight each other during simulation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ballsocket.forcelimit"
			string m_FriendlyName = "Force Limit to Break (lbs)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of force an impact must apply to the constraint to break it. A way of calculating this is to set it to the mass of an object that would break this constraint if it were resting on the constrainted objects."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ballsocket.torquelimit"
			string m_FriendlyName = "Torque Limit to Break (lbs * distance)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of torque required to break the constraint. A way of calculating this is to multiply any reference mass by the resting distance (from the center of mass of the object) needed to break the constraint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ballsocket.breaksound"
			string m_FriendlyName = "Play Sound on Break"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound played when the constraint is broken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ballsocket.teleportfollowdistance"
			string m_FriendlyName = "Follow teleport distance"
			string m_TooltipOverride = ""
			string m_HelpText = "If one object teleports more than this many units away it will cause the other constrained object to teleport to an appropriate relative position."
		},
		CHelpEntry
		{
			string m_Id = "Element.phys_pulleyconstraint"
			string m_FriendlyName = "phys_pulleyconstraint"
			string m_TooltipOverride = ""
			string m_HelpText = "A constraint that is essentially two length constraints and two points. Imagine it as a virtual rope connected to two objects, each suspended from a pulley above them.The constraint keeps the sum of the distances between the pulley points and their suspended objects constant."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_pulleyconstraint.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_pulleyconstraint.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_pulleyconstraint.attach1"
			string m_FriendlyName = "Entity 1"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_pulleyconstraint.attach2"
			string m_FriendlyName = "Entity 2"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_pulleyconstraint.constraintsystem"
			string m_FriendlyName = "Constraint System Manager"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a phys_constraintsystem that this constraint should be a part of. All constraints on a set of entities should be placed in the same system, or they will fight each other during simulation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_pulleyconstraint.forcelimit"
			string m_FriendlyName = "Force Limit to Break (lbs)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of force an impact must apply to the constraint to break it. A way of calculating this is to set it to the mass of an object that would break this constraint if it were resting on the constrainted objects."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_pulleyconstraint.torquelimit"
			string m_FriendlyName = "Torque Limit to Break (lbs * distance)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of torque required to break the constraint. A way of calculating this is to multiply any reference mass by the resting distance (from the center of mass of the object) needed to break the constraint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_pulleyconstraint.breaksound"
			string m_FriendlyName = "Play Sound on Break"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound played when the constraint is broken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_pulleyconstraint.teleportfollowdistance"
			string m_FriendlyName = "Follow teleport distance"
			string m_TooltipOverride = ""
			string m_HelpText = "If one object teleports more than this many units away it will cause the other constrained object to teleport to an appropriate relative position."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_pulleyconstraint.addlength"
			string m_FriendlyName = "Additional Length"
			string m_TooltipOverride = ""
			string m_HelpText = "Add (or subtract) this amount to the rest length of the pulley rope."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_pulleyconstraint.gearratio"
			string m_FriendlyName = "Pulley Gear Ratio"
			string m_TooltipOverride = ""
			string m_HelpText = "Add (or subtract) this amount to the rest length of the pulley rope."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_pulleyconstraint.position2"
			string m_FriendlyName = "Pulley Position 2"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of the pulley for Entity 2. The pulley for Entity 1 is the origin of this constraint entity. Entity 1 is always suspended from pulley point 1, and Entity 2 is always suspended from pulley point 2."
		},
		CHelpEntry
		{
			string m_Id = "Element.phys_slideconstraint"
			string m_FriendlyName = "phys_slideconstraint"
			string m_TooltipOverride = ""
			string m_HelpText = "A constraint that constrains an entity along a line segment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.attach1"
			string m_FriendlyName = "Entity 1"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.attach2"
			string m_FriendlyName = "Entity 2"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.constraintsystem"
			string m_FriendlyName = "Constraint System Manager"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a phys_constraintsystem that this constraint should be a part of. All constraints on a set of entities should be placed in the same system, or they will fight each other during simulation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.forcelimit"
			string m_FriendlyName = "Force Limit to Break (lbs)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of force an impact must apply to the constraint to break it. A way of calculating this is to set it to the mass of an object that would break this constraint if it were resting on the constrainted objects."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.torquelimit"
			string m_FriendlyName = "Torque Limit to Break (lbs * distance)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of torque required to break the constraint. A way of calculating this is to multiply any reference mass by the resting distance (from the center of mass of the object) needed to break the constraint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.breaksound"
			string m_FriendlyName = "Play Sound on Break"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound played when the constraint is broken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.teleportfollowdistance"
			string m_FriendlyName = "Follow teleport distance"
			string m_TooltipOverride = ""
			string m_HelpText = "If one object teleports more than this many units away it will cause the other constrained object to teleport to an appropriate relative position."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.slideaxis"
			string m_FriendlyName = "Sliding Axis"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.slidefriction"
			string m_FriendlyName = "Friction"
			string m_TooltipOverride = ""
			string m_HelpText = "Resistance/friction in the constraint"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.SystemLoadScale"
			string m_FriendlyName = "Load Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scale of the mass load connected to this constraint (1=just the objects directly connected)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.minSoundThreshold"
			string m_FriendlyName = "Minimum Sound Velocity"
			string m_TooltipOverride = ""
			string m_HelpText = "When travelling below this many units/sec, will not play any sound."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.maxSoundThreshold"
			string m_FriendlyName = "Full Sound Velocity"
			string m_TooltipOverride = ""
			string m_HelpText = "When travelling at this speed or above, will play sound at full volume."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.slidesoundfwd"
			string m_FriendlyName = "Travel sound (forward)"
			string m_TooltipOverride = ""
			string m_HelpText = "Play this sound when travelling forward on helper axis"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.slidesoundback"
			string m_FriendlyName = "Travel sound (backward)"
			string m_TooltipOverride = ""
			string m_HelpText = "Play this sound when travelling backward on helper axis"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.reversalsoundthresholdSmall"
			string m_FriendlyName = "Reversal sound threshold (small)"
			string m_TooltipOverride = ""
			string m_HelpText = "When accelerating by more than this many units/sec^2 opposite to direction of travel, play the small reversal sound."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.reversalsoundthresholdMedium"
			string m_FriendlyName = "Reversal sound threshold (medium)"
			string m_TooltipOverride = ""
			string m_HelpText = "When accelerating by more than this many units/sec^2 opposite to direction of travel, play the medium reversal sound."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.reversalsoundthresholdLarge"
			string m_FriendlyName = "Reversal sound threshold (large)"
			string m_TooltipOverride = ""
			string m_HelpText = "When accelerating by more than this many units/sec^2 opposite to direction of travel, play the large reversal sound."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.reversalsoundSmall"
			string m_FriendlyName = "Reversal sound (small)"
			string m_TooltipOverride = ""
			string m_HelpText = "Play this sound when making a hard reverse over the small threshold but less than medium"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.reversalsoundMedium"
			string m_FriendlyName = "Reversal sound (medium)"
			string m_TooltipOverride = ""
			string m_HelpText = "Play this sound when making a hard reverse over the medium threshold but less than large"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_slideconstraint.reversalsoundLarge"
			string m_FriendlyName = "Reversal sound (large)"
			string m_TooltipOverride = ""
			string m_HelpText = "Play this sound when making a hard reverse over the large threshold"
		},
		CHelpEntry
		{
			string m_Id = "Element.phys_lengthconstraint"
			string m_FriendlyName = "phys_lengthconstraint"
			string m_TooltipOverride = ""
			string m_HelpText = "A constraint that preserves the distance between two entities. If the \'Keep Rigid\' flag is set, think of it as a rod. If not, think off it as a virtual rope."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_lengthconstraint.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_lengthconstraint.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_lengthconstraint.attach1"
			string m_FriendlyName = "Entity 1"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_lengthconstraint.attach2"
			string m_FriendlyName = "Entity 2"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_lengthconstraint.constraintsystem"
			string m_FriendlyName = "Constraint System Manager"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a phys_constraintsystem that this constraint should be a part of. All constraints on a set of entities should be placed in the same system, or they will fight each other during simulation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_lengthconstraint.forcelimit"
			string m_FriendlyName = "Force Limit to Break (lbs)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of force an impact must apply to the constraint to break it. A way of calculating this is to set it to the mass of an object that would break this constraint if it were resting on the constrainted objects."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_lengthconstraint.torquelimit"
			string m_FriendlyName = "Torque Limit to Break (lbs * distance)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of torque required to break the constraint. A way of calculating this is to multiply any reference mass by the resting distance (from the center of mass of the object) needed to break the constraint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_lengthconstraint.breaksound"
			string m_FriendlyName = "Play Sound on Break"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound played when the constraint is broken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_lengthconstraint.teleportfollowdistance"
			string m_FriendlyName = "Follow teleport distance"
			string m_TooltipOverride = ""
			string m_HelpText = "If one object teleports more than this many units away it will cause the other constrained object to teleport to an appropriate relative position."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_lengthconstraint.addlength"
			string m_FriendlyName = "Additional Length"
			string m_TooltipOverride = ""
			string m_HelpText = "Add (or subtract) this amount to the rest length of the rope."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_lengthconstraint.minlength"
			string m_FriendlyName = "Minimum Length"
			string m_TooltipOverride = ""
			string m_HelpText = "If the constraint is not rigid, this is the minimum length it can be."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_lengthconstraint.attachpoint"
			string m_FriendlyName = "Attached object 2 point"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.phys_ragdollconstraint"
			string m_FriendlyName = "phys_ragdollconstraint"
			string m_TooltipOverride = ""
			string m_HelpText = "A constraint that fixes the position of two entities, relative to this constraint\'s origin. Also allows for limits on the rotation around each axis, in the space of this constraint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollconstraint.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollconstraint.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollconstraint.attach1"
			string m_FriendlyName = "Entity 1"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollconstraint.attach2"
			string m_FriendlyName = "Entity 2"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollconstraint.constraintsystem"
			string m_FriendlyName = "Constraint System Manager"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a phys_constraintsystem that this constraint should be a part of. All constraints on a set of entities should be placed in the same system, or they will fight each other during simulation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollconstraint.forcelimit"
			string m_FriendlyName = "Force Limit to Break (lbs)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of force an impact must apply to the constraint to break it. A way of calculating this is to set it to the mass of an object that would break this constraint if it were resting on the constrainted objects."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollconstraint.torquelimit"
			string m_FriendlyName = "Torque Limit to Break (lbs * distance)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of torque required to break the constraint. A way of calculating this is to multiply any reference mass by the resting distance (from the center of mass of the object) needed to break the constraint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollconstraint.breaksound"
			string m_FriendlyName = "Play Sound on Break"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound played when the constraint is broken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollconstraint.teleportfollowdistance"
			string m_FriendlyName = "Follow teleport distance"
			string m_TooltipOverride = ""
			string m_HelpText = "If one object teleports more than this many units away it will cause the other constrained object to teleport to an appropriate relative position."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollconstraint.xmin"
			string m_FriendlyName = "X axis min limit"
			string m_TooltipOverride = ""
			string m_HelpText = "-180 min and 180 max = no constraint on this axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollconstraint.xmax"
			string m_FriendlyName = "X axis max limit"
			string m_TooltipOverride = ""
			string m_HelpText = "-180 min and 180 max = no constraint on this axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollconstraint.ymin"
			string m_FriendlyName = "Y axis min limit"
			string m_TooltipOverride = ""
			string m_HelpText = "-180 min and 180 max = no constraint on this axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollconstraint.ymax"
			string m_FriendlyName = "Y axis max limit"
			string m_TooltipOverride = ""
			string m_HelpText = "-180 min and 180 max = no constraint on this axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollconstraint.zmin"
			string m_FriendlyName = "Z axis min limit"
			string m_TooltipOverride = ""
			string m_HelpText = "-180 min and 180 max = no constraint on this axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollconstraint.zmax"
			string m_FriendlyName = "Z axis max limit"
			string m_TooltipOverride = ""
			string m_HelpText = "-180 min and 180 max = no constraint on this axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollconstraint.xfriction"
			string m_FriendlyName = "X axis friction"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollconstraint.yfriction"
			string m_FriendlyName = "Y axis friction"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_ragdollconstraint.zfriction"
			string m_FriendlyName = "Z axis friction"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.phys_convert"
			string m_FriendlyName = "phys_convert"
			string m_TooltipOverride = ""
			string m_HelpText = "Turns an arbitrary entity into a physically simulated entity. i.e. brush entities will behave like func_physbox, model entities behave like prop_physics."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_convert.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_convert.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_convert.target"
			string m_FriendlyName = "Entity to convert"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the entity that will be converted to a physics object when the ConvertTarget input is fired."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_convert.swapmodel"
			string m_FriendlyName = "Model Swap Entity"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_convert.massoverride"
			string m_FriendlyName = "Mass Override"
			string m_TooltipOverride = ""
			string m_HelpText = "Sets the mass when the object(s) are converted (0 means auto-calculate)"
		},
		CHelpEntry
		{
			string m_Id = "Element.ForceController"
			string m_FriendlyName = "ForceController"
			string m_TooltipOverride = ""
			string m_HelpText = "ForceController"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ForceController.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ForceController.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ForceController.attach1"
			string m_FriendlyName = "Attached Object"
			string m_TooltipOverride = ""
			string m_HelpText = "Object to apply the force to."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ForceController.forcetime"
			string m_FriendlyName = "Time of Force (0=inf)"
			string m_TooltipOverride = ""
			string m_HelpText = "Automatic shut-off after this time has passed (0 = stay on forever or until deactivated)"
		},
		CHelpEntry
		{
			string m_Id = "Element.phys_thruster"
			string m_FriendlyName = "phys_thruster"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity used to apply constant acceleration to a physics object. The force and torque is calculated using the position and direction of the thruster as an impulse. So moving those off the object\'s center will cause torque as well. Torque can be removed by unchecking the \'apply torque\' flag. The position of the thruster can be forced to be at the object\'s center by checking to \'ignore pos\' flag."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_thruster.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_thruster.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_thruster.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_thruster.attach1"
			string m_FriendlyName = "Attached Object"
			string m_TooltipOverride = ""
			string m_HelpText = "Object to apply the force to."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_thruster.forcetime"
			string m_FriendlyName = "Time of Force (0=inf)"
			string m_TooltipOverride = ""
			string m_HelpText = "Automatic shut-off after this time has passed (0 = stay on forever or until deactivated)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_thruster.force"
			string m_FriendlyName = "Force"
			string m_TooltipOverride = ""
			string m_HelpText = "Force (will be integrated, units are force kg*in/s^2)"
		},
		CHelpEntry
		{
			string m_Id = "Element.phys_torque"
			string m_FriendlyName = "phys_torque"
			string m_TooltipOverride = ""
			string m_HelpText = "An angular thruster. Use it to apply angular force to an entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_torque.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_torque.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_torque.attach1"
			string m_FriendlyName = "Attached Object"
			string m_TooltipOverride = ""
			string m_HelpText = "Object to apply the force to."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_torque.forcetime"
			string m_FriendlyName = "Time of Force (0=inf)"
			string m_TooltipOverride = ""
			string m_HelpText = "Automatic shut-off after this time has passed (0 = stay on forever or until deactivated)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_torque.force"
			string m_FriendlyName = "Angular Acceleration"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_torque.axis"
			string m_FriendlyName = "Rotation Axis"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.phys_motor"
			string m_FriendlyName = "phys_motor"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that tries to spin a target entity at a particular speed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_motor.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_motor.speed"
			string m_FriendlyName = "Rotation Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular speed (units are degress/second)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_motor.spinup"
			string m_FriendlyName = "Spin up time"
			string m_TooltipOverride = ""
			string m_HelpText = "spin up time in seconds (also affects the rate at which speed changes happen)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_motor.inertiafactor"
			string m_FriendlyName = "System Interia Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Make this larger if the object being driven is constrained to a set of heavier objects."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_motor.axis"
			string m_FriendlyName = "Rotation Axis"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_motor.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_motor.attach1"
			string m_FriendlyName = "Attached Object"
			string m_TooltipOverride = ""
			string m_HelpText = "Object to apply the force to"
		},
		CHelpEntry
		{
			string m_Id = "Element.phys_magnet"
			string m_FriendlyName = "phys_magnet"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that acts like a magnet, attaching metallic physics objects to itself when they touch it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_magnet.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_magnet.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_magnet.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_magnet.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_magnet.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_magnet.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_magnet.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_magnet.model"
			string m_FriendlyName = "World Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_magnet.skin"
			string m_FriendlyName = "Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. This is programmatically populated from the model. The FGD data is unused!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_magnet.body"
			string m_FriendlyName = "Body"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple bodygroups. Set this to a number other than 0 to use that bodygroup instead of the default."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_magnet.disableshadows"
			string m_FriendlyName = "Disable Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to disable dynamic shadows on this entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_magnet.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_magnet.forcelimit"
			string m_FriendlyName = "Force Limit to Break (lbs)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of force necessary to break a stuck object off the magnet. A way of calculating this is to set it to the mass of an object that would break this constraint if it were resting on the magnet."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_magnet.torquelimit"
			string m_FriendlyName = "Torque Limit to Break (lbs * distance)"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of torque necessary to break a stuck object off the magnet. A way of calculating this is to multiply any reference mass by the resting distance (from the center of mass of the object) needed to break the constraint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_magnet.massScale"
			string m_FriendlyName = "Mass Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "A scale multiplier for the object\'s mass."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_magnet.overridescript"
			string m_FriendlyName = "Override parameters"
			string m_TooltipOverride = ""
			string m_HelpText = "A list of physics key/value pairs that are usually in a physics prop .qc file. Format is \'key,value,key,value,etc\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.phys_magnet.maxobjects"
			string m_FriendlyName = "Maximum Attached Objects"
			string m_TooltipOverride = ""
			string m_HelpText = "The maximum number of physics objects that can be stuck to the magnet at once. 0 = no limit."
		},
		CHelpEntry
		{
			string m_Id = "Element.prop_detail_base"
			string m_FriendlyName = "prop_detail_base"
			string m_TooltipOverride = ""
			string m_HelpText = "prop_detail_base"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_detail_base.model"
			string m_FriendlyName = "World model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.prop_static_base"
			string m_FriendlyName = "prop_static_base"
			string m_TooltipOverride = ""
			string m_HelpText = "prop_static_base"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_static_base.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_static_base.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_static_base.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_static_base.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_static_base.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_static_base.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_static_base.model"
			string m_FriendlyName = "World Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_static_base.skin"
			string m_FriendlyName = "Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. This is programmatically populated from the model. The FGD data is unused!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_static_base.solid"
			string m_FriendlyName = "Collisions"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_static_base.disableshadows"
			string m_FriendlyName = "Disable Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_static_base.fademindist"
			string m_FriendlyName = "Start Fade Dist/Pixels"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the prop starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_static_base.fademaxdist"
			string m_FriendlyName = "End Fade Dist/Pixels"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the prop is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_static_base.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_static_base.lightingorigin"
			string m_FriendlyName = "Lighting Origin"
			string m_TooltipOverride = ""
			string m_HelpText = "Select an info_lighting to specify a location to sample lighting from, instead of using this entity\'s origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_static_base.disablevertexlighting"
			string m_FriendlyName = "Disable Vertex lighting"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_static_base.disableselfshadowing"
			string m_FriendlyName = "Disable Self-Shadowing"
			string m_TooltipOverride = ""
			string m_HelpText = "When using vertex lighting, disable the object casting shadows onto itself."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_static_base.ignorenormals"
			string m_FriendlyName = "Ignore surface normals"
			string m_TooltipOverride = ""
			string m_HelpText = "Ignore the surface normals when computing vertex lighting. Useful for objects like foliage."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_static_base.renderamt"
			string m_FriendlyName = "Alpha"
			string m_TooltipOverride = ""
			string m_HelpText = "Alpha of the fade, where 0 = fully transparent and 255 = fully opaque."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_static_base.rendercolor"
			string m_FriendlyName = "Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.prop_dynamic_base"
			string m_FriendlyName = "prop_dynamic_base"
			string m_TooltipOverride = ""
			string m_HelpText = "prop_dynamic_base"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.model"
			string m_FriendlyName = "World Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.skin"
			string m_FriendlyName = "Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. This is programmatically populated from the model. The FGD data is unused!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.body"
			string m_FriendlyName = "Body"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple bodygroups. Set this to a number other than 0 to use that bodygroup instead of the default."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.ExplodeDamage"
			string m_FriendlyName = "Explosion Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \'Explosion Radius\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.ExplodeRadius"
			string m_FriendlyName = "Explosion Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \'Explosion Damage\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.PerformanceMode"
			string m_FriendlyName = "Performance Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to limit the amount of gibs produced when this entity breaks, for performance reasons."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.pressuredelay"
			string m_FriendlyName = "Pressure Delay"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay, in seconds, after \'broken\' by pressure before breaking apart (allows for sound to play before breaking apart)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.renderamt"
			string m_FriendlyName = "Alpha"
			string m_TooltipOverride = ""
			string m_HelpText = "Alpha of the fade, where 0 = fully transparent and 255 = fully opaque."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.rendercolor"
			string m_FriendlyName = "Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.glowstate"
			string m_FriendlyName = "Glow State"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.glowrange"
			string m_FriendlyName = "Glow Range"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow becomes visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.glowrangemin"
			string m_FriendlyName = "Glow Range Min"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow stops being visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.glowcolor"
			string m_FriendlyName = "Glow Color Override (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "Change the render color of the glow."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.solid"
			string m_FriendlyName = "Collisions"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.DefaultAnim"
			string m_FriendlyName = "Default Animation"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the idle animation that this prop will revert to whenever it finishes a random or forced animation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.RandomAnimation"
			string m_FriendlyName = "Randomly Animate"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, this prop will randomly choose and play animations, based upon the times specified in \'Min/Max Random Anim Time\'. Inbetween the random animations, it will revert to playing the \'Default Animation\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.MinAnimTime"
			string m_FriendlyName = "Min Random Anim Time"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum time between random animations."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.MaxAnimTime"
			string m_FriendlyName = "Max Random Anim Time"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum time between random animations."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.SetBodyGroup"
			string m_FriendlyName = "Body Group"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.LagCompensate"
			string m_FriendlyName = "Lag Compensation"
			string m_TooltipOverride = ""
			string m_HelpText = "Set to Yes to lag compensate this prop, should be use very sparingly!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.lightingorigin"
			string m_FriendlyName = "Lighting Origin"
			string m_TooltipOverride = ""
			string m_HelpText = "Select a path_corner entity to specify a location to sample lighting from, instead of using this entity\'s origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_base.updatechildren"
			string m_FriendlyName = "Update children"
			string m_TooltipOverride = ""
			string m_HelpText = "Update touches for any children that are attached to attachment points as this prop animates. This allows SetParentAttached triggers or func_brushes to touch properly."
		},
		CHelpEntry
		{
			string m_Id = "Element.prop_detail"
			string m_FriendlyName = "prop_detail"
			string m_TooltipOverride = ""
			string m_HelpText = "Detail Prop"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_detail.model"
			string m_FriendlyName = "World model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.prop_dynamic"
			string m_FriendlyName = "prop_dynamic"
			string m_TooltipOverride = ""
			string m_HelpText = "A prop that can be placed in hierarchy and can play animations. It can also be configured to break when it takes enough damage. Note that the health of the object will be overridden by the health inside the model, to ensure consistent health game-wide. If the model used by the prop is configured to be used as a prop_physics (i.e. it should be physically simulated) then it CANNOT be used as a prop_dynamic. Upon level load it will display a warning in the console and remove itself. Use a prop_physics instead."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.model"
			string m_FriendlyName = "World Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.skin"
			string m_FriendlyName = "Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. This is programmatically populated from the model. The FGD data is unused!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.body"
			string m_FriendlyName = "Body"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple bodygroups. Set this to a number other than 0 to use that bodygroup instead of the default."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.ExplodeDamage"
			string m_FriendlyName = "Explosion Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \'Explosion Radius\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.ExplodeRadius"
			string m_FriendlyName = "Explosion Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \'Explosion Damage\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.PerformanceMode"
			string m_FriendlyName = "Performance Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to limit the amount of gibs produced when this entity breaks, for performance reasons."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.pressuredelay"
			string m_FriendlyName = "Pressure Delay"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay, in seconds, after \'broken\' by pressure before breaking apart (allows for sound to play before breaking apart)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.renderamt"
			string m_FriendlyName = "Alpha"
			string m_TooltipOverride = ""
			string m_HelpText = "Alpha of the fade, where 0 = fully transparent and 255 = fully opaque."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.rendercolor"
			string m_FriendlyName = "Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.glowstate"
			string m_FriendlyName = "Glow State"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.glowrange"
			string m_FriendlyName = "Glow Range"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow becomes visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.glowrangemin"
			string m_FriendlyName = "Glow Range Min"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow stops being visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.glowcolor"
			string m_FriendlyName = "Glow Color Override (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "Change the render color of the glow."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.solid"
			string m_FriendlyName = "Collisions"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.DefaultAnim"
			string m_FriendlyName = "Default Animation"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the idle animation that this prop will revert to whenever it finishes a random or forced animation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.RandomAnimation"
			string m_FriendlyName = "Randomly Animate"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, this prop will randomly choose and play animations, based upon the times specified in \'Min/Max Random Anim Time\'. Inbetween the random animations, it will revert to playing the \'Default Animation\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.MinAnimTime"
			string m_FriendlyName = "Min Random Anim Time"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum time between random animations."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.MaxAnimTime"
			string m_FriendlyName = "Max Random Anim Time"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum time between random animations."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.SetBodyGroup"
			string m_FriendlyName = "Body Group"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.LagCompensate"
			string m_FriendlyName = "Lag Compensation"
			string m_TooltipOverride = ""
			string m_HelpText = "Set to Yes to lag compensate this prop, should be use very sparingly!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.lightingorigin"
			string m_FriendlyName = "Lighting Origin"
			string m_TooltipOverride = ""
			string m_HelpText = "Select a path_corner entity to specify a location to sample lighting from, instead of using this entity\'s origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.updatechildren"
			string m_FriendlyName = "Update children"
			string m_TooltipOverride = ""
			string m_HelpText = "Update touches for any children that are attached to attachment points as this prop animates. This allows SetParentAttached triggers or func_brushes to touch properly."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.prop_dynamic_override"
			string m_FriendlyName = "prop_dynamic_override"
			string m_TooltipOverride = ""
			string m_HelpText = "A prop that can be placed in hierarchy and can play animations. It can also be configured to break when it takes enough damage.\nprop_dynamic_override is a prototyping entity only. It will allow the use of models designed to be used as prop_physics."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.model"
			string m_FriendlyName = "World Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.skin"
			string m_FriendlyName = "Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. This is programmatically populated from the model. The FGD data is unused!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.body"
			string m_FriendlyName = "Body"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple bodygroups. Set this to a number other than 0 to use that bodygroup instead of the default."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.ExplodeDamage"
			string m_FriendlyName = "Explosion Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \'Explosion Radius\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.ExplodeRadius"
			string m_FriendlyName = "Explosion Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \'Explosion Damage\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.PerformanceMode"
			string m_FriendlyName = "Performance Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to limit the amount of gibs produced when this entity breaks, for performance reasons."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.pressuredelay"
			string m_FriendlyName = "Pressure Delay"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay, in seconds, after \'broken\' by pressure before breaking apart (allows for sound to play before breaking apart)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.renderamt"
			string m_FriendlyName = "Alpha"
			string m_TooltipOverride = ""
			string m_HelpText = "Alpha of the fade, where 0 = fully transparent and 255 = fully opaque."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.rendercolor"
			string m_FriendlyName = "Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.glowstate"
			string m_FriendlyName = "Glow State"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.glowrange"
			string m_FriendlyName = "Glow Range"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow becomes visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.glowrangemin"
			string m_FriendlyName = "Glow Range Min"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow stops being visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.glowcolor"
			string m_FriendlyName = "Glow Color Override (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "Change the render color of the glow."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.solid"
			string m_FriendlyName = "Collisions"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.DefaultAnim"
			string m_FriendlyName = "Default Animation"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the idle animation that this prop will revert to whenever it finishes a random or forced animation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.RandomAnimation"
			string m_FriendlyName = "Randomly Animate"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, this prop will randomly choose and play animations, based upon the times specified in \'Min/Max Random Anim Time\'. Inbetween the random animations, it will revert to playing the \'Default Animation\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.MinAnimTime"
			string m_FriendlyName = "Min Random Anim Time"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum time between random animations."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.MaxAnimTime"
			string m_FriendlyName = "Max Random Anim Time"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum time between random animations."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.SetBodyGroup"
			string m_FriendlyName = "Body Group"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.LagCompensate"
			string m_FriendlyName = "Lag Compensation"
			string m_TooltipOverride = ""
			string m_HelpText = "Set to Yes to lag compensate this prop, should be use very sparingly!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.lightingorigin"
			string m_FriendlyName = "Lighting Origin"
			string m_TooltipOverride = ""
			string m_HelpText = "Select a path_corner entity to specify a location to sample lighting from, instead of using this entity\'s origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.updatechildren"
			string m_FriendlyName = "Update children"
			string m_TooltipOverride = ""
			string m_HelpText = "Update touches for any children that are attached to attachment points as this prop animates. This allows SetParentAttached triggers or func_brushes to touch properly."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_override.health"
			string m_FriendlyName = "Health"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of points of damage to take before breaking.  0 means don\'t break."
		},
		CHelpEntry
		{
			string m_Id = "Element.BasePropPhysics"
			string m_FriendlyName = "BasePropPhysics"
			string m_TooltipOverride = ""
			string m_HelpText = "BasePropPhysics"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.model"
			string m_FriendlyName = "World Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.skin"
			string m_FriendlyName = "Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. This is programmatically populated from the model. The FGD data is unused!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.body"
			string m_FriendlyName = "Body"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple bodygroups. Set this to a number other than 0 to use that bodygroup instead of the default."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.ExplodeDamage"
			string m_FriendlyName = "Explosion Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \'Explosion Radius\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.ExplodeRadius"
			string m_FriendlyName = "Explosion Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \'Explosion Damage\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.PerformanceMode"
			string m_FriendlyName = "Performance Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to limit the amount of gibs produced when this entity breaks, for performance reasons."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.pressuredelay"
			string m_FriendlyName = "Pressure Delay"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay, in seconds, after \'broken\' by pressure before breaking apart (allows for sound to play before breaking apart)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.glowstate"
			string m_FriendlyName = "Glow State"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.glowrange"
			string m_FriendlyName = "Glow Range"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow becomes visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.glowrangemin"
			string m_FriendlyName = "Glow Range Min"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow stops being visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.glowcolor"
			string m_FriendlyName = "Glow Color Override (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "Change the render color of the glow."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.minhealthdmg"
			string m_FriendlyName = "Min Damage to Hurt"
			string m_TooltipOverride = ""
			string m_HelpText = "The prop will ignore any damage events if the damage is less than this amount."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.shadowcastdist"
			string m_FriendlyName = "Shadow Cast Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "Use this to override how far this object casts shadows. 0 = default distance."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.physdamagescale"
			string m_FriendlyName = "Physics Impact Damage Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales damage energy when this object is hit by a physics object. NOTE: 0 means this feature is disabled for backwards compatibility.\nSet to 1.0 for materials as strong as flesh, smaller numbers indicate stronger materials."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.Damagetype"
			string m_FriendlyName = "Impact damage type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.nodamageforces"
			string m_FriendlyName = "Damaging it Doesn\'t Push It"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to determine whether or not damage should cause the brush to move."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.inertiaScale"
			string m_FriendlyName = "Scale Factor For Inertia"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales the angular mass of an object. Used to hack angular damage and collision response."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.massScale"
			string m_FriendlyName = "Mass Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "A scale multiplier for the object\'s mass."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.overridescript"
			string m_FriendlyName = "Override Parameters"
			string m_TooltipOverride = ""
			string m_HelpText = "A list of physics key/value pairs that are usually in a physics prop .qc file. Format is \'key,value,key,value,etc\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.damagetoenablemotion"
			string m_FriendlyName = "Health Level to Override Motion"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, this object will start motion disabled. Once its health has dropped below this specified amount, it will enable motion."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.forcetoenablemotion"
			string m_FriendlyName = "Physics Impact Force to Override Motion"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, this object will start motion disabled. Any impact that imparts a force greater than this value on the physbox will enable motion."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BasePropPhysics.puntsound"
			string m_FriendlyName = "Sound to make when punted"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.prop_physics_override"
			string m_FriendlyName = "prop_physics_override"
			string m_TooltipOverride = ""
			string m_HelpText = "A prop that physically simulates as a single rigid body. It can be constrained to other physics objects using hinges or other constraints. It can also be configured to break when it takes enough damage. Health can be overridden on this version."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.model"
			string m_FriendlyName = "World Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.skin"
			string m_FriendlyName = "Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. This is programmatically populated from the model. The FGD data is unused!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.body"
			string m_FriendlyName = "Body"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple bodygroups. Set this to a number other than 0 to use that bodygroup instead of the default."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.ExplodeDamage"
			string m_FriendlyName = "Explosion Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \'Explosion Radius\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.ExplodeRadius"
			string m_FriendlyName = "Explosion Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \'Explosion Damage\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.PerformanceMode"
			string m_FriendlyName = "Performance Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to limit the amount of gibs produced when this entity breaks, for performance reasons."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.pressuredelay"
			string m_FriendlyName = "Pressure Delay"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay, in seconds, after \'broken\' by pressure before breaking apart (allows for sound to play before breaking apart)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.glowstate"
			string m_FriendlyName = "Glow State"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.glowrange"
			string m_FriendlyName = "Glow Range"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow becomes visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.glowrangemin"
			string m_FriendlyName = "Glow Range Min"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow stops being visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.glowcolor"
			string m_FriendlyName = "Glow Color Override (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "Change the render color of the glow."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.minhealthdmg"
			string m_FriendlyName = "Min Damage to Hurt"
			string m_TooltipOverride = ""
			string m_HelpText = "The prop will ignore any damage events if the damage is less than this amount."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.shadowcastdist"
			string m_FriendlyName = "Shadow Cast Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "Use this to override how far this object casts shadows. 0 = default distance."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.physdamagescale"
			string m_FriendlyName = "Physics Impact Damage Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales damage energy when this object is hit by a physics object. NOTE: 0 means this feature is disabled for backwards compatibility.\nSet to 1.0 for materials as strong as flesh, smaller numbers indicate stronger materials."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.Damagetype"
			string m_FriendlyName = "Impact damage type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.nodamageforces"
			string m_FriendlyName = "Damaging it Doesn\'t Push It"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to determine whether or not damage should cause the brush to move."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.inertiaScale"
			string m_FriendlyName = "Scale Factor For Inertia"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales the angular mass of an object. Used to hack angular damage and collision response."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.massScale"
			string m_FriendlyName = "Mass Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "A scale multiplier for the object\'s mass."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.overridescript"
			string m_FriendlyName = "Override Parameters"
			string m_TooltipOverride = ""
			string m_HelpText = "A list of physics key/value pairs that are usually in a physics prop .qc file. Format is \'key,value,key,value,etc\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.damagetoenablemotion"
			string m_FriendlyName = "Health Level to Override Motion"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, this object will start motion disabled. Once its health has dropped below this specified amount, it will enable motion."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.forcetoenablemotion"
			string m_FriendlyName = "Physics Impact Force to Override Motion"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, this object will start motion disabled. Any impact that imparts a force greater than this value on the physbox will enable motion."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.puntsound"
			string m_FriendlyName = "Sound to make when punted"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the prop starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Max fade distance at which the prop is visible (0 = don\'t fade out)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_override.health"
			string m_FriendlyName = "Health"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of points of damage to take before breaking.  0 means don\'t break."
		},
		CHelpEntry
		{
			string m_Id = "Element.prop_physics"
			string m_FriendlyName = "prop_physics"
			string m_TooltipOverride = ""
			string m_HelpText = "A prop that physically simulates as a single rigid body. It can be constrained to other physics objects using hinges or other constraints. It can also be configured to break when it takes enough damage. Note that the health of the object will be overridden by the health inside the model, to ensure consistent health game-wide. If the model used by the prop is configured to be used as a prop_dynamic (i.e. it should not be physically simulated) then it CANNOT be used as a prop_physics. Upon level load it will display a warning in the console and remove itself. Use a prop_dynamic instead."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.model"
			string m_FriendlyName = "World Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.skin"
			string m_FriendlyName = "Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. This is programmatically populated from the model. The FGD data is unused!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.body"
			string m_FriendlyName = "Body"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple bodygroups. Set this to a number other than 0 to use that bodygroup instead of the default."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.ExplodeDamage"
			string m_FriendlyName = "Explosion Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \'Explosion Radius\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.ExplodeRadius"
			string m_FriendlyName = "Explosion Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \'Explosion Damage\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.PerformanceMode"
			string m_FriendlyName = "Performance Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to limit the amount of gibs produced when this entity breaks, for performance reasons."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.pressuredelay"
			string m_FriendlyName = "Pressure Delay"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay, in seconds, after \'broken\' by pressure before breaking apart (allows for sound to play before breaking apart)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.glowstate"
			string m_FriendlyName = "Glow State"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.glowrange"
			string m_FriendlyName = "Glow Range"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow becomes visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.glowrangemin"
			string m_FriendlyName = "Glow Range Min"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow stops being visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.glowcolor"
			string m_FriendlyName = "Glow Color Override (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "Change the render color of the glow."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.minhealthdmg"
			string m_FriendlyName = "Min Damage to Hurt"
			string m_TooltipOverride = ""
			string m_HelpText = "The prop will ignore any damage events if the damage is less than this amount."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.shadowcastdist"
			string m_FriendlyName = "Shadow Cast Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "Use this to override how far this object casts shadows. 0 = default distance."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.physdamagescale"
			string m_FriendlyName = "Physics Impact Damage Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales damage energy when this object is hit by a physics object. NOTE: 0 means this feature is disabled for backwards compatibility.\nSet to 1.0 for materials as strong as flesh, smaller numbers indicate stronger materials."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.Damagetype"
			string m_FriendlyName = "Impact damage type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.nodamageforces"
			string m_FriendlyName = "Damaging it Doesn\'t Push It"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to determine whether or not damage should cause the brush to move."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.inertiaScale"
			string m_FriendlyName = "Scale Factor For Inertia"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales the angular mass of an object. Used to hack angular damage and collision response."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.massScale"
			string m_FriendlyName = "Mass Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "A scale multiplier for the object\'s mass."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.overridescript"
			string m_FriendlyName = "Override Parameters"
			string m_TooltipOverride = ""
			string m_HelpText = "A list of physics key/value pairs that are usually in a physics prop .qc file. Format is \'key,value,key,value,etc\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.damagetoenablemotion"
			string m_FriendlyName = "Health Level to Override Motion"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, this object will start motion disabled. Once its health has dropped below this specified amount, it will enable motion."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.forcetoenablemotion"
			string m_FriendlyName = "Physics Impact Force to Override Motion"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, this object will start motion disabled. Any impact that imparts a force greater than this value on the physbox will enable motion."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.puntsound"
			string m_FriendlyName = "Sound to make when punted"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics.BreakableType"
			string m_FriendlyName = "Breakable by"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.prop_physics_multiplayer"
			string m_FriendlyName = "prop_physics_multiplayer"
			string m_TooltipOverride = ""
			string m_HelpText = "This class is the same as prop_physics, except the runtime collisions use a more bouncy method that avoids the prediction errors normal physics objects get."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.model"
			string m_FriendlyName = "World Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.skin"
			string m_FriendlyName = "Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. This is programmatically populated from the model. The FGD data is unused!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.body"
			string m_FriendlyName = "Body"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple bodygroups. Set this to a number other than 0 to use that bodygroup instead of the default."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.ExplodeDamage"
			string m_FriendlyName = "Explosion Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \'Explosion Radius\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.ExplodeRadius"
			string m_FriendlyName = "Explosion Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \'Explosion Damage\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.PerformanceMode"
			string m_FriendlyName = "Performance Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to limit the amount of gibs produced when this entity breaks, for performance reasons."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.pressuredelay"
			string m_FriendlyName = "Pressure Delay"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay, in seconds, after \'broken\' by pressure before breaking apart (allows for sound to play before breaking apart)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.glowstate"
			string m_FriendlyName = "Glow State"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.glowrange"
			string m_FriendlyName = "Glow Range"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow becomes visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.glowrangemin"
			string m_FriendlyName = "Glow Range Min"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow stops being visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.glowcolor"
			string m_FriendlyName = "Glow Color Override (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "Change the render color of the glow."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.minhealthdmg"
			string m_FriendlyName = "Min Damage to Hurt"
			string m_TooltipOverride = ""
			string m_HelpText = "The prop will ignore any damage events if the damage is less than this amount."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.shadowcastdist"
			string m_FriendlyName = "Shadow Cast Distance"
			string m_TooltipOverride = ""
			string m_HelpText = "Use this to override how far this object casts shadows. 0 = default distance."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.physdamagescale"
			string m_FriendlyName = "Physics Impact Damage Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales damage energy when this object is hit by a physics object. NOTE: 0 means this feature is disabled for backwards compatibility.\nSet to 1.0 for materials as strong as flesh, smaller numbers indicate stronger materials."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.Damagetype"
			string m_FriendlyName = "Impact damage type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.nodamageforces"
			string m_FriendlyName = "Damaging it Doesn\'t Push It"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to determine whether or not damage should cause the brush to move."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.inertiaScale"
			string m_FriendlyName = "Scale Factor For Inertia"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales the angular mass of an object. Used to hack angular damage and collision response."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.massScale"
			string m_FriendlyName = "Mass Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "A scale multiplier for the object\'s mass."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.overridescript"
			string m_FriendlyName = "Override Parameters"
			string m_TooltipOverride = ""
			string m_HelpText = "A list of physics key/value pairs that are usually in a physics prop .qc file. Format is \'key,value,key,value,etc\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.damagetoenablemotion"
			string m_FriendlyName = "Health Level to Override Motion"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, this object will start motion disabled. Once its health has dropped below this specified amount, it will enable motion."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.forcetoenablemotion"
			string m_FriendlyName = "Physics Impact Force to Override Motion"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, this object will start motion disabled. Any impact that imparts a force greater than this value on the physbox will enable motion."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.puntsound"
			string m_FriendlyName = "Sound to make when punted"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.BreakableType"
			string m_FriendlyName = "Breakable by"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_physics_multiplayer.physicsmode"
			string m_FriendlyName = "Physics Mode"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.devtest_hierarchy"
			string m_FriendlyName = "devtest_hierarchy"
			string m_TooltipOverride = ""
			string m_HelpText = "Various hierarchy related unit tests - For use in devtest."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.model"
			string m_FriendlyName = "World Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.skin"
			string m_FriendlyName = "Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. This is programmatically populated from the model. The FGD data is unused!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.body"
			string m_FriendlyName = "Body"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple bodygroups. Set this to a number other than 0 to use that bodygroup instead of the default."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.ExplodeDamage"
			string m_FriendlyName = "Explosion Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \'Explosion Radius\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.ExplodeRadius"
			string m_FriendlyName = "Explosion Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \'Explosion Damage\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.PerformanceMode"
			string m_FriendlyName = "Performance Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to limit the amount of gibs produced when this entity breaks, for performance reasons."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.pressuredelay"
			string m_FriendlyName = "Pressure Delay"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay, in seconds, after \'broken\' by pressure before breaking apart (allows for sound to play before breaking apart)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.renderamt"
			string m_FriendlyName = "Alpha"
			string m_TooltipOverride = ""
			string m_HelpText = "Alpha of the fade, where 0 = fully transparent and 255 = fully opaque."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.rendercolor"
			string m_FriendlyName = "Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.glowstate"
			string m_FriendlyName = "Glow State"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.glowrange"
			string m_FriendlyName = "Glow Range"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow becomes visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.glowrangemin"
			string m_FriendlyName = "Glow Range Min"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow stops being visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.glowcolor"
			string m_FriendlyName = "Glow Color Override (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "Change the render color of the glow."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.solid"
			string m_FriendlyName = "Collisions"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.DefaultAnim"
			string m_FriendlyName = "Default Animation"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the idle animation that this prop will revert to whenever it finishes a random or forced animation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.RandomAnimation"
			string m_FriendlyName = "Randomly Animate"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, this prop will randomly choose and play animations, based upon the times specified in \'Min/Max Random Anim Time\'. Inbetween the random animations, it will revert to playing the \'Default Animation\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.MinAnimTime"
			string m_FriendlyName = "Min Random Anim Time"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum time between random animations."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.MaxAnimTime"
			string m_FriendlyName = "Max Random Anim Time"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum time between random animations."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.SetBodyGroup"
			string m_FriendlyName = "Body Group"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.LagCompensate"
			string m_FriendlyName = "Lag Compensation"
			string m_TooltipOverride = ""
			string m_HelpText = "Set to Yes to lag compensate this prop, should be use very sparingly!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.lightingorigin"
			string m_FriendlyName = "Lighting Origin"
			string m_TooltipOverride = ""
			string m_HelpText = "Select a path_corner entity to specify a location to sample lighting from, instead of using this entity\'s origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.updatechildren"
			string m_FriendlyName = "Update children"
			string m_TooltipOverride = ""
			string m_HelpText = "Update touches for any children that are attached to attachment points as this prop animates. This allows SetParentAttached triggers or func_brushes to touch properly."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.testMode"
			string m_FriendlyName = "Test Mode"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.childPhysicsMode"
			string m_FriendlyName = "Child Physics Mode"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.createClientSideChild"
			string m_FriendlyName = "Create client-side child entity"
			string m_TooltipOverride = ""
			string m_HelpText = "If Yes is specified, you must also specify a client-side child model name"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.rotationAxis"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.rotationSpeed"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.child"
			string m_FriendlyName = "Child entity"
			string m_TooltipOverride = ""
			string m_HelpText = "This is the entity which will be attached as a child to this entity"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.hierarchyAttachName"
			string m_FriendlyName = "Hierarchy Attach Name"
			string m_TooltipOverride = ""
			string m_HelpText = "This indicates how the child will be attached to the entity. Should be an attachment or bone name, or !absorigin, or !bonemerge. Leaving it empty implies !absorigin"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.dynamicResetCount"
			string m_FriendlyName = "Dynamic Reset Count"
			string m_TooltipOverride = ""
			string m_HelpText = "Used by \'Dynamic\' Child Physics Mode, this indicates the number of times the test should cycle before the child is teleported back to the parent (using the relative offset)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.dynamicAttachOffset"
			string m_FriendlyName = "Dynamic Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Used by \'Dynamic\' childPhysicsMode, this indicates the relative offset the child should be from the attachment point when it teleports back into position"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.alternateAttachName"
			string m_FriendlyName = "Alternate Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Used by the \'cycle attachment type\' test, this should be a bone name on the parent"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.alternateParent"
			string m_FriendlyName = "Alternate Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "Used by the \'Switch parent\' test, this should be a different parent to parent the child to"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.alternateModel"
			string m_FriendlyName = "Alternate World Model"
			string m_TooltipOverride = ""
			string m_HelpText = "Used by the \'Switch model\' test"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy.clientSideChildModel"
			string m_FriendlyName = "Client-side Child Model"
			string m_TooltipOverride = ""
			string m_HelpText = "Used if we are creating a client-side child entity"
		},
		CHelpEntry
		{
			string m_Id = "Element.devtest_hierarchy_child"
			string m_FriendlyName = "devtest_hierarchy_child"
			string m_TooltipOverride = ""
			string m_HelpText = "Various hierarchy related unit tests - For use in devtest."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.model"
			string m_FriendlyName = "World Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.skin"
			string m_FriendlyName = "Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. This is programmatically populated from the model. The FGD data is unused!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.body"
			string m_FriendlyName = "Body"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple bodygroups. Set this to a number other than 0 to use that bodygroup instead of the default."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.ExplodeDamage"
			string m_FriendlyName = "Explosion Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \'Explosion Radius\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.ExplodeRadius"
			string m_FriendlyName = "Explosion Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \'Explosion Damage\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.PerformanceMode"
			string m_FriendlyName = "Performance Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to limit the amount of gibs produced when this entity breaks, for performance reasons."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.pressuredelay"
			string m_FriendlyName = "Pressure Delay"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay, in seconds, after \'broken\' by pressure before breaking apart (allows for sound to play before breaking apart)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.renderamt"
			string m_FriendlyName = "Alpha"
			string m_TooltipOverride = ""
			string m_HelpText = "Alpha of the fade, where 0 = fully transparent and 255 = fully opaque."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.rendercolor"
			string m_FriendlyName = "Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.glowstate"
			string m_FriendlyName = "Glow State"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.glowrange"
			string m_FriendlyName = "Glow Range"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow becomes visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.glowrangemin"
			string m_FriendlyName = "Glow Range Min"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow stops being visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.glowcolor"
			string m_FriendlyName = "Glow Color Override (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "Change the render color of the glow."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.solid"
			string m_FriendlyName = "Collisions"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.DefaultAnim"
			string m_FriendlyName = "Default Animation"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the idle animation that this prop will revert to whenever it finishes a random or forced animation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.RandomAnimation"
			string m_FriendlyName = "Randomly Animate"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, this prop will randomly choose and play animations, based upon the times specified in \'Min/Max Random Anim Time\'. Inbetween the random animations, it will revert to playing the \'Default Animation\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.MinAnimTime"
			string m_FriendlyName = "Min Random Anim Time"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum time between random animations."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.MaxAnimTime"
			string m_FriendlyName = "Max Random Anim Time"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum time between random animations."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.SetBodyGroup"
			string m_FriendlyName = "Body Group"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.LagCompensate"
			string m_FriendlyName = "Lag Compensation"
			string m_TooltipOverride = ""
			string m_HelpText = "Set to Yes to lag compensate this prop, should be use very sparingly!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.lightingorigin"
			string m_FriendlyName = "Lighting Origin"
			string m_TooltipOverride = ""
			string m_HelpText = "Select a path_corner entity to specify a location to sample lighting from, instead of using this entity\'s origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy_child.updatechildren"
			string m_FriendlyName = "Update children"
			string m_TooltipOverride = ""
			string m_HelpText = "Update touches for any children that are attached to attachment points as this prop animates. This allows SetParentAttached triggers or func_brushes to touch properly."
		},
		CHelpEntry
		{
			string m_Id = "Element.devtest_hierarchy2"
			string m_FriendlyName = "devtest_hierarchy2"
			string m_TooltipOverride = ""
			string m_HelpText = "Various hierarchy related unit tests - For use in devtest."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.model"
			string m_FriendlyName = "World Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.skin"
			string m_FriendlyName = "Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. This is programmatically populated from the model. The FGD data is unused!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.body"
			string m_FriendlyName = "Body"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple bodygroups. Set this to a number other than 0 to use that bodygroup instead of the default."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.ExplodeDamage"
			string m_FriendlyName = "Explosion Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \'Explosion Radius\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.ExplodeRadius"
			string m_FriendlyName = "Explosion Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \'Explosion Damage\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.PerformanceMode"
			string m_FriendlyName = "Performance Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to limit the amount of gibs produced when this entity breaks, for performance reasons."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.pressuredelay"
			string m_FriendlyName = "Pressure Delay"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay, in seconds, after \'broken\' by pressure before breaking apart (allows for sound to play before breaking apart)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.renderamt"
			string m_FriendlyName = "Alpha"
			string m_TooltipOverride = ""
			string m_HelpText = "Alpha of the fade, where 0 = fully transparent and 255 = fully opaque."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.rendercolor"
			string m_FriendlyName = "Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.glowstate"
			string m_FriendlyName = "Glow State"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.glowrange"
			string m_FriendlyName = "Glow Range"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow becomes visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.glowrangemin"
			string m_FriendlyName = "Glow Range Min"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow stops being visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.glowcolor"
			string m_FriendlyName = "Glow Color Override (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "Change the render color of the glow."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.solid"
			string m_FriendlyName = "Collisions"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.DefaultAnim"
			string m_FriendlyName = "Default Animation"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the idle animation that this prop will revert to whenever it finishes a random or forced animation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.RandomAnimation"
			string m_FriendlyName = "Randomly Animate"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, this prop will randomly choose and play animations, based upon the times specified in \'Min/Max Random Anim Time\'. Inbetween the random animations, it will revert to playing the \'Default Animation\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.MinAnimTime"
			string m_FriendlyName = "Min Random Anim Time"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum time between random animations."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.MaxAnimTime"
			string m_FriendlyName = "Max Random Anim Time"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum time between random animations."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.SetBodyGroup"
			string m_FriendlyName = "Body Group"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.LagCompensate"
			string m_FriendlyName = "Lag Compensation"
			string m_TooltipOverride = ""
			string m_HelpText = "Set to Yes to lag compensate this prop, should be use very sparingly!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.lightingorigin"
			string m_FriendlyName = "Lighting Origin"
			string m_TooltipOverride = ""
			string m_HelpText = "Select a path_corner entity to specify a location to sample lighting from, instead of using this entity\'s origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.devtest_hierarchy2.updatechildren"
			string m_FriendlyName = "Update children"
			string m_TooltipOverride = ""
			string m_HelpText = "Update touches for any children that are attached to attachment points as this prop animates. This allows SetParentAttached triggers or func_brushes to touch properly."
		},
		CHelpEntry
		{
			string m_Id = "Element.prop_ragdoll"
			string m_FriendlyName = "prop_ragdoll"
			string m_TooltipOverride = ""
			string m_HelpText = "A prop that physically simulates and can be articulated with internal joints. The joint constraints are part of the physics model."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_ragdoll.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_ragdoll.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_ragdoll.model"
			string m_FriendlyName = "World Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_ragdoll.skin"
			string m_FriendlyName = "Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. This is programmatically populated from the model. The FGD data is unused!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_ragdoll.body"
			string m_FriendlyName = "Body"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple bodygroups. Set this to a number other than 0 to use that bodygroup instead of the default."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_ragdoll.disableshadows"
			string m_FriendlyName = "Disable Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to disable dynamic shadows on this entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_ragdoll.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_ragdoll.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_ragdoll.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_ragdoll.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_ragdoll.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_ragdoll.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the prop starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_ragdoll.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Max fade distance at which the prop is visible (0 = don\'t fade out)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_ragdoll.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_ragdoll.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_ragdoll.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_ragdoll.angleOverride"
			string m_FriendlyName = "Override Animation"
			string m_TooltipOverride = ""
			string m_HelpText = "Filled in by the engine via wc_update_entity, do not edit by hand except to clear."
		},
		CHelpEntry
		{
			string m_Id = "Element.prop_dynamic_ornament"
			string m_FriendlyName = "prop_dynamic_ornament"
			string m_TooltipOverride = ""
			string m_HelpText = "A way to attach one editormodel model to another as an ornament. It will render in the way that player/NPC weapons render."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.model"
			string m_FriendlyName = "World Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.skin"
			string m_FriendlyName = "Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. This is programmatically populated from the model. The FGD data is unused!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.body"
			string m_FriendlyName = "Body"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple bodygroups. Set this to a number other than 0 to use that bodygroup instead of the default."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.ExplodeDamage"
			string m_FriendlyName = "Explosion Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \'Explosion Radius\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.ExplodeRadius"
			string m_FriendlyName = "Explosion Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \'Explosion Damage\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.PerformanceMode"
			string m_FriendlyName = "Performance Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to limit the amount of gibs produced when this entity breaks, for performance reasons."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.pressuredelay"
			string m_FriendlyName = "Pressure Delay"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay, in seconds, after \'broken\' by pressure before breaking apart (allows for sound to play before breaking apart)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.renderamt"
			string m_FriendlyName = "Alpha"
			string m_TooltipOverride = ""
			string m_HelpText = "Alpha of the fade, where 0 = fully transparent and 255 = fully opaque."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.rendercolor"
			string m_FriendlyName = "Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.glowstate"
			string m_FriendlyName = "Glow State"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.glowrange"
			string m_FriendlyName = "Glow Range"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow becomes visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.glowrangemin"
			string m_FriendlyName = "Glow Range Min"
			string m_TooltipOverride = ""
			string m_HelpText = "Range at which the glow stops being visible. (0 = always visible)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.glowcolor"
			string m_FriendlyName = "Glow Color Override (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "Change the render color of the glow."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.solid"
			string m_FriendlyName = "Collisions"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.DefaultAnim"
			string m_FriendlyName = "Default Animation"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the idle animation that this prop will revert to whenever it finishes a random or forced animation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.RandomAnimation"
			string m_FriendlyName = "Randomly Animate"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, this prop will randomly choose and play animations, based upon the times specified in \'Min/Max Random Anim Time\'. Inbetween the random animations, it will revert to playing the \'Default Animation\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.MinAnimTime"
			string m_FriendlyName = "Min Random Anim Time"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum time between random animations."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.MaxAnimTime"
			string m_FriendlyName = "Max Random Anim Time"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum time between random animations."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.SetBodyGroup"
			string m_FriendlyName = "Body Group"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.LagCompensate"
			string m_FriendlyName = "Lag Compensation"
			string m_TooltipOverride = ""
			string m_HelpText = "Set to Yes to lag compensate this prop, should be use very sparingly!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.lightingorigin"
			string m_FriendlyName = "Lighting Origin"
			string m_TooltipOverride = ""
			string m_HelpText = "Select a path_corner entity to specify a location to sample lighting from, instead of using this entity\'s origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.updatechildren"
			string m_FriendlyName = "Update children"
			string m_TooltipOverride = ""
			string m_HelpText = "Update touches for any children that are attached to attachment points as this prop animates. This allows SetParentAttached triggers or func_brushes to touch properly."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.prop_dynamic_ornament.InitialOwner"
			string m_FriendlyName = "Target Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the entity that this ornament should attach to, at startup."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_areaportal"
			string m_FriendlyName = "func_areaportal"
			string m_TooltipOverride = ""
			string m_HelpText = "A portal brush used to manage visibility in maps. Portals define areas, which are spaces that are connected in the map. Both sides of a portal cannot touch the same area, for example, a doughnut shaped map would require at least two portals to divide the map into two areas. A linear map could be divided into two areas with a single area portal."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_areaportal.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_areaportal.target"
			string m_FriendlyName = "Name of Linked Door"
			string m_TooltipOverride = ""
			string m_HelpText = "(Optional) The name of a door whose open/closed state controls the on/off state of this area portal."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_areaportal.StartOpen"
			string m_FriendlyName = "Initial State"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_areaportal.PortalVersion"
			string m_FriendlyName = "Portal Version"
			string m_TooltipOverride = ""
			string m_HelpText = "(Don\'t change). Differentiates between shipping HL2 maps and maps using new engine features."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_breakable"
			string m_FriendlyName = "func_breakable"
			string m_TooltipOverride = ""
			string m_HelpText = "A brush entity that can be broken from damage, or an input."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.ExplodeDamage"
			string m_FriendlyName = "Explosion Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also \'Explosion Radius\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.ExplodeRadius"
			string m_FriendlyName = "Explosion Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also \'Explosion Damage\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.PerformanceMode"
			string m_FriendlyName = "Performance Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to limit the amount of gibs produced when this entity breaks, for performance reasons."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.propdata"
			string m_FriendlyName = "Prop Data"
			string m_TooltipOverride = ""
			string m_HelpText = "Set to the best approximation of the size and material of this entity\'s brushes. If set, it will override this entity\'s health and damage taken from various weapons. See the propdata.txt file in the scripts directory of your MOD to get a detailed list of what each entry specifies."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.health"
			string m_FriendlyName = "Strength"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of points of damage to take before breaking. 0 means don\'t break."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.material"
			string m_FriendlyName = "Material Type"
			string m_TooltipOverride = ""
			string m_HelpText = "Set to the material type of the brush. Used to decide what sounds to make when damaged, and what gibs to produce when broken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.explosion"
			string m_FriendlyName = "Gibs Direction"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to decide which direction to throw gibs when broken."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.gibdir"
			string m_FriendlyName = "Precise Gib Direction"
			string m_TooltipOverride = ""
			string m_HelpText = "Specifies the direction to throw gibs when this breakable breaks. Be sure to select Use Precise Gib Dir in the Gibs Direction field!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.nodamageforces"
			string m_FriendlyName = "Damaging it Doesn\'t Push It"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to determine whether or not damage should cause the brush to move."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.gibmodel"
			string m_FriendlyName = "Gib Model"
			string m_TooltipOverride = ""
			string m_HelpText = "Used by HL1Port to specify a custom gib model to break into, overriding the \'Material Type\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.spawnobject"
			string m_FriendlyName = "Spawn On Break"
			string m_TooltipOverride = ""
			string m_HelpText = "When broken, an entity of the selected type will be created."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.explodemagnitude"
			string m_FriendlyName = "Explode Magnitude"
			string m_TooltipOverride = ""
			string m_HelpText = "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.pressuredelay"
			string m_FriendlyName = "Pressure Delay"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay, in seconds, after \'broken\' by pressure before breaking apart (allows for sound to play before breaking apart)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.minhealthdmg"
			string m_FriendlyName = "Min Damage to Hurt"
			string m_TooltipOverride = ""
			string m_HelpText = "The prop will ignore any damage events if the damage is less than this amount."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.physdamagescale"
			string m_FriendlyName = "Physics Impact Damage Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales damage energy when this object is hit by a physics object. NOTE: 0 means this feature is disabled for backwards compatibility.\nSet to 1.0 for materials as strong as flesh, smaller numbers indicate stronger materials."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_breakable.BreakableType"
			string m_FriendlyName = "Breakable by"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.func_conveyor"
			string m_FriendlyName = "func_conveyor"
			string m_TooltipOverride = ""
			string m_HelpText = "Conveyor Belt"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.movedir"
			string m_FriendlyName = "Move Direction (Pitch Yaw Roll)"
			string m_TooltipOverride = ""
			string m_HelpText = "The direction conveyor moves."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor.speed"
			string m_FriendlyName = "Conveyor Speed"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_conveyor._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_viscluster"
			string m_FriendlyName = "func_viscluster"
			string m_TooltipOverride = ""
			string m_HelpText = "Any leaves touching this brush will have their vis merged together into a single cluster.  Use multiple func_viscluster entities to reduce vis time"
		},
		CHelpEntry
		{
			string m_Id = "Element.func_illusionary"
			string m_FriendlyName = "func_illusionary"
			string m_TooltipOverride = ""
			string m_HelpText = "Legacy support. Use func_brush instead."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_illusionary._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_precipitation"
			string m_FriendlyName = "func_precipitation"
			string m_TooltipOverride = ""
			string m_HelpText = "A brush entity that creates rain and snow inside its volume."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_precipitation.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_precipitation.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_precipitation.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_precipitation.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_precipitation.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_precipitation.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_precipitation.renderamt"
			string m_FriendlyName = "Density (0-100%)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_precipitation.rendercolor"
			string m_FriendlyName = "Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_precipitation.preciptype"
			string m_FriendlyName = "Precipitation Type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_precipitation.minSpeed"
			string m_FriendlyName = "Minimum speed (snowfall only)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_precipitation.maxSpeed"
			string m_FriendlyName = "Maximum speed (snowfall only)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.func_precipitation_blocker"
			string m_FriendlyName = "func_precipitation_blocker"
			string m_TooltipOverride = ""
			string m_HelpText = "A brush entity that prevents rain and snow inside its volume."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_precipitation_blocker.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_precipitation_blocker.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_precipitation_blocker.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_precipitation_blocker.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_precipitation_blocker.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_precipitation_blocker.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_detail_blocker"
			string m_FriendlyName = "func_detail_blocker"
			string m_TooltipOverride = ""
			string m_HelpText = "A brush entity that prevents detail sprites from being placed inside its volume."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_detail_blocker.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_detail_blocker.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_detail_blocker.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_detail_blocker.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_detail_blocker.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_detail_blocker.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_wall_toggle"
			string m_FriendlyName = "func_wall_toggle"
			string m_TooltipOverride = ""
			string m_HelpText = "A brush entity that can be toggled on/off. When off, the brush will be non-solid and invisible. Does not cast lightmap shadows."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall_toggle.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall_toggle.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall_toggle.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall_toggle.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall_toggle.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall_toggle.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall_toggle.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall_toggle.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall_toggle.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall_toggle.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall_toggle.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall_toggle.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall_toggle.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall_toggle.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall_toggle.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall_toggle.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall_toggle._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_wall_toggle.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.func_guntarget"
			string m_FriendlyName = "func_guntarget"
			string m_TooltipOverride = ""
			string m_HelpText = "This is a moving target that moves along a path of path_tracks. It can be shot and killed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.speed"
			string m_FriendlyName = "Speed (units per second)"
			string m_TooltipOverride = ""
			string m_HelpText = "The speed at which the target moves along its path."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.target"
			string m_FriendlyName = "First stop target"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the first path_track entity in the path that this target should follow."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget.health"
			string m_FriendlyName = "Damage to Take"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of damage taken before this target is killed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_guntarget._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_fish_pool"
			string m_FriendlyName = "func_fish_pool"
			string m_TooltipOverride = ""
			string m_HelpText = "Creates a school of interactive fish that swim near this entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_fish_pool.model"
			string m_FriendlyName = "World model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_fish_pool.fish_count"
			string m_FriendlyName = "Fish Count"
			string m_TooltipOverride = ""
			string m_HelpText = "Number of Fish in this Pool"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_fish_pool.max_range"
			string m_FriendlyName = "Max Range"
			string m_TooltipOverride = ""
			string m_HelpText = "How far away a Fish can wander (max 255)"
		},
		CHelpEntry
		{
			string m_Id = "Element.PlatSounds"
			string m_FriendlyName = "PlatSounds"
			string m_TooltipOverride = ""
			string m_HelpText = "PlatSounds"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlatSounds.movesnd"
			string m_FriendlyName = "Move Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "The sound played whenever the platform starts moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlatSounds.stopsnd"
			string m_FriendlyName = "Stop Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "The sound played when the platform stops moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.PlatSounds.volume"
			string m_FriendlyName = "Sound Volume 0.0 - 1.0"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.Trackchange"
			string m_FriendlyName = "Trackchange"
			string m_TooltipOverride = ""
			string m_HelpText = "Trackchange"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.movesnd"
			string m_FriendlyName = "Move Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "The sound played whenever the platform starts moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.stopsnd"
			string m_FriendlyName = "Stop Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "The sound played when the platform stops moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.volume"
			string m_FriendlyName = "Sound Volume 0.0 - 1.0"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.height"
			string m_FriendlyName = "Travel Altitude"
			string m_TooltipOverride = ""
			string m_HelpText = "The vertical height above the track that the train moves. Negative values moves the train below."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.rotation"
			string m_FriendlyName = "Spin amount"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount this platform should rotate as it moves, in degrees."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.train"
			string m_FriendlyName = "Train to Switch"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.toptrack"
			string m_FriendlyName = "Top Track"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.bottomtrack"
			string m_FriendlyName = "Bottom Track"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.Trackchange.speed"
			string m_FriendlyName = "Move/Rotate Speed"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.BaseTrain"
			string m_FriendlyName = "BaseTrain"
			string m_TooltipOverride = ""
			string m_HelpText = "BaseTrain"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.target"
			string m_FriendlyName = "First Stop Target"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the first path_track in the train\'s path. The train will spawn at this path_track. It will also turn to face direction indicated by the \'Orientation Type\' setting."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.startspeed"
			string m_FriendlyName = "Max Speed (units / second)"
			string m_TooltipOverride = ""
			string m_HelpText = "The maximum speed that this train can move. Any speeds applied to this train, such as by path_tracks or SetSpeed inputs, will be clipped to this maximum value."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.speed"
			string m_FriendlyName = "Initial Speed (units / second)"
			string m_TooltipOverride = ""
			string m_HelpText = "The speed that the train will move at after it spawns, 0 = stopped."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.velocitytype"
			string m_FriendlyName = "Change Velocity"
			string m_TooltipOverride = ""
			string m_HelpText = "The method through which this train changes its velocity as it moves along the path."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.orientationtype"
			string m_FriendlyName = "Change angles"
			string m_TooltipOverride = ""
			string m_HelpText = "The method through which this train changes its orientation as it moves along the path."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.wheels"
			string m_FriendlyName = "Distance Between the Wheels"
			string m_TooltipOverride = ""
			string m_HelpText = "Used for turning and stopping."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.height"
			string m_FriendlyName = "Height above track"
			string m_TooltipOverride = ""
			string m_HelpText = "The height above the track that this train moves."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.bank"
			string m_FriendlyName = "Bank Angle on Turns"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.dmg"
			string m_FriendlyName = "Damage on Crush"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of damage this train does to entities that block it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.MoveSound"
			string m_FriendlyName = "Move Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound that is played (and looped) while the train is moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.MovePingSound"
			string m_FriendlyName = "Move Ping Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound that is played more frequently as the train speeds up."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.StartSound"
			string m_FriendlyName = "Start Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound played when the train starts moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.StopSound"
			string m_FriendlyName = "Stop Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound played when the train stops moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.volume"
			string m_FriendlyName = "Volume (10 = loudest)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.MoveSoundMinPitch"
			string m_FriendlyName = "Min pitch (1-255, > 100 = higher)"
			string m_TooltipOverride = ""
			string m_HelpText = "The sound pitch value that the train will approach as it comes to a stop."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.MoveSoundMaxPitch"
			string m_FriendlyName = "Max pitch (1-255, > 100 = higher)"
			string m_TooltipOverride = ""
			string m_HelpText = "The sound pitch value that the train will approach as it approaches its max speed (or 1000 inches/second if the \'Use max speed for pitch shifting move sound\' flag is not set)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.MoveSoundMinTime"
			string m_FriendlyName = "Min move sound interval"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum interval at which to play the move ping sound."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.BaseTrain.MoveSoundMaxTime"
			string m_FriendlyName = "Max move sound interval"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum interval at which to play the move ping sound."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_trackautochange"
			string m_FriendlyName = "func_trackautochange"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that works as a rotating/moving platform that will carry a train to a new track. It must be larger in X-Y planar area than the train, since it must contain the train within these dimensions in order to operate when the train is near it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.movesnd"
			string m_FriendlyName = "Move Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "The sound played whenever the platform starts moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.stopsnd"
			string m_FriendlyName = "Stop Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "The sound played when the platform stops moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.volume"
			string m_FriendlyName = "Sound Volume 0.0 - 1.0"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.height"
			string m_FriendlyName = "Travel Altitude"
			string m_TooltipOverride = ""
			string m_HelpText = "The vertical height above the track that the train moves. Negative values moves the train below."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.rotation"
			string m_FriendlyName = "Spin amount"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount this platform should rotate as it moves, in degrees."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.train"
			string m_FriendlyName = "Train to Switch"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.toptrack"
			string m_FriendlyName = "Top Track"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.bottomtrack"
			string m_FriendlyName = "Bottom Track"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange.speed"
			string m_FriendlyName = "Move/Rotate Speed"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackautochange._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_trackchange"
			string m_FriendlyName = "func_trackchange"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that works as a rotating/moving platform that will carry a train to a new track. It must be larger in X-Y planar area than the train, since it must contain the train within these dimensions in order to operate when the train is near it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.movesnd"
			string m_FriendlyName = "Move Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "The sound played whenever the platform starts moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.stopsnd"
			string m_FriendlyName = "Stop Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "The sound played when the platform stops moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.volume"
			string m_FriendlyName = "Sound Volume 0.0 - 1.0"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.height"
			string m_FriendlyName = "Travel Altitude"
			string m_TooltipOverride = ""
			string m_HelpText = "The vertical height above the track that the train moves. Negative values moves the train below."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.rotation"
			string m_FriendlyName = "Spin amount"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount this platform should rotate as it moves, in degrees."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.train"
			string m_FriendlyName = "Train to Switch"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.toptrack"
			string m_FriendlyName = "Top Track"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.bottomtrack"
			string m_FriendlyName = "Bottom Track"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange.speed"
			string m_FriendlyName = "Move/Rotate Speed"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_trackchange._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_tracktrain"
			string m_FriendlyName = "func_tracktrain"
			string m_TooltipOverride = ""
			string m_HelpText = "A moving platform that the player can ride. It follows a path of path_track entities.\nNOTE: Build your train so that the front of the train is facing down the X axis. When it spawns it will automatically rotate to face the next path_track on the path."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.target"
			string m_FriendlyName = "First Stop Target"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the first path_track in the train\'s path. The train will spawn at this path_track. It will also turn to face direction indicated by the \'Orientation Type\' setting."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.startspeed"
			string m_FriendlyName = "Max Speed (units / second)"
			string m_TooltipOverride = ""
			string m_HelpText = "The maximum speed that this train can move. Any speeds applied to this train, such as by path_tracks or SetSpeed inputs, will be clipped to this maximum value."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.speed"
			string m_FriendlyName = "Initial Speed (units / second)"
			string m_TooltipOverride = ""
			string m_HelpText = "The speed that the train will move at after it spawns, 0 = stopped."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.velocitytype"
			string m_FriendlyName = "Change Velocity"
			string m_TooltipOverride = ""
			string m_HelpText = "The method through which this train changes its velocity as it moves along the path."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.orientationtype"
			string m_FriendlyName = "Change angles"
			string m_TooltipOverride = ""
			string m_HelpText = "The method through which this train changes its orientation as it moves along the path."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.wheels"
			string m_FriendlyName = "Distance Between the Wheels"
			string m_TooltipOverride = ""
			string m_HelpText = "Used for turning and stopping."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.height"
			string m_FriendlyName = "Height above track"
			string m_TooltipOverride = ""
			string m_HelpText = "The height above the track that this train moves."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.bank"
			string m_FriendlyName = "Bank Angle on Turns"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.dmg"
			string m_FriendlyName = "Damage on Crush"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of damage this train does to entities that block it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.MoveSound"
			string m_FriendlyName = "Move Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound that is played (and looped) while the train is moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.MovePingSound"
			string m_FriendlyName = "Move Ping Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound that is played more frequently as the train speeds up."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.StartSound"
			string m_FriendlyName = "Start Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound played when the train starts moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.StopSound"
			string m_FriendlyName = "Stop Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound played when the train stops moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.volume"
			string m_FriendlyName = "Volume (10 = loudest)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.MoveSoundMinPitch"
			string m_FriendlyName = "Min pitch (1-255, > 100 = higher)"
			string m_TooltipOverride = ""
			string m_HelpText = "The sound pitch value that the train will approach as it comes to a stop."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.MoveSoundMaxPitch"
			string m_FriendlyName = "Max pitch (1-255, > 100 = higher)"
			string m_TooltipOverride = ""
			string m_HelpText = "The sound pitch value that the train will approach as it approaches its max speed (or 1000 inches/second if the \'Use max speed for pitch shifting move sound\' flag is not set)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.MoveSoundMinTime"
			string m_FriendlyName = "Min move sound interval"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum interval at which to play the move ping sound."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tracktrain.MoveSoundMaxTime"
			string m_FriendlyName = "Max move sound interval"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum interval at which to play the move ping sound."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_tanktrain"
			string m_FriendlyName = "func_tanktrain"
			string m_TooltipOverride = ""
			string m_HelpText = "A moving train that follows a path of path_track entities, shoots at the player, and can be killed.\nNOTE: Build your train so that the front of the train is facing down the X axis. When it spawns it will automatically rotate to face the next path_track on the path."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.target"
			string m_FriendlyName = "First Stop Target"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the first path_track in the train\'s path. The train will spawn at this path_track. It will also turn to face direction indicated by the \'Orientation Type\' setting."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.startspeed"
			string m_FriendlyName = "Max Speed (units / second)"
			string m_TooltipOverride = ""
			string m_HelpText = "The maximum speed that this train can move. Any speeds applied to this train, such as by path_tracks or SetSpeed inputs, will be clipped to this maximum value."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.speed"
			string m_FriendlyName = "Initial Speed (units / second)"
			string m_TooltipOverride = ""
			string m_HelpText = "The speed that the train will move at after it spawns, 0 = stopped."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.velocitytype"
			string m_FriendlyName = "Change Velocity"
			string m_TooltipOverride = ""
			string m_HelpText = "The method through which this train changes its velocity as it moves along the path."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.orientationtype"
			string m_FriendlyName = "Change angles"
			string m_TooltipOverride = ""
			string m_HelpText = "The method through which this train changes its orientation as it moves along the path."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.wheels"
			string m_FriendlyName = "Distance Between the Wheels"
			string m_TooltipOverride = ""
			string m_HelpText = "Used for turning and stopping."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.height"
			string m_FriendlyName = "Height above track"
			string m_TooltipOverride = ""
			string m_HelpText = "The height above the track that this train moves."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.bank"
			string m_FriendlyName = "Bank Angle on Turns"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.dmg"
			string m_FriendlyName = "Damage on Crush"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of damage this train does to entities that block it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.MoveSound"
			string m_FriendlyName = "Move Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound that is played (and looped) while the train is moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.MovePingSound"
			string m_FriendlyName = "Move Ping Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound that is played more frequently as the train speeds up."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.StartSound"
			string m_FriendlyName = "Start Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound played when the train starts moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.StopSound"
			string m_FriendlyName = "Stop Sound"
			string m_TooltipOverride = ""
			string m_HelpText = "A sound played when the train stops moving."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.volume"
			string m_FriendlyName = "Volume (10 = loudest)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.MoveSoundMinPitch"
			string m_FriendlyName = "Min pitch (1-255, > 100 = higher)"
			string m_TooltipOverride = ""
			string m_HelpText = "The sound pitch value that the train will approach as it comes to a stop."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.MoveSoundMaxPitch"
			string m_FriendlyName = "Max pitch (1-255, > 100 = higher)"
			string m_TooltipOverride = ""
			string m_HelpText = "The sound pitch value that the train will approach as it approaches its max speed (or 1000 inches/second if the \'Use max speed for pitch shifting move sound\' flag is not set)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.MoveSoundMinTime"
			string m_FriendlyName = "Min move sound interval"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum interval at which to play the move ping sound."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.MoveSoundMaxTime"
			string m_FriendlyName = "Max move sound interval"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum interval at which to play the move ping sound."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_tanktrain.health"
			string m_FriendlyName = "Health"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.func_traincontrols"
			string m_FriendlyName = "func_traincontrols"
			string m_TooltipOverride = ""
			string m_HelpText = "When used by the player, this entity overrides the player\'s controls to let them drive a train."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_traincontrols.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_traincontrols.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_traincontrols.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_traincontrols.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_traincontrols.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_traincontrols.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_traincontrols.target"
			string m_FriendlyName = "Train Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The target train to control when the player uses these controls."
		},
		CHelpEntry
		{
			string m_Id = "Element.tanktrain_aitarget"
			string m_FriendlyName = "tanktrain_aitarget"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that changes the target of a tanktrain_ai entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.tanktrain_aitarget.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.tanktrain_aitarget.target"
			string m_FriendlyName = "Tank AI Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "The tanktrain_ai entity to change the target of."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.tanktrain_aitarget.newtarget"
			string m_FriendlyName = "New Target Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "The entity to tell the tanktrain_ai to target."
		},
		CHelpEntry
		{
			string m_Id = "Element.tanktrain_ai"
			string m_FriendlyName = "tanktrain_ai"
			string m_TooltipOverride = ""
			string m_HelpText = "Train chase AI"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.tanktrain_ai.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.tanktrain_ai.target"
			string m_FriendlyName = "Train Name"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.tanktrain_ai.startsound"
			string m_FriendlyName = "Start Moving Sound"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.tanktrain_ai.enginesound"
			string m_FriendlyName = "Engine Loop Sound"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.tanktrain_ai.movementsound"
			string m_FriendlyName = "Vehicle Movement Sound"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.path_track"
			string m_FriendlyName = "path_track"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity used to build paths for other entities to follow. Each path_track is a node on the path, each holding the name of the next path_track in the path."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.path_track.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.path_track.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.path_track.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.path_track.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.path_track.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.path_track.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.path_track.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.path_track.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.path_track.target"
			string m_FriendlyName = "Next Stop Target"
			string m_TooltipOverride = ""
			string m_HelpText = "The next path_track in the path."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.path_track.altpath"
			string m_FriendlyName = "Branch Path"
			string m_TooltipOverride = ""
			string m_HelpText = "An alternative path_track to be the next node in the path. Useful for making branching paths. Use the ToggleAlternatePath / EnableAlternatePath inputs to make the alternative path active."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.path_track.speed"
			string m_FriendlyName = "New Train Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "When the train reaches this path_track, it will set its speed to this speed. This speed must be a positive value that is less than the train\'s max speed. A value of 0 will cause no change in the train\'s speed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.path_track.radius"
			string m_FriendlyName = "Path radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Used by NPCs who follow track paths (attack chopper/gunship). This tells them the maximum distance they\'re allowed to be from the path at this node."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.path_track.orientationtype"
			string m_FriendlyName = "Orientation Type"
			string m_TooltipOverride = ""
			string m_HelpText = "The way that the path follower faces as it moves through this path track."
		},
		CHelpEntry
		{
			string m_Id = "Element.test_traceline"
			string m_FriendlyName = "test_traceline"
			string m_TooltipOverride = ""
			string m_HelpText = "A debugging tool for testing tracelines."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.test_traceline.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Element.trigger_autosave"
			string m_FriendlyName = "trigger_autosave"
			string m_TooltipOverride = ""
			string m_HelpText = "A trigger volume that autosaves when the player touches it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_autosave.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_autosave.master"
			string m_FriendlyName = "Master"
			string m_TooltipOverride = ""
			string m_HelpText = "Legacy support: The name of a master entity. If the master hasn\'t been activated, this entity will not activate."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_autosave.NewLevelUnit"
			string m_FriendlyName = "Force New Level Unit"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, the save will discard any savedata from previous levels, for the purpose of keeping savegame filesizes down. Can only be safely used if there is no way for the player to return to previous levels."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_autosave.DangerousTimer"
			string m_FriendlyName = "Dangerous Timer"
			string m_TooltipOverride = ""
			string m_HelpText = "The number of seconds the player must survive before this autosave takes effect."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_autosave.MinimumHitPoints"
			string m_FriendlyName = "Minumum Hit Points"
			string m_TooltipOverride = ""
			string m_HelpText = "Don\'t save dangerous when player has less than this many hitpoints."
		},
		CHelpEntry
		{
			string m_Id = "Element.trigger_changelevel"
			string m_FriendlyName = "trigger_changelevel"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that triggers a level change.\nPlace an info_landmark in both maps that marks the \'same\' location in each map.\nTIPS & TRICKS: To fire events in the next level, use the OnLevelChange output to turn on an env_global in the current level.  Create a logic_auto in the next level that checks for the state set by the env_global.\n\nTo control which entities go through the level transition, create one or more trigger_transitions and give them the same name as the landmark. Any entities within the trigger_transition(s) will go to the next map."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_changelevel.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_changelevel.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_changelevel.map"
			string m_FriendlyName = "New Map Name"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_changelevel.landmark"
			string m_FriendlyName = "Landmark Name"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_changelevel.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Element.trigger_gravity"
			string m_FriendlyName = "trigger_gravity"
			string m_TooltipOverride = ""
			string m_HelpText = "A trigger volume that changes the gravity on any entity that touches it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_gravity.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_gravity.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_gravity.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_gravity.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_gravity.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_gravity.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_gravity.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_gravity.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_gravity.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_gravity.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_gravity.filtername"
			string m_FriendlyName = "Filter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_gravity.gravity"
			string m_FriendlyName = "Gravity (0-1)"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.trigger_playermovement"
			string m_FriendlyName = "trigger_playermovement"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that can be used to disable player\'s automatic ducking/unducking when jumping."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_playermovement.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_playermovement.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_playermovement.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_playermovement.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_playermovement.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_playermovement.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_playermovement.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_playermovement.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_playermovement.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_playermovement.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_playermovement.filtername"
			string m_FriendlyName = "Filter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
		},
		CHelpEntry
		{
			string m_Id = "Element.trigger_soundscape"
			string m_FriendlyName = "trigger_soundscape"
			string m_TooltipOverride = ""
			string m_HelpText = "Soundscape trigger. It is not necessary to create outputs for this trigger. It automatically will trigger the soundscape referred to by its \'Soundscape\' property."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_soundscape.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_soundscape.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_soundscape.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_soundscape.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_soundscape.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_soundscape.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_soundscape.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_soundscape.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_soundscape.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_soundscape.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_soundscape.filtername"
			string m_FriendlyName = "Filter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_soundscape.soundscape"
			string m_FriendlyName = "Soundscape"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.trigger_hurt"
			string m_FriendlyName = "trigger_hurt"
			string m_TooltipOverride = ""
			string m_HelpText = "A trigger volume that damages entities that touch it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_hurt.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_hurt.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_hurt.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_hurt.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_hurt.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_hurt.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_hurt.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_hurt.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_hurt.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_hurt.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_hurt.filtername"
			string m_FriendlyName = "Filter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_hurt.master"
			string m_FriendlyName = "Master (Obsolete)"
			string m_TooltipOverride = ""
			string m_HelpText = "Legacy support: The name of a master entity. If the master hasn\'t been activated, this entity will not activate."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_hurt.damage"
			string m_FriendlyName = "Damage"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of damage done to entities that touch this trigger. The damage is done every half-second. See also \'Damage Model\' for extra details on how damage can be dealt."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_hurt.damagecap"
			string m_FriendlyName = "Damage Cap"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum damage dealt per second. This field is only used if you select the Doubling w/Forgiveness damage model, via the spawnflag."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_hurt.damagetype"
			string m_FriendlyName = "Damage Type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_hurt.damagemodel"
			string m_FriendlyName = "Damage Model"
			string m_TooltipOverride = ""
			string m_HelpText = "How damage is dealt. Normal always does the specified amount of damage each half second. Doubling starts with the specified amount and doubles it each time it hurts the toucher. Forgiveness means that if the toucher gets out of the trigger the damage will reset to the specified value. Good for making triggers that are deadly over time without having to cause massive damage on each touch."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_hurt.nodmgforce"
			string m_FriendlyName = "Zero Damage Force"
			string m_TooltipOverride = ""
			string m_HelpText = "Should the damaged entity receive no physics force from this trigger."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_hurt.damageforce"
			string m_FriendlyName = "Damage Force Override"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_hurt.thinkalways"
			string m_FriendlyName = "Always think every frame"
			string m_TooltipOverride = ""
			string m_HelpText = "Normally triggers think every half second, in some cases you may need to request it to damage every frame.  This is expensive!"
		},
		CHelpEntry
		{
			string m_Id = "Element.trigger_remove"
			string m_FriendlyName = "trigger_remove"
			string m_TooltipOverride = ""
			string m_HelpText = "A trigger volume that removes any entities that touch it. Be careful, removing some entities can cause instability. This is not the same as killing entities. i.e. NPCs removed in this manner will not fire their OnKilled outputs."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_remove.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_remove.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_remove.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_remove.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_remove.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_remove.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_remove.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_remove.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_remove.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_remove.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_remove.filtername"
			string m_FriendlyName = "Filter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
		},
		CHelpEntry
		{
			string m_Id = "Element.trigger_multiple"
			string m_FriendlyName = "trigger_multiple"
			string m_TooltipOverride = ""
			string m_HelpText = "A trigger volume that can be triggered multiple times."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_multiple.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_multiple.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_multiple.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_multiple.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_multiple.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_multiple.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_multiple.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_multiple.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_multiple.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_multiple.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_multiple.filtername"
			string m_FriendlyName = "Filter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_multiple.wait"
			string m_FriendlyName = "Delay Before Reset"
			string m_TooltipOverride = ""
			string m_HelpText = "Amount of time, in seconds, after the trigger_multiple has triggered before it can be triggered again. If set to -1, it will never trigger again (in which case you should just use a trigger_once)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_multiple.entireteam"
			string m_FriendlyName = "Entire Team Number"
			string m_TooltipOverride = ""
			string m_HelpText = "If the entire team is touching, fire OnEntireTeamStartTouch"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_multiple.allowincap"
			string m_FriendlyName = "Incapacitated players can trigger"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_multiple.allowghost"
			string m_FriendlyName = "Ghost players can trigger"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.trigger_once"
			string m_FriendlyName = "trigger_once"
			string m_TooltipOverride = ""
			string m_HelpText = "A trigger volume that removes itself after it is triggered once."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_once.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_once.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_once.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_once.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_once.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_once.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_once.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_once.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_once.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_once.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_once.filtername"
			string m_FriendlyName = "Filter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
		},
		CHelpEntry
		{
			string m_Id = "Element.trigger_look"
			string m_FriendlyName = "trigger_look"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity used to trigger something when the player looks at something. It fires \'OnTrigger\' when the player looks at a target entity for the given amount of time, while within the trigger volume. If the player leaves the trigger or looks away from the target entity the clock resets. If the \'Use Velocity instead of facing\' spawnflag is checked, the trigger uses the player\'s velocity instead of the player\'s view, so it determines whenever the player is moving toward the target entity. Useful for triggering when players are driving a vehicle at something.NOTE: Only designed for single-player game. "
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_look.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_look.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_look.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_look.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_look.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_look.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_look.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_look.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_look.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_look.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_look.filtername"
			string m_FriendlyName = "Filter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_look.target"
			string m_FriendlyName = "Look Target"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the entity to be looked at."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_look.LookTime"
			string m_FriendlyName = "LookTime"
			string m_TooltipOverride = ""
			string m_HelpText = "The time, in seconds, that the player must look the target before firing the output. Resets if player leaves trigger, or looks outside the Field of View threshold."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_look.FieldOfView"
			string m_FriendlyName = "FieldOfView"
			string m_TooltipOverride = ""
			string m_HelpText = "How close the player has to be looking at the target. 1.0 = straight ahead\n 0.0 = +/- 90 degrees\n -1.0 = all directions)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_look.Timeout"
			string m_FriendlyName = "Timeout"
			string m_TooltipOverride = ""
			string m_HelpText = "The time, in seconds, to wait after player enters the trigger before firing the OnTimeout output, 0 = never."
		},
		CHelpEntry
		{
			string m_Id = "Element.trigger_push"
			string m_FriendlyName = "trigger_push"
			string m_TooltipOverride = ""
			string m_HelpText = "A trigger volume that pushes entities that touch it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_push.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_push.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_push.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_push.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_push.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_push.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_push.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_push.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_push.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_push.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_push.filtername"
			string m_FriendlyName = "Filter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_push.pushdir"
			string m_FriendlyName = "Push Direction (Pitch Yaw Roll)"
			string m_TooltipOverride = ""
			string m_HelpText = "Angles indicating the direction to push touched entities."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_push.speed"
			string m_FriendlyName = "Speed of Push"
			string m_TooltipOverride = ""
			string m_HelpText = "The speed at which to push entities away, in inches / second."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_push.alternateticksfix"
			string m_FriendlyName = "Scale force for alternate ticks"
			string m_TooltipOverride = ""
			string m_HelpText = "If nonzero, scale the force by this amount when running with alternate ticks. This fixes problems with an overly large force due to the longer frametime on when running with sv_alternateticks 1."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_push.triggeronstarttouch"
			string m_FriendlyName = "Trigger on Start Touch"
			string m_TooltipOverride = ""
			string m_HelpText = "Trigger on start touch instead of on touch."
		},
		CHelpEntry
		{
			string m_Id = "Element.trigger_wind"
			string m_FriendlyName = "trigger_wind"
			string m_TooltipOverride = ""
			string m_HelpText = "A trigger volume that pushes physics objects that touch it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_wind.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_wind.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_wind.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_wind.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_wind.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_wind.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_wind.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_wind.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_wind.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_wind.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_wind.filtername"
			string m_FriendlyName = "Filter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_wind.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_wind.Speed"
			string m_FriendlyName = "Speed"
			string m_TooltipOverride = ""
			string m_HelpText = "The baseline for how hard the wind blows."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_wind.SpeedNoise"
			string m_FriendlyName = "Speed Noise"
			string m_TooltipOverride = ""
			string m_HelpText = "Noise added to wind speed +/-"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_wind.DirectionNoise"
			string m_FriendlyName = "Direction Noise"
			string m_TooltipOverride = ""
			string m_HelpText = "Noise added to wind direction."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_wind.HoldTime"
			string m_FriendlyName = "Hold Time"
			string m_TooltipOverride = ""
			string m_HelpText = "Baseline for how long to wait before changing wind."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_wind.HoldNoise"
			string m_FriendlyName = "Hold Noise"
			string m_TooltipOverride = ""
			string m_HelpText = "Noise added to how long to wait before changing wind."
		},
		CHelpEntry
		{
			string m_Id = "Element.trigger_impact"
			string m_FriendlyName = "trigger_impact"
			string m_TooltipOverride = ""
			string m_HelpText = "A trigger volume that can be told to push all physics objects that are inside of it in the direction specified by this trigger\'s angles.\nAlso outputs the force at the time of impact for anyone else that wants to use it."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_impact.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_impact.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_impact.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_impact.Magnitude"
			string m_FriendlyName = "Magnitude"
			string m_TooltipOverride = ""
			string m_HelpText = "The strength of the impact. Negative values reverse the direction."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_impact.noise"
			string m_FriendlyName = "Noise"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount of directional noise (0-1). 0 = no noise, 1 = random direction."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_impact.viewkick"
			string m_FriendlyName = "Viewkick"
			string m_TooltipOverride = ""
			string m_HelpText = "The amount to kick player\'s view if the player is in the trigger.  Proportional to magnitude (0-1)."
		},
		CHelpEntry
		{
			string m_Id = "Element.trigger_proximity"
			string m_FriendlyName = "trigger_proximity"
			string m_TooltipOverride = ""
			string m_HelpText = "Measures the distance of the player within the trigger volume from a given point (and within a given radius). The NearestPlayerDistance output will be 0 when the player is at the center point, and 1 when the player is at the radius."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_proximity.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_proximity.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_proximity.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_proximity.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_proximity.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_proximity.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_proximity.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_proximity.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_proximity.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_proximity.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_proximity.filtername"
			string m_FriendlyName = "Filter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_proximity.measuretarget"
			string m_FriendlyName = "Point to Measure From"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a target entity who\'s origin is the point to measure the player\'s distance from."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_proximity.radius"
			string m_FriendlyName = "Radius to measure within"
			string m_TooltipOverride = ""
			string m_HelpText = "The radius to which the distance should be mapped. If the player is outside the radius he will be ignored."
		},
		CHelpEntry
		{
			string m_Id = "Element.trigger_teleport"
			string m_FriendlyName = "trigger_teleport"
			string m_TooltipOverride = ""
			string m_HelpText = "A trigger volume that teleports entities that touch it. Entities are teleported to the Remote Destination, and have their angles set to that of the Remote Destination\'s. If a Local Destination Landmark is specified, teleported entities are offset from the target by their initial offset from the landmark, and their angles are left alone."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_teleport.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_teleport.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_teleport.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_teleport.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_teleport.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_teleport.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_teleport.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_teleport.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_teleport.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_teleport.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_teleport.filtername"
			string m_FriendlyName = "Filter Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_teleport.target"
			string m_FriendlyName = "Remote Destination"
			string m_TooltipOverride = ""
			string m_HelpText = "The entity specifying the point to which entities should be teleported."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_teleport.landmark"
			string m_FriendlyName = "Local Destination Landmark"
			string m_TooltipOverride = ""
			string m_HelpText = "If specified, then teleported entities are offset from the target by their initial offset from the landmark."
		},
		CHelpEntry
		{
			string m_Id = "Element.trigger_transition"
			string m_FriendlyName = "trigger_transition"
			string m_TooltipOverride = ""
			string m_HelpText = "A volume that\'s used to control which entities go through the level transition. Create one or more trigger_transitions and give them the same name as the changelevel landmark. Any entities within the trigger_transition(s) will go to the next map.See trigger_changelevel for more info."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_transition.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Element.trigger_serverragdoll"
			string m_FriendlyName = "trigger_serverragdoll"
			string m_TooltipOverride = ""
			string m_HelpText = "A volume that forces any NPC inside it to create a server side ragdoll instead of a client one."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.trigger_serverragdoll.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Element.ai_speechfilter"
			string m_FriendlyName = "ai_speechfilter"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that can be used to control the idle speech patterns of a set of NPCs."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_speechfilter.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_speechfilter.ResponseContext"
			string m_FriendlyName = "Response Contexts"
			string m_TooltipOverride = ""
			string m_HelpText = "Response system context(s) for this entity. Format should be: \'key:value,key2:value2,etc\'. When this entity speaks, the list of keys & values will be passed to the response rules system."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_speechfilter.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_speechfilter.subject"
			string m_FriendlyName = "Subject(s)"
			string m_TooltipOverride = ""
			string m_HelpText = "This is the NPC(s) whose speech we\'re filtering. May be a targetname or a classname."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_speechfilter.IdleModifier"
			string m_FriendlyName = "Idle modifier."
			string m_TooltipOverride = ""
			string m_HelpText = "Multiplier to the percentage chance that our NPC(s) will idle speak. Set to 0 to prevent all idle speech."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ai_speechfilter.NeverSayHello"
			string m_FriendlyName = "Greet Player\?"
			string m_TooltipOverride = ""
			string m_HelpText = "If set to Yes, our NPC(s) won\'t greet the player when they first meet him."
		},
		CHelpEntry
		{
			string m_Id = "Element.water_lod_control"
			string m_FriendlyName = "water_lod_control"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity used to control the LOD behavior of any water in the map. If your map has water, this entity is required."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.water_lod_control.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.water_lod_control.cheapwaterstartdistance"
			string m_FriendlyName = "Start Transition to Cheap Water"
			string m_TooltipOverride = ""
			string m_HelpText = "This is the distance from the camera that water will start transitioning to cheap water, in inches."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.water_lod_control.cheapwaterenddistance"
			string m_FriendlyName = "End Transition to Cheap Water"
			string m_TooltipOverride = ""
			string m_HelpText = "This is the distance from the camera that water will finish transitioning to cheap water, in inches."
		},
		CHelpEntry
		{
			string m_Id = "Element.info_camera_link"
			string m_FriendlyName = "info_camera_link"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that can use point_cameras to render images for materials used by entities. To author the material, use the special identifier _rt_Camera for the $baseTexture (or whatever texture you want, like envmap, etc.) in the .vmt then connect the \'target\' field to the entity which uses that material, and the \'PointCamera\' field to the point_camera you want to have appear on that entity\'s material"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_camera_link.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_camera_link.target"
			string m_FriendlyName = "Entity Whose Material Uses _rt_camera"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.info_camera_link.PointCamera"
			string m_FriendlyName = "Camera Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of a point_camera entity in the map that the material should be rendered from."
		},
		CHelpEntry
		{
			string m_Id = "Element.logic_measure_movement"
			string m_FriendlyName = "logic_measure_movement"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that can measure the movement of an entity relative to another entity and apply that movement to a third entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_measure_movement.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_measure_movement.MeasureTarget"
			string m_FriendlyName = "Entity to Measure"
			string m_TooltipOverride = ""
			string m_HelpText = "Entity whose movement you want to measure."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_measure_movement.MeasureReference"
			string m_FriendlyName = "Measure Reference"
			string m_TooltipOverride = ""
			string m_HelpText = "The movement of Entity to Measure will be measured relative to this entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_measure_movement.Target"
			string m_FriendlyName = "Entity to Move"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity will be moved to mimic the motions of Entity to Measure."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_measure_movement.TargetReference"
			string m_FriendlyName = "Movement Reference"
			string m_TooltipOverride = ""
			string m_HelpText = "The Entity to Move will move relative to this entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_measure_movement.TargetScale"
			string m_FriendlyName = "Movement scale"
			string m_TooltipOverride = ""
			string m_HelpText = "A scale to divide the measured movements by, before applying those movements to the Entity to Move. 1 = target entity moves as much as the measured entity, 2 = target entity moves half as far as the measured entity, and 0.5 = target entity moves twice as far as the measured entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_measure_movement.MeasureType"
			string m_FriendlyName = "Measurement Type"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.npc_furniture"
			string m_FriendlyName = "npc_furniture"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity used for non-NPCs that need to synchronise their animation with an NPC in a scripted_sequence. Usually a pieceof furniture or door that an NPC needs to manipulate within a scripted_sequence."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.ResponseContext"
			string m_FriendlyName = "Response Contexts"
			string m_TooltipOverride = ""
			string m_HelpText = "Response system context(s) for this entity. Format should be: \'key:value,key2:value2,etc\'. When this entity speaks, the list of keys & values will be passed to the response rules system."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.target"
			string m_FriendlyName = "Target Path Corner"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, the name of a path corner entity that this NPC will walk to, after spawning."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.squadname"
			string m_FriendlyName = "Squad Name"
			string m_TooltipOverride = ""
			string m_HelpText = "NPCs that are in the same squad (i.e. have matching squad names) will share information about enemies, and will take turns attacking and covering each other."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.hintgroup"
			string m_FriendlyName = "Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Hint groups are used by NPCs to restrict their hint-node searching to a subset of the map\'s hint nodes. Only hint nodes with matching hint group names will be considered by this NPC."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.hintlimiting"
			string m_FriendlyName = "Hint Limit Nav"
			string m_TooltipOverride = ""
			string m_HelpText = "Limits NPC to using specified hint group for navigation requests, but does not limit local navigation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.sleepstate"
			string m_FriendlyName = "Sleep State"
			string m_TooltipOverride = ""
			string m_HelpText = "Holds the NPC in stasis until specified condition. See also \'Wake Radius\' and \'Wake Squad\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.wakeradius"
			string m_FriendlyName = "Wake Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Auto-wake if player within this distance"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.wakesquad"
			string m_FriendlyName = "Wake Squad"
			string m_TooltipOverride = ""
			string m_HelpText = "Wake all of the NPCs squadmates if the NPC is woken"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.enemyfilter"
			string m_FriendlyName = "Enemy Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter by which to filter potential enemies"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.ignoreunseenenemies"
			string m_FriendlyName = "Ignore unseen enemies"
			string m_TooltipOverride = ""
			string m_HelpText = "Prefer visible enemies, regardless of distance or relationship priority"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.physdamagescale"
			string m_FriendlyName = "Physics Impact Damage Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales damage energy when this character is hit by a physics object. With a value of 0 the NPC will take no damage from physics."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_furniture.model"
			string m_FriendlyName = "Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.material_modify_control"
			string m_FriendlyName = "material_modify_control"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that can be used to directly control material vars. To use it, you need to read the .vmt of the material you intend to change. Parent this entity to a brush model entity who\'s material you want to control."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.material_modify_control.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.material_modify_control.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.material_modify_control.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.material_modify_control.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.material_modify_control.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.material_modify_control.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.material_modify_control.materialName"
			string m_FriendlyName = "Material to modify."
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.material_modify_control.materialVar"
			string m_FriendlyName = "Material variable to modify."
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.point_devshot_camera"
			string m_FriendlyName = "point_devshot_camera"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity used by the -makedevshots system, which automatically takes screenshots at the position of every devshot camera in the level."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_devshot_camera.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_devshot_camera.cameraname"
			string m_FriendlyName = "Camera Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Used as the name of the directory to store screenshots from this camera. Must be unique within the level."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_devshot_camera.FOV"
			string m_FriendlyName = "Camera FOV"
			string m_TooltipOverride = ""
			string m_HelpText = "FOV of this camera."
		},
		CHelpEntry
		{
			string m_Id = "Element.logic_playerproxy"
			string m_FriendlyName = "logic_playerproxy"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that is used to relay inputs/ouputs to the player and back to the world."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_playerproxy.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_playerproxy.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_spritetrail"
			string m_FriendlyName = "env_spritetrail"
			string m_TooltipOverride = ""
			string m_HelpText = "A magical trail you can parent to anything you heart desires."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spritetrail.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spritetrail.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spritetrail.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spritetrail.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spritetrail.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spritetrail.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spritetrail.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spritetrail.lifetime"
			string m_FriendlyName = "Lifetime"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spritetrail.startwidth"
			string m_FriendlyName = "Start Width"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spritetrail.endwidth"
			string m_FriendlyName = "End Width"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spritetrail.spritename"
			string m_FriendlyName = "Sprite Name"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spritetrail.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_spritetrail.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_projectedtexture"
			string m_FriendlyName = "env_projectedtexture"
			string m_TooltipOverride = ""
			string m_HelpText = "Projected texture entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_projectedtexture.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_projectedtexture.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_projectedtexture.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_projectedtexture.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_projectedtexture.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_projectedtexture.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_projectedtexture.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_projectedtexture.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_projectedtexture.target"
			string m_FriendlyName = "target"
			string m_TooltipOverride = ""
			string m_HelpText = "target"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_projectedtexture.lightfov"
			string m_FriendlyName = "FOV"
			string m_TooltipOverride = ""
			string m_HelpText = "FOV"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_projectedtexture.nearz"
			string m_FriendlyName = "NearZ"
			string m_TooltipOverride = ""
			string m_HelpText = "Near Z for projected texture"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_projectedtexture.farz"
			string m_FriendlyName = "FarZ"
			string m_TooltipOverride = ""
			string m_HelpText = "Far Z for projected texture"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_projectedtexture.enableshadows"
			string m_FriendlyName = "Enable Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = "Enables/disables shadows from this projected texture."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_projectedtexture.shadowquality"
			string m_FriendlyName = "Shadow Quality"
			string m_TooltipOverride = ""
			string m_HelpText = "Quality of shadows."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_projectedtexture.lightonlytarget"
			string m_FriendlyName = "Light Only Target"
			string m_TooltipOverride = ""
			string m_HelpText = "Limit flashlight effect to only effect target entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_projectedtexture.lightworld"
			string m_FriendlyName = "Light World"
			string m_TooltipOverride = ""
			string m_HelpText = "Control whether flashlight effects static world geometry."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_projectedtexture.lightcolor"
			string m_FriendlyName = "Light Color"
			string m_TooltipOverride = ""
			string m_HelpText = "Light Color RGB-Intensity"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_projectedtexture.cameraspace"
			string m_FriendlyName = "Camera Space"
			string m_TooltipOverride = ""
			string m_HelpText = "Angles are interpreted as being relative to camera."
		},
		CHelpEntry
		{
			string m_Id = "Element.func_reflective_glass"
			string m_FriendlyName = "func_reflective_glass"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to produce perfectly reflective glass that renders world + entities. Typically, you want your glass brush to have nodraw on all non-reflective surfaces and you want to use a shader like lightmappedreflective in your material applied to the non-nodraw surfaces. See hl2/materials/glass/reflectiveglass001.vmt for an example. NOTE: currently, you cannot use reflective glass in scenes with water, and you can only have 1 reflective glass in your view frustum ( + pvs ) at a time."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.globalname"
			string m_FriendlyName = "Global Entity Name"
			string m_TooltipOverride = ""
			string m_HelpText = "Name by which this entity is linked to another entity in a different map. When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map will have the previous map\'s state copied over their state."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.InputFilter"
			string m_FriendlyName = "Input Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to specify which inputs this entity will accept."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.disableshadows"
			string m_FriendlyName = "Disable shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass._minlight"
			string m_FriendlyName = "Minimum Light Level"
			string m_TooltipOverride = ""
			string m_HelpText = "The minimum level of ambient light that hits this brush."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.Solidity"
			string m_FriendlyName = "Solidity"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to control the solidity/collision of these brushes."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.excludednpc"
			string m_FriendlyName = "NPC class excluded from collisions"
			string m_TooltipOverride = ""
			string m_HelpText = "If an NPC classname is specified here, NPCs of that type won\'t collide with these brushes. In Episodic, you may also specify an individual entity\'s name."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.invert_exclusion"
			string m_FriendlyName = "Invert NPC class exclusion"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, then the excluded NPC class will consider this brush solid, and all other NPC classes will consider it non-solid."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.solidbsp"
			string m_FriendlyName = "Solid BSP"
			string m_TooltipOverride = ""
			string m_HelpText = "Set this if this brush is in heirarchy with a moving object of some kind, and the player can stand on this brush."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_reflective_glass.vrad_brush_cast_shadows"
			string m_FriendlyName = "Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = "Set this if this brush casts lightmap shadows."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_particle_performance_monitor"
			string m_FriendlyName = "env_particle_performance_monitor"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity for turning on and off measuring and display of particle throughput."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_particle_performance_monitor.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Element.npc_puppet"
			string m_FriendlyName = "npc_puppet"
			string m_TooltipOverride = ""
			string m_HelpText = "Puppet entity that mimics the animations of a target NPC."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.renderfx"
			string m_FriendlyName = "Render FX"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.rendermode"
			string m_FriendlyName = "Render Mode"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to set a non-standard rendering mode on this entity. See also \'FX Amount\' and \'FX Color\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.mincpulevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.maxcpulevel"
			string m_FriendlyName = "Maximum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.mingpulevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.maxgpulevel"
			string m_FriendlyName = "Maximum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.disableX360"
			string m_FriendlyName = "Disable X360"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.renderamt"
			string m_FriendlyName = "FX Amount (0 - 255)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX amount is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.rendercolor"
			string m_FriendlyName = "FX Color (R G B)"
			string m_TooltipOverride = ""
			string m_HelpText = "The FX color is used by the selected Render Mode."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.disablereceiveshadows"
			string m_FriendlyName = "Disable Receiving Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.fademindist"
			string m_FriendlyName = "Start Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Distance at which the overlay starts to fade (<0 = subtract from fademaxdist)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.fademaxdist"
			string m_FriendlyName = "End Fade Dist"
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance at which the overlay is visible (0 = don\'t fade out)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.fadescale"
			string m_FriendlyName = "Fade Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "If you specify a fade in the worldspawn, or if the engine is running under low end/medium end/XBox360, then the engine will forcibly fade out props even if fademindist/fademaxdist isn\'t specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades. Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.damagefilter"
			string m_FriendlyName = "Damage Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Name of the filter entity that controls which entities can damage us."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.ResponseContext"
			string m_FriendlyName = "Response Contexts"
			string m_TooltipOverride = ""
			string m_HelpText = "Response system context(s) for this entity. Format should be: \'key:value,key2:value2,etc\'. When this entity speaks, the list of keys & values will be passed to the response rules system."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.disableshadows"
			string m_FriendlyName = "Disable Shadows"
			string m_TooltipOverride = ""
			string m_HelpText = "Used to disable dynamic shadows on this entity."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.target"
			string m_FriendlyName = "Target Path Corner"
			string m_TooltipOverride = ""
			string m_HelpText = "If set, the name of a path corner entity that this NPC will walk to, after spawning."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.squadname"
			string m_FriendlyName = "Squad Name"
			string m_TooltipOverride = ""
			string m_HelpText = "NPCs that are in the same squad (i.e. have matching squad names) will share information about enemies, and will take turns attacking and covering each other."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.hintgroup"
			string m_FriendlyName = "Hint Group"
			string m_TooltipOverride = ""
			string m_HelpText = "Hint groups are used by NPCs to restrict their hint-node searching to a subset of the map\'s hint nodes. Only hint nodes with matching hint group names will be considered by this NPC."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.hintlimiting"
			string m_FriendlyName = "Hint Limit Nav"
			string m_TooltipOverride = ""
			string m_HelpText = "Limits NPC to using specified hint group for navigation requests, but does not limit local navigation."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.spawnflags"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "spawnflags"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.sleepstate"
			string m_FriendlyName = "Sleep State"
			string m_TooltipOverride = ""
			string m_HelpText = "Holds the NPC in stasis until specified condition. See also \'Wake Radius\' and \'Wake Squad\'."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.wakeradius"
			string m_FriendlyName = "Wake Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "Auto-wake if player within this distance"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.wakesquad"
			string m_FriendlyName = "Wake Squad"
			string m_TooltipOverride = ""
			string m_HelpText = "Wake all of the NPCs squadmates if the NPC is woken"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.enemyfilter"
			string m_FriendlyName = "Enemy Filter"
			string m_TooltipOverride = ""
			string m_HelpText = "Filter by which to filter potential enemies"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.ignoreunseenenemies"
			string m_FriendlyName = "Ignore unseen enemies"
			string m_TooltipOverride = ""
			string m_HelpText = "Prefer visible enemies, regardless of distance or relationship priority"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.physdamagescale"
			string m_FriendlyName = "Physics Impact Damage Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "Scales damage energy when this character is hit by a physics object. With a value of 0 the NPC will take no damage from physics."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.parentname"
			string m_FriendlyName = "Parent"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of this entity\'s parent in the movement hierarchy. Entities with parents move with their parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.parentAttachmentName"
			string m_FriendlyName = "Parent Model Bone/Attachment Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name of the bone or attachment to attach to on the entity\'s parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.local.origin"
			string m_FriendlyName = "Model Attachment position offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.local.angles"
			string m_FriendlyName = "Model Attachment angular offset"
			string m_TooltipOverride = ""
			string m_HelpText = "Angular offset in the local space of the parent model\'s attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.useLocalOffset"
			string m_FriendlyName = "Use Model Attachment Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "If yes, respect the specified local offset when doing the initial hierarchical attachment to its parent."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.model"
			string m_FriendlyName = "World Model"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.skin"
			string m_FriendlyName = "Skin"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple versions of their textures, called skins. This is programmatically populated from the model. The FGD data is unused!"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.body"
			string m_FriendlyName = "Body"
			string m_TooltipOverride = ""
			string m_HelpText = "Some models have multiple bodygroups. Set this to a number other than 0 to use that bodygroup instead of the default."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.animationtarget"
			string m_FriendlyName = "Animation target"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.npc_puppet.attachmentname"
			string m_FriendlyName = "Target attachment point name"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.point_gamestats_counter"
			string m_FriendlyName = "point_gamestats_counter"
			string m_TooltipOverride = ""
			string m_HelpText = "Generic game statistics counter."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_gamestats_counter.origin"
			string m_FriendlyName = "Origin (X Y Z)"
			string m_TooltipOverride = ""
			string m_HelpText = "The position of this entity\'s center in the world. Rotating entities typically rotate around their origin."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_gamestats_counter.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_gamestats_counter.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_gamestats_counter.Name"
			string m_FriendlyName = "Name of statistic counter"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.func_instance"
			string m_FriendlyName = "func_instance"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity for placing an instance of a prefab map file.  You may translate and rotate this entity. You can use the replace keys to do parameter changes on the instance contents.  In a $ at the beginning of a variable name.  Then just use the $variable name inside of the instance contents on any value portion of a key/value pair."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance.targetname"
			string m_FriendlyName = "Fix Up Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that all entities will be fixed up with based upon the fix up style."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance.file"
			string m_FriendlyName = "VMAP Filename"
			string m_TooltipOverride = ""
			string m_HelpText = "This indicates a map file relative to the map\'s file name"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance.fixup_style"
			string m_FriendlyName = "Entity Name Fix Up"
			string m_TooltipOverride = ""
			string m_HelpText = "Fixup style for instanced entity names.  Uses the \'Fix Up Name\' field."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance.replace01"
			string m_FriendlyName = "Replace"
			string m_TooltipOverride = ""
			string m_HelpText = "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance.replace02"
			string m_FriendlyName = "Replace"
			string m_TooltipOverride = ""
			string m_HelpText = "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance.replace03"
			string m_FriendlyName = "Replace"
			string m_TooltipOverride = ""
			string m_HelpText = "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance.replace04"
			string m_FriendlyName = "Replace"
			string m_TooltipOverride = ""
			string m_HelpText = "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance.replace05"
			string m_FriendlyName = "Replace"
			string m_TooltipOverride = ""
			string m_HelpText = "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance.replace06"
			string m_FriendlyName = "Replace"
			string m_TooltipOverride = ""
			string m_HelpText = "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance.replace07"
			string m_FriendlyName = "Replace"
			string m_TooltipOverride = ""
			string m_HelpText = "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance.replace08"
			string m_FriendlyName = "Replace"
			string m_TooltipOverride = ""
			string m_HelpText = "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance.replace09"
			string m_FriendlyName = "Replace"
			string m_TooltipOverride = ""
			string m_HelpText = "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance.replace10"
			string m_FriendlyName = "Replace"
			string m_TooltipOverride = ""
			string m_HelpText = "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
		},
		CHelpEntry
		{
			string m_Id = "Element.func_instance_parms"
			string m_FriendlyName = "func_instance_parms"
			string m_TooltipOverride = ""
			string m_HelpText = "Place one copy of this entity inside of an instance.  Whenever you add a $parameter for the instance, get the properties of this entity.  It will auto-populate it with the variables and allow you to indicate the variable type."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance_parms.parm1"
			string m_FriendlyName = "Parm"
			string m_TooltipOverride = ""
			string m_HelpText = "This is a parameter.  It goes in the form of $variable type [default value]."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance_parms.parm2"
			string m_FriendlyName = "Parm"
			string m_TooltipOverride = ""
			string m_HelpText = "This is a parameter.  It goes in the form of $variable type [default value]."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance_parms.parm3"
			string m_FriendlyName = "Parm"
			string m_TooltipOverride = ""
			string m_HelpText = "This is a parameter.  It goes in the form of $variable type [default value]."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance_parms.parm4"
			string m_FriendlyName = "Parm"
			string m_TooltipOverride = ""
			string m_HelpText = "This is a parameter.  It goes in the form of $variable type [default value]."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance_parms.parm5"
			string m_FriendlyName = "Parm"
			string m_TooltipOverride = ""
			string m_HelpText = "This is a parameter.  It goes in the form of $variable type [default value]."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance_parms.parm6"
			string m_FriendlyName = "Parm"
			string m_TooltipOverride = ""
			string m_HelpText = "This is a parameter.  It goes in the form of $variable type [default value]."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance_parms.parm7"
			string m_FriendlyName = "Parm"
			string m_TooltipOverride = ""
			string m_HelpText = "This is a parameter.  It goes in the form of $variable type [default value]."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance_parms.parm8"
			string m_FriendlyName = "Parm"
			string m_TooltipOverride = ""
			string m_HelpText = "This is a parameter.  It goes in the form of $variable type [default value]."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance_parms.parm9"
			string m_FriendlyName = "Parm"
			string m_TooltipOverride = ""
			string m_HelpText = "This is a parameter.  It goes in the form of $variable type [default value]."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_instance_parms.parm10"
			string m_FriendlyName = "Parm"
			string m_TooltipOverride = ""
			string m_HelpText = "This is a parameter.  It goes in the form of $variable type [default value]."
		},
		CHelpEntry
		{
			string m_Id = "Element.env_instructor_hint"
			string m_FriendlyName = "env_instructor_hint"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that allows for creation and control of instructor lessons by map logic"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_instructor_hint.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_instructor_hint.hint_target"
			string m_FriendlyName = "Target Entity"
			string m_TooltipOverride = ""
			string m_HelpText = "The entity to show this hint on top of. The entity used must exist on the client, info_target_instructor_hint can be parented to server only entities for this purpose."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_instructor_hint.hint_static"
			string m_FriendlyName = "Positioning"
			string m_TooltipOverride = ""
			string m_HelpText = "Either show at the position of the Target Entity. Or show the hint directly on the hud at a fixed position."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_instructor_hint.hint_allow_nodraw_target"
			string m_FriendlyName = "Allow invisible target"
			string m_TooltipOverride = ""
			string m_HelpText = "Do we allow the hint to follow entites with nodraw set\?"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_instructor_hint.hint_caption"
			string m_FriendlyName = "Caption"
			string m_TooltipOverride = ""
			string m_HelpText = "The text of your hint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_instructor_hint.hint_color"
			string m_FriendlyName = "Caption Color"
			string m_TooltipOverride = ""
			string m_HelpText = "The color of the caption text"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_instructor_hint.hint_forcecaption"
			string m_FriendlyName = "Force caption"
			string m_TooltipOverride = ""
			string m_HelpText = "Do we show the caption text even if the hint is occluded by a wall\?"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_instructor_hint.hint_icon_onscreen"
			string m_FriendlyName = "Onscreen Icon"
			string m_TooltipOverride = ""
			string m_HelpText = "The icon to use when the hint is within the player\'s view."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_instructor_hint.hint_icon_offscreen"
			string m_FriendlyName = "Offscreen Icon"
			string m_TooltipOverride = ""
			string m_HelpText = "The icon to use when the hint is outside the player\'s view."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_instructor_hint.hint_nooffscreen"
			string m_FriendlyName = "Show offscreen"
			string m_TooltipOverride = ""
			string m_HelpText = "When the hint is offscreen, do we show an icon and arrow\?"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_instructor_hint.hint_binding"
			string m_FriendlyName = "Bound Command"
			string m_TooltipOverride = ""
			string m_HelpText = "If using \'show key bindings\' for the onscreen icon, this field should be the command we want to show bindings for"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_instructor_hint.hint_icon_offset"
			string m_FriendlyName = "Icon Height Offset"
			string m_TooltipOverride = ""
			string m_HelpText = "A height offset from the target entity\'s origin to display the hint"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_instructor_hint.hint_pulseoption"
			string m_FriendlyName = "Size Pulsing"
			string m_TooltipOverride = ""
			string m_HelpText = "The icon size can pulsate"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_instructor_hint.hint_alphaoption"
			string m_FriendlyName = "Alpha Pulsing"
			string m_TooltipOverride = ""
			string m_HelpText = "The icon alpha can pulsate"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_instructor_hint.hint_shakeoption"
			string m_FriendlyName = "Shaking"
			string m_TooltipOverride = ""
			string m_HelpText = "The icon can shake"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_instructor_hint.hint_timeout"
			string m_FriendlyName = "Timeout"
			string m_TooltipOverride = ""
			string m_HelpText = "The automatic timeout for the hint. 0 will persist until stopped with EndHint."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_instructor_hint.hint_range"
			string m_FriendlyName = "Display Range"
			string m_TooltipOverride = ""
			string m_HelpText = "The visible range of the hint. 0 will show it at any distance."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.env_instructor_hint.hint_auto_start"
			string m_FriendlyName = "Show on First Sight"
			string m_TooltipOverride = ""
			string m_HelpText = "When the player first sees it, it will automatically show for them."
		},
		CHelpEntry
		{
			string m_Id = "Element.logic_script"
			string m_FriendlyName = "logic_script"
			string m_TooltipOverride = ""
			string m_HelpText = "An entity that acts as a container for scripts"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_script.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_script.Group00"
			string m_FriendlyName = "EntityGroup[0]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_script.Group01"
			string m_FriendlyName = "EntityGroup[1]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_script.Group02"
			string m_FriendlyName = "EntityGroup[2]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_script.Group03"
			string m_FriendlyName = "EntityGroup[3]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_script.Group04"
			string m_FriendlyName = "EntityGroup[4]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_script.Group05"
			string m_FriendlyName = "EntityGroup[5]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_script.Group06"
			string m_FriendlyName = "EntityGroup[6]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_script.Group07"
			string m_FriendlyName = "EntityGroup[7]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_script.Group08"
			string m_FriendlyName = "EntityGroup[8]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_script.Group09"
			string m_FriendlyName = "EntityGroup[9]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_script.Group10"
			string m_FriendlyName = "EntityGroup[10]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_script.Group11"
			string m_FriendlyName = "EntityGroup[11]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_script.Group12"
			string m_FriendlyName = "EntityGroup[12]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_script.Group13"
			string m_FriendlyName = "EntityGroup[13]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_script.Group14"
			string m_FriendlyName = "EntityGroup[14]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_script.Group15"
			string m_FriendlyName = "EntityGroup[15]"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Element.func_timescale"
			string m_FriendlyName = "func_timescale"
			string m_TooltipOverride = ""
			string m_HelpText = "Adjust the time scale of the server and client."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_timescale.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = "The name that other entities refer to this entity by."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_timescale.angles"
			string m_FriendlyName = "Pitch Yaw Roll (Y Z X)"
			string m_TooltipOverride = ""
			string m_HelpText = "This entity\'s orientation in the world. Pitch is rotation around the Y axis, yaw is the rotation around the Z axis, roll is the rotation around the X axis."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_timescale.desiredTimescale"
			string m_FriendlyName = "Desired timescale."
			string m_TooltipOverride = ""
			string m_HelpText = "Time scale to blend towards, this is a multiplicative value where 1.0 is normal time, 0.5 is half speed, 2.0 is double speed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_timescale.acceleration"
			string m_FriendlyName = "Acceleration per second"
			string m_TooltipOverride = ""
			string m_HelpText = "How quickly the change per second goes up to the max."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_timescale.minBlendRate"
			string m_FriendlyName = "Minimum blend per second"
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum change per second when blending from the current timescale to the desired."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.func_timescale.blendDeltaMultiplier"
			string m_FriendlyName = "Perframe delta multiplier"
			string m_TooltipOverride = ""
			string m_HelpText = "The per frame delta between desired and current is multiplied by this to get the maximum change per second."
		},
		CHelpEntry
		{
			string m_Id = "Element.point_levelstream"
			string m_FriendlyName = "point_levelstream"
			string m_TooltipOverride = ""
			string m_HelpText = "A point that indicates a seam to another world level."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_levelstream.StartDisabled"
			string m_FriendlyName = "Start Disabled"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_levelstream.load_radius"
			string m_FriendlyName = "Distance at which target level should stream in"
			string m_TooltipOverride = ""
			string m_HelpText = "If the player is closer than this to point_levelseam, start async loading of the target level."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_levelstream.unload_radius"
			string m_FriendlyName = "Distance after which target level should stream out"
			string m_TooltipOverride = ""
			string m_HelpText = "If the player is farther from the point_levelseam than this then target level will unload."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_levelstream.targetname"
			string m_FriendlyName = "Name"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.point_levelstream.map"
			string m_FriendlyName = "Level to Stream"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.logic_relay.PassthroughCaller"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "If set, this logic_relay will be ignored by !caller in downstream IO connections. Instead, the previous caller in the IO chain will be found by !caller.\n"
		},
		CHelpEntry
		{
			string m_Id = "Element.func_occluder"
			string m_FriendlyName = ""
			string m_TooltipOverride = "func_occluders should be as large as possible.\n"
			string m_HelpText = "A func_occluder occludes objects behind it. It is used for rendering performance optimization. One use case is to put it into a doorway and toggle it based on whether the door is open or not. Note that geometry surrounding the doorway should have occluders as well, otherwise the benefit of the func_occluder is limited.\nfunc_occluders should be as large as possible for best occlusion.\n"
		}
	]
}