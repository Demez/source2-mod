<!-- schema text {7e125a45-3d83-4043-b292-9e24f8ef27b4} generic {198980d8-3a93-4919-b4c6-dd1fb07a3a4b} -->
CHelpData CHelpData_0
{
	CHelpEntry[] m_Entries = 
	[
		CHelpEntry
		{
			string m_Id = "Attribute.C_OP_BasicMovement.m_Gravity"
			string m_FriendlyName = "Gravity"
			string m_TooltipOverride = ""
			string m_HelpText = "Gravitational effect on the particles."
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_RenderTrailsWithRenderSystem"
			string m_FriendlyName = "Render Trails"
			string m_TooltipOverride = ""
			string m_HelpText = "Render sprite trails"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_RenderSpritesWithRenderSystem"
			string m_FriendlyName = "Render Sprites"
			string m_TooltipOverride = ""
			string m_HelpText = "Render sprites"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_RenderRopesWithRenderSystem"
			string m_FriendlyName = "Render Ropes"
			string m_TooltipOverride = ""
			string m_HelpText = "Render ropes"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_RenderGrid"
			string m_FriendlyName = "Render Grid"
			string m_TooltipOverride = ""
			string m_HelpText = "Render particles in a grid (ie. cloth)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_OP_RenderSpritesWithRenderSystem.m_flMaxSize"
			string m_FriendlyName = "Max Visual Size"
			string m_TooltipOverride = ""
			string m_HelpText = "Individual particles will never render larger than this number as a fraction of screen size. (0.5 is 50% of the screen)"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_OP_RenderSpritesWithRenderSystem.m_flMinSize"
			string m_FriendlyName = "Min Visual Size"
			string m_TooltipOverride = ""
			string m_HelpText = "Individual particles will never render smaller than this number as a fraction of screen size. (0.5 is 50% of the screen)"
		},
		CHelpEntry
		{
			string m_Id = "Element.CParticleSystemDefinition"
			string m_FriendlyName = "Base Properties"
			string m_TooltipOverride = ""
			string m_HelpText = "<i>For a general introduction to the particle effect engine and tools, please visit <a href = \"https://developer.valvesoftware.com/wiki/Particle_Editor\">the Valve Developer Community page</a>.</i>\n<p>These are the core properties of the effect. Most of these lie outside the scope of operators, and many define low-level engine settings that are generally left to their default values.</p>\n<p>The properties that will most commonly be modified are:</p>\n<ul>\n<li><b>initial_particles</b>\n<li><b>bounding_box_min</b> and <b>bounding_box_max</b>\n<li>fallback replacement definition\n<li>view model effect\n<li>screen space effect\n<li><b>max_particles</b>\n</ul>\n<p>Additionally, some properties are here to provide a simple mechanism for defining effect defaults which can then be overridden by operators when necessary. These include:</p>\n<ul>\n<li><b>color</b>\n<li><b>radius</b>\n<li><b>rotation</b>\n<li><b>rotation_speed</b>\n<li><b>lifetime</b>\n<li><b>sequence_number</b>\n<li><b>sequence_number 1</b>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_Decay"
			string m_FriendlyName = "Lifespan Decay"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>This enables particles to be destroyed by the effect.</p>\n<p>All effects should have a Decay Operator (usually Lifespan Decay) unless you\'re certain that the particles will get destroyed by some other means (usually code.)</p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.CParticleOperatorInstance.m_Notes"
			string m_FriendlyName = "Operator Help and Notes"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Adding comments to your effects can be useful if there are multiple artists passing files around.</p>\n<p>Sometimes it\'s even helpful to maintain effect documentation for yourself - particularly if you\'ve got a complex or fragile setup that isn\'t self-evident just by looking at the effect. (For example, if you\'re using a lot of non-standard data being passed via CPs from the engine, or if you\'re making heavy use of Operator Fade/Time Offset/Strength Modifiers/Timescale Modifiers.)</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_BasicMovement"
			string m_FriendlyName = "Movement Basic"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Enables basic movement for particles. (\"Basic\" in the sense of <i>fundamental</i> rather than simplistic.)</p>\n<p>It\'s not a bad idea to always add Movement Basic to new effects; if it ends up being spatially static later, you can remove the Operator for a tiny performance gain.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_RenderSprites"
			string m_FriendlyName = "Sprite Renderer"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Renders single- and multiple-frame sprites.</p>\n\n<p>Multi-frame sequences can be animated or used to provide visual variation.</p>\n\n<p>render_sprites is the workhorse renderer, and the one you\'re likely to be using most of the time.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_RenderTrails"
			string m_FriendlyName = "Sprite Trail Renderer"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Trails are sprites with additional built-in behavior that stretches them based on their speed over time.</p>\n<p>Traditional use cases for trails include bullet tracers and sparks. Advanced users may also find them useful when particles need to be oriented in 3D space (a case that regular sprites handle poorly.)</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_RenderRopes"
			string m_FriendlyName = "Rope Renderer"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Ropes (which were named in a simpler time) are sequences of sprites streched across a set of points. Textures intended for use on rope particles are often tiled along one axis so they can be used to create long, thin, curved forms in 3D space.</p>\n<p>Ropes can be difficult to work with, but are surprisingly powerful and versatile.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_CreateWithinSphere"
			string m_FriendlyName = "Position Within Sphere Random"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Randomly spawns a particle within a sphere that\'s centered on the specified control point.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_CreateWithinBox"
			string m_FriendlyName = "Position Within Box Random"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Randomly spawns a particle within the specified volume.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_ContinuousEmitter"
			string m_FriendlyName = "Continuous Emitter"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Emits particles at the specified rate over time. By default, this emitter will continue to emit forever.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_InstantaneousEmitter"
			string m_FriendlyName = "Instantaneous Emitter"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Emits the specified number of particles all at once and never repeats.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_RandomLifeTime"
			string m_FriendlyName = "Lifetime Random"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Defines the lifetime of each particle in seconds, chosen randomly, between <b>lifetime_min</b> and <b>lifetime_max</b>.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_PositionPlaceOnGround"
			string m_FriendlyName = "Position Modify Place On Ground"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>\"Snaps\" each particle to the ground (or a specified offset above the ground.)</p>\n<p>Note that this operator only searches for ground BELOW its current position - if the particle is already below the ground, it won\'t snap to the ground above. If there\'s any doubt, simply add a Position Modify Offset Random initializer above this one in the initializer stack.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_RandomAlpha"
			string m_FriendlyName = "Alpha Random"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Particles will be created with a random alpha value within the specified range (0-255).</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_RandomScalar"
			string m_FriendlyName = "Scalar Random"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Allows any exposed scalar (such as radius, alpha, lifetime, etc.) to be initialized with a random value within the specified range.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_RemapScalar"
			string m_FriendlyName = "Remap Initial Scalar"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Remaps any exposed scalar\'s initial value to any other scalar.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_RemapScalar"
			string m_FriendlyName = "Remap Scalar"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Remaps any exposed scalar\'s value to any other scalar on an ongoing basis.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_FadeInSimple"
			string m_FriendlyName = "Alpha Fade In Simple"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Fades particles in over time.</p>\n<p><b>proportional fade in time</b> is a percentage of the particle\'s lifetime, expressed as a range between 0 and 1. (So a setting of 0.5 on a particle with a 4-second lifetime would take 2 seconds to fade in completely.)</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_FadeOutSimple"
			string m_FriendlyName = "Alpha Fade Out Simple"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Fades particles out over time.</p>\n<p><b>proportional fade out time</b> is a percentage of the particle\'s lifetime, expressed as a range between 0 and 1. (So a setting of 0.25 on a particle with a 4-second lifetime would start fading out 3 seconds after being emitted, and would take 1 second to fade out completely.)</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_AttractToControlPoint"
			string m_FriendlyName = "Pull Towards Control Point"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Pulls particles toward the specified control point.</p>\n<p>Can also be used to repel particles - simply use negative values for <b>amount of force</b>."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.CParticleSystemDefinition.m_nMaxParticles"
			string m_FriendlyName = "Maximum Particles"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>The maximum number of individual particles that can exist at any time for this system. Any attempts to emit additional particles beyond this maximum will fail.</p>\n<p>The particle engine reserves memory for this maximum, so set this as low as you can once you\'ve finished working on your effect.</p>\n<p><em>Note that this setting is specific to <b>this effect</b> - any child effects will use their own <b>max_particles</b> setting.</em></p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.CParticleSystemDefinition.m_flConstantLifespan"
			string m_FriendlyName = "Lifetime"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>The amount of time, in seconds, that each particle will exist before being destroyed.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.CParticleSystemDefinition.m_nInitialParticles"
			string m_FriendlyName = "Initial Particles"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Number of additional particles that should be emitted the moment the effect is created, independent of any emitter operators.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.CParticleSystemDefinition.m_ConstantNormal"
			string m_FriendlyName = "Normal"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Particle <a href=\"https://en.wikipedia.org/wiki/Normal_(geometry)\">normal</a> alignment. Values range between 0 and 1.</p>\n<p>For most effects this should remain unchanged from its default (0,0,1).</p>\n<p>This field is ignored unless the <b>orientation_type</b> property in the effect\'s renderer is set to \"Particle Normal Align\" or \"Screen & Particle Normal Align\".</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_WorldTraceConstraint"
			string m_FriendlyName = "Collision Via Traces"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Allows particles to collide with scene geometry.</p>\n\n<p><b>USE SPARINGLY!</b> Per-particle collision is one of the most expensive effects operations performance-wise. Also, make sure you always replace the <b>collision group</b> property \"NONE\" with \"DEBRIS\"."
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_MaintainEmitter"
			string m_FriendlyName = "Emit to Maintain Count"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Emits particles until it reaches the specified <b>count to maintain</b>, and then stops. Whenever particles are destroyed (by whatever means), the emitter will kick in again to bring the count back up to the max.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_RandomRadius"
			string m_FriendlyName = "Radius Random"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Initializes each particle with a random radius within the specified range.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_RandomColor"
			string m_FriendlyName = "Color Random"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Initializes each particle with a random color within the specified range.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_DistanceCull"
			string m_FriendlyName = "Cull When Crossing Sphere"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Instantly destroys particles when they pass the specified spherical threshold.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_OP_InstantaneousEmitter.m_flStartTime"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "Time at which to begin emitting particles (seconds)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_OP_InstantaneousEmitter.m_nParticlesToEmit"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "Number of particles to emit in a burst."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_OP_InstantaneousEmitter.m_nMinParticlesToEmit"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "<p>The minimum number of particles to emit in a burst. Any value other than -1 will tell the system to randomly emit a number of particles between this value and the num_to_emit value.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_OP_InstantaneousEmitter.m_nMaxEmittedPerFrame"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "<p>The maximum number of particles to emit per frame.</p>\n<p>For example, if the game is running at 30 frames per second and this value is set to 1, then 30 particles will be emitted in one second. Keep in mind that even though the particles are emitted at a different time, they will all die together at the same time. Therefore, if lifetime random is set to 2, then every particle regardless of when it was created will be removed after 2 seconds of the system\'s lifetime.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_OP_ContinuousEmitter.m_flStartTime"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "Time at which to begin emitting particles (seconds)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_OP_ContinuousEmitter.m_flEmitRate"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "Number of particles to spawn (per second)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_OP_ContinuousEmitter.m_flEmissionDuration"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "Length of time to continue emitting particles (seconds)."
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_SequenceLifeTime"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Sets a particle\'s lifespan based on the animation length of the sequence based at the given framerate. Used when a single particle type consists of many sequences with varying sequence lengths (some have 10 frames, others 60, but all must act appropriately without slow framerate, etc.)</p>\n<p><i>Note:</i> If the \'use animation rate as FPS\' flag of Render_Animated_Sprites has the same FPS settings, a particle will map it lifespan and animation together perfectly.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_SequenceLifeTime.m_flFramerate"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "Sets the desired FPS for the animation. This is mapped to lifespan according to the number of frames in the sequence the particle receives via a <b>sequence_random</b> or other sequence-defining initializer."
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_AgeNoise"
			string m_FriendlyName = "Lifetime Pre-Age Noise"
			string m_TooltipOverride = ""
			string m_HelpText = "Treats a particle as if it has already spent part of its lifespan. All operators that test particle lifespan will act appropriately."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_AgeNoise.m_flNoiseScale"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "This sets the scale of the time part of the noise function - based on particle spawn time. Larger numbers will appear increasingly random, while very small numbers will map to a similar area of the noise and look very similar."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_AgeNoise.m_flNoiseScaleLoc"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "This sets the scale of the spatial part of the noise function - based on particle spawn location. Larger numbers will appear increasingly random, while very small numbers will map to a similar area of the noise and look very similar. Time noise is added to spatial noise, so set one or the other to zero in order to receive no effect from that portion of the function."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_AgeNoise.m_vecOffsetLoc"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "This sets the offset on the noise function to draw from. Essentially moves the result of a given spatial input to a different seed."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_AgeNoise.m_bAbsVal"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "Noise returns -1 to 1 which is mapped to the output range. Using absolute value bool (0/1) , the output can have sudden shifts in direction as the number approaches zero and then bounces back into positives instead of going into negatives."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_AgeNoise.m_bAbsValInv"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "Essentially flips the curve created by using the absolute value flag. So instead of getting sharp valleys, you get sharp peaks. The math is 1 minus the absolute value of the noise."
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_MoveBetweenPoints"
			string m_FriendlyName = "Move Particles Between 2 Control Points"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Moves the particles between 2 control points at a value between the minimum and maximum speed. Can be extremely useful for particle tracers, laser sights/beams, and Halo-esque sniper-rifle trails.</p>\n<p><i>Note:</i> Normally, this initializer moves particles to the end control point and leaves them there (i.e., if new particles are created, they will spawn at the end control point and immediately vanish). To get around this, add a \"Position Along Path Sequential\" initializer with start and end control points of 0 ABOVE the \"Move Particles Between 2 Control Points\" entry.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_MoveBetweenPoints.m_flStartOffset"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "Offset of where the particles start relative to the starting control point and direction of movement."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_MoveBetweenPoints.m_flEndOffset"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "The spread of the particles relative to the end control point. Think of this as how spray works with a gun."
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_PositionOffset"
			string m_FriendlyName = "Position Modify Offset Random"
			string m_TooltipOverride = ""
			string m_HelpText = "Moves the initial position of a particle in world or local space relative to its emission point.</p>\n<p>Generally used in combination with other Position initializers. For example, it can be used to emit particles along a line while still using parts of a sphere emitter.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_PositionOffset.m_bLocalCoords"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "This bool (0/1) sets where to use world or local (emitter) space to do the offset."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_PositionOffset.m_bProportional"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "This bool (0/1) sets whether to treat the offset values as an amount relative to the particle\'s radius. For example, if the offset is set to 0 0 1, and two particles have a radii of 32 and 64, they\'d be moved vertically 32 and 64 units respectively."
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_PositionWarp"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Warps the initial position of a particle in world or local space relative to its emission point. Can be used to stretch initial emission shapes. A sphere can be stretched into an ovoid, or smashed.</p>\n<p>Useful in addition to sphere emissions distance bias and absolute value to create squashed domes, rings (the elongated ring seen in Portal), etc. Warped particles\' initial speed is also warped by the corresponding amount. So particles that are stretched will have a higher initial velocity, while those that are squashed will have lower.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_PositionWarp.m_flWarpTime"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "Treats the min/max as start and end sizes for a warp that takes place over the specified time. So the emission placement of each new particle will be warped over time."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_PositionWarp.m_bInvertWarp"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "In the case of a warp transition, it will make it run backwards (max to min)."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_CreateWithinSphere.m_fRadiusMin"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum distance to spawn from the center of the sphere."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_CreateWithinSphere.m_fRadiusMax"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum distance to spawn from the center of the sphere."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_CreateWithinSphere.m_vecDistanceBias"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "A bias to the distribution of particles in the system in X Y Z relative to each axis. 1 1 0 will create particles only in the X Y plane, while 1 1 10 will create roughly 10 times as many particles near the top and bottom of the sphere as on the X Y parts. Useful for creating discs, rings, and polar effects."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_CreateWithinSphere.m_vecDistanceBiasAbs"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "Setting any axis to one will eliminate particles from one hemisphere of the distribution. Can be used to create hemispheres, quarter spheres, etc. Use wil distance bias to alter the effect. Use negative values in distance bias to flip the hemisphere from one side to the other."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_CreateWithinSphere.m_fSpeedMin"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "Minimum initial speed of the particle emitted outward from the sphere."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_CreateWithinSphere.m_fSpeedMax"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "Maximum initial speed of the particle emitted outward from the sphere."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_CreateWithinSphere.m_fSpeedRandExp"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "The exponent which determines the biasing of particles towards one end or the other of the random range."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_CreateWithinSphere.m_LocalCoordinateSystemSpeedMin"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "Local space minimum initial speed of the particle in x y z."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_CreateWithinSphere.m_LocalCoordinateSystemSpeedMax"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "Local space maximum initial speed of the particle in x y z."
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_CreationNoise"
			string m_FriendlyName = "Remap Noise to Scalar"
			string m_TooltipOverride = ""
			string m_HelpText = "Allows any scalar parameter to be initialized to a select range via a noise function. The noise function is mapped based on both time and space, each with their own coordinate scales and offsets. This creates a range of results that are non-random but vary based on creation time and position."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_CreationNoise.m_flNoiseScale"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "This sets the scale of the time part of the noise function - based on particle spawn time. Larger numbers will appear increasingly random, while very small numbers will map to a similar area of the noise and look very similar."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_CreationNoise.m_flNoiseScaleLoc"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "This sets the scale of the spatial part of the noise function - based on particle spawn location. Larger numbers will appear increasingly random, while very small numbers will map to a similar area of the noise and look very similar. Time noise is added to spatial noise, so set one or the other to zero in order to receive no effect from that portion of the function."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_CreationNoise.m_nFieldOutput"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "The scalar to set the initial value on. Radius, Roll, Alpha, Life Duration, etc."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_CreationNoise.m_flOffset"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "This sets the offset on the noise function to draw from. Two initial scalar noise functions set to different outputs (say alpha and radius) set to the same coordinate scales will behave the same. Offsets allow for the same scale mapping, but at a different part of the noise. So for example all small radius particles may have a high alpha rather than a low one if the offset is used."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_CreationNoise.m_vecOffsetLoc"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "This sets the offset on the noise function to draw from. Two initial scalar noise functions set to different outputs (say alpha and radius) set to the same coordinate scales will behave the same. Offsets allow for the same scale mapping, but at a different part of the noise. So for example all small radius particles may have a high alpha rather than a low one if the offset is used."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_CreationNoise.m_bAbsVal"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "Noise returns -1 to 1 which is mapped to the output range. Using absolute value bool (0/1) , the output can have sudden shifts in direction as the number approaches zero and then bounces back into positives instead of going into negatives."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.C_INIT_CreationNoise.m_bAbsValInv"
			string m_FriendlyName = ""
			string m_TooltipOverride = ""
			string m_HelpText = "Essentially flips the curve created by using the absolute value flag. So instead of getting sharp valleys, you get sharp peaks. The math is 1 minus the absolute value of the noise."
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_RandomSequence"
			string m_FriendlyName = "Sequence Random"
			string m_TooltipOverride = ""
			string m_HelpText = "When using a multi-frame texture, this allows particles to randomly start at a minimum and maximum supplied frame."
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_InitialVelocityNoise"
			string m_FriendlyName = "Velocity Noise"
			string m_TooltipOverride = ""
			string m_HelpText = "Allows particle velocity to be initialized to a select range via a noise function. The noise function is mapped based on both time and space, each with their own coordinate scales and offsets. This creates a range of results that are non-random but vary based on creation time and position."
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_PositionLock"
			string m_FriendlyName = "Movement Lock to Control Point"
			string m_TooltipOverride = ""
			string m_HelpText = "Causes particles to inherit the movement (and optionally rotation) of a control point."
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_DampenToCP"
			string m_FriendlyName = "Movement Dampen Relative to Control Point"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Drains a particle\'s internal velocity as it approaches the specified control point. If no other forces are acting on it, the particle will eventually stop.</p>\n<p>This can be used with operator \"Movement Lock to Control Point\" (and its distance fade property) to have a control point \"capture\" particles near it then draw them along. It can also lock endpoints of a line of particles while allowing the middle section to move freely.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_VelocityMatchingForce"
			string m_FriendlyName = "Movement Match Particle Velocities"
			string m_TooltipOverride = ""
			string m_HelpText = "Forces particles to inherit the velocity of the first one emitted. Can copy the recorded value to a control point."
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_InterpolateRadius"
			string m_FriendlyName = "Radius Scale"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Scales particles from the start to end scale over the specified time. Multiple Radius Scale operators can be used in an effect as long as their time coverage doesn\'t overlap.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_SpinUpdate"
			string m_FriendlyName = "Rotation Basic"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>This simply enables rotation through the effect\'s Base Properties (<b>rotation_speed</b>) or through the initializer \"Rotation Speed Random\".</p>\n<p>Particle rotation can also be achieved with the operators \"Rotation Spin Roll\" and \"Rotation Spin Yaw\", which do not require the \"Rotation Basic\" operator.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_RandomRotation"
			string m_FriendlyName = "Rotation Random"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Randomly picks an initial rotation value for each particle within the specified range. The axis is chosen through the <b>rotation field</b> property.</p>\n<p><b><i>NOTE</i></b>: The properties <b>yaw_offset_min</b> and <b>yaw_offset_max</b> are mis-named at the time of this writing. They should instead read \"rotation min\" and \"rotation max\" - these define the range.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.CBaseRendererSource2.m_hTexture"
			string m_FriendlyName = "Texture"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>The source texture to be applied to each particle. Eligible files use the extension *.vtex.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.CParticleSystemDefinition.m_bViewModelEffect"
			string m_FriendlyName = "View Model Effect"
			string m_TooltipOverride = ""
			string m_HelpText = "Used for effects that are attached to player weapons/hands in first-person games."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.CParticleSystemDefinition.m_bScreenSpaceEffect"
			string m_FriendlyName = "Screen Space Effect"
			string m_TooltipOverride = ""
			string m_HelpText = "Tells the effect to render in screen space (on the picture plane) rather than in world space."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.CParticleSystemDefinition.m_flConstantRadius"
			string m_FriendlyName = "Radius"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Radius for each particle, in world units.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.CParticleSystemDefinition.m_ConstantColor"
			string m_FriendlyName = "Color"
			string m_TooltipOverride = ""
			string m_HelpText = "Base color tint for each particle."
		},
		CHelpEntry
		{
			string m_Id = "Element.ParticleChildrenInfo_t"
			string m_FriendlyName = "Child Effect"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Any effect can be a child of any other effect (with the exception of infinitely-recursive hierarchies.)</p>\n<p>Hierarchies are useful for keeping effects organized. They can also promote efficient reuse and modularity of effects. Furthermore, when combined with advanced parent-to-child control point passing, hierarchies become an extremely powerful tool.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ParticleChildrenInfo_t.m_flDelay"
			string m_FriendlyName = "Delay"
			string m_TooltipOverride = ""
			string m_HelpText = "Delay time, in seconds, before the child effect is triggered."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ParticleChildrenInfo_t.m_bEndCap"
			string m_FriendlyName = "End Cap Effect"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>End cap effects are triggered <i>when the parent effect is destroyed</i>.</p>\n<p>So, for example, a projectile effect might have an explosion as its child - when set as an end cap, the explosion will play automatically when the projectile is destroyed (i.e. when it hits its target.)</p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.ParticleChildrenInfo_t.m_bDisableChild"
			string m_FriendlyName = "Disable Child Effect"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>A quick way to hide a child effect without having to remove it completely.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_ConstrainDistance"
			string m_FriendlyName = "Constrain Distance to Control Point"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Locks particles\'s positions to a specified radial range from a control point.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.CParticleOperatorInstance.m_bDisableOperator"
			string m_FriendlyName = "Disable"
			string m_TooltipOverride = ""
			string m_HelpText = "Allows temporary disabling of operators without having to remove them completely."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.CBaseRendererSource2.m_flSelfIllumAmount"
			string m_FriendlyName = "Self-Illumination Amount"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>The degree to which the <i>unlit</i> texture color adds to the lighting calculation.</p>\n<p>The easiest way to think of it is as an ambient lighting value for the particle system. So 0.0 will result in a diffuse lit particle. 0.5 will result in a diffuse lit particle but with an added ambient lighting value of 0.5.</p>\n"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.CBaseRendererSource2.m_bAdditive"
			string m_FriendlyName = "Use Additive Blending"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Toggles whether particles will <a href=\"https://en.wikipedia.org/wiki/Additive_color\">blend additively</a>.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.CBaseRendererSource2.m_flDiffuseAmount"
			string m_FriendlyName = "Diffuse Lighting Amount"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Degree to which particles will receive scene lighting, with 0 being completely unlit (dark).</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_RenderProjected"
			string m_FriendlyName = "Projected Texture Renderer"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Renders projected textures, which are capable of certain behaviors that are otherwise difficult to achieve.</p>\n<p>Take, for example, a large scorch-mark on the ground. If you used a flat sprite (even one oriented to the ground polygon on which it sat), it still wouldn\'t look right if it crossed polygon boundaries that changed angles or elevation. A projected texture, however, will conform to the surfaces upon which it\'s projected.</p>\n<p><i>Note that unlike many other effect renderers, this one takes a VMAT rather than a VTEX. VMATs are authored in the Material Editor, and should be shader type \"Projected Dota\".</i></p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_RenderDeferredLight"
			string m_FriendlyName = "Deferred Light Renderer"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Renders one or more real-time (but not shadow-casting) light sources based on particle positions.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_SetControlPointPositions"
			string m_FriendlyName = "Set Control Point Positions"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Allows the manual positioning of up to four control points.</p>\n<p>If you\'re only setting one CP, consider using \"Set Single Control Point Position\" instead.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_SetSingleControlPointPosition"
			string m_FriendlyName = "Set Single Control Point Position"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Allows the manual positioning of a single control point.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_CreateSequentialPath"
			string m_FriendlyName = "Position Along Path Sequential"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Initializes particle positions sequentially along a line between two control points.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_CreateAlongPath"
			string m_FriendlyName = "Position Along Path Random"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Initializes particle positions randomly along a line between two control points.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_RandomForce"
			string m_FriendlyName = "Random Force"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Generates a random force within the specified range that\'s applied uniformly to all particles within the effect.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_ForceBasedOnDistanceToPlane"
			string m_FriendlyName = "Force Based on Distance from Plane"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Applies a force to each particle based on its distance from a specified plane. (You can think of this as simply remapping a distance to a force range.)</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_CreateInEpitrochoid"
			string m_FriendlyName = "Position Along Epitrochoid"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Initializes particle positions within an <a href=\"https://en.wikipedia.org/wiki/Epitrochoid\">epitrochoid</a>.</p>\n<p>Notably, this position initializer can be used to modify another position initializer if <b>offset from existing position</b> is checked. With the right combination of position initializers and epitrochoid settings, you can achieve positional noise with more coherence than simple random ranges offer.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_RingWave"
			string m_FriendlyName = "Position Along Ring"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Initializes particle positions along a whole or partial ring.</p>\n<p>Like \"Position Within Sphere Random\", this initializer has additional functionality that can impart radial force to particles via <b>min initial speed</b> and <b>max initial speed</b>.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_RemapScalarToVector"
			string m_FriendlyName = "Remap Scalar to Vector"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Upon particle initialization, remap any starting scalar (alpha, radius, etc.) to any starting vector (position, color, etc.)</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_Cull"
			string m_FriendlyName = "Cull Random"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Randomly destroys <b>Cull Percentage</b> of existing particles in the effect between <b>Cull Start Time</b> and <b>Cull End Time</b>.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_SetControlPointToCenter"
			string m_FriendlyName = "Set Control Point to Particles\' Center"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Finds the centroid of all particles in the effect and sets the specified control point to that position.</p>\n<p><i>Note that this takes place on the effect level, rather than per-particle.</i></p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_RemapSpeedToScalar"
			string m_FriendlyName = "Remap Speed to Scalar"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Remaps either a control point\'s speed (effect-level) or each particle\'s speed (particle-level) to a scalar value.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_ColorInterpolate"
			string m_FriendlyName = "Color Fade"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Within the specified time, each particle fades from its color at <b>fade_start_time</b> to <b>color_fade</b>.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_VectorNoise"
			string m_FriendlyName = "Noise Vector"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Remaps a noise function to any exposed vector. The noise function is mapped based on both time and space, each with their own coordinate scales and offsets.</p>\n<p>This creates a range of results that are non-random but vary based on creation time and position.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_Noise"
			string m_FriendlyName = "Noise Scalar"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Remaps a noise function to any exposed scalar. The noise function is mapped based on both time and space, each with their own coordinate scales and offsets.</p>\n<p>This creates a range of results that are non-random but vary based on creation time and position.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_InheritFromParentParticles"
			string m_FriendlyName = "Inherit Attribute from Parent Particle"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Assigns a parent particle\'s attribute to each particle within the system.</p>\n<p>This differs from the initializer \"Inherit Initial Value from Parent Particle\" in that the parent\'s attribute will be inherited every frame in real-time.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_INIT_InheritFromParentParticles"
			string m_FriendlyName = "Inherit Initial Value from Parent Particle"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Assigns a parent particle\'s attribute to each particle\'s initial value for that attribute.</p>\n<p>This differs from the operator \"Inherit Attribute from Parent Particle\" in that it runs only once, on particle initialization.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_ClampScalar"
			string m_FriendlyName = "Clamp Scalar"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Limits the specified scalar\'s value to a range between <b>output minimum</b> and <b>output maximum</b>.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_ClampVector"
			string m_FriendlyName = "Clamp Vector"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Limits the specified vector\'s value to a range between <b>output minimum</b> and <b>output maximum</b>.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_Spin"
			string m_FriendlyName = "Rotation Spin Roll"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Rotates each particle along the \"roll\" axis.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_SpinYaw"
			string m_FriendlyName = "Rotation Spin Yaw"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Rotates each particle along the \"yaw\" axis.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_FadeIn"
			string m_FriendlyName = "Alpha Fade In Random"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Fades particles in over a random period of time within the specified range.</p>\n<p>Unlike \"Alpha Fade In Simple\", this operator has an option to define your range in seconds rather than a percentage of the particle\'s lifespan. To use seconds, simply turn the <b>proportional</b> property off.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_FadeOut"
			string m_FriendlyName = "Alpha Fade Out Random"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Fades particles out over a random period of time within the specified range.</p>\n<p>Unlike \"Alpha Fade Out Simple\", this operator has an option to define your range in seconds rather than a percentage of the particle\'s lifespan. To use seconds, simply turn the <b>proportional</b> property off.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_FadeAndKill"
			string m_FriendlyName = "Alpha Fade and Decay"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Essentially combines the three operators \"Lifespan Decay\", \"Alpha Fade In Simple\", and \"Alpha Fade Out Simple\".</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_PlaneCull"
			string m_FriendlyName = "Cull When Crossing Plane"
			string m_TooltipOverride = ""
			string m_HelpText = "<p>Instantly destroys particles when they pass the specified plane.</p>"
		},
		CHelpEntry
		{
			string m_Id = "Element.C_OP_SetControlPointToImpactPoint"
			string m_FriendlyName = "Set Control Point to Impact Point"
			string m_TooltipOverride = ""
			string m_HelpText = ""
		},
		CHelpEntry
		{
			string m_Id = "Attribute.CParticleOperatorInstance.m_flOpStartFadeInTime"
			string m_FriendlyName = "Operator Fade: Operator Start Fadein"
			string m_TooltipOverride = ""
			string m_HelpText = "<h2>Operator Fade Group</h2>\n<p>The properties of the operator fade group enable you to hand-tune exactly when you want an operator to influence your effect. These are standard properties that work on all operators. Depending on the operator, the fade component may or may not function - binary operators that can\'t logically scale (such as setting control point positions) will ignore fades and simply switch on and off.</p>\n<p>Operator fade times are relative to the <i>emitter lifespan</i>, so an operator that fades in after 3 seconds does so relative to the emitters life, not the individual particle.</p>\n<p>If an oscillation time is set, fade in and fade out times become 0.0 to 1.0 times relative to that oscillation time. If you wish your operator to oscillate in and out, setting an oscillation time of 4, a fade in of .25 and a fade out of .75 would mean that the operator has no effect for 1 second (one quarter the oscillation cycle time), works for 2 seconds (.25-.75), fades back out at 3 (three quarters of the oscillation cycle time), and then the cycle loops at the 4th second back to the start.</p>\n<p><i>Note: The operator fade group is generally considered to be an advanced tool, and is often used only as a last resort in cases where operator-specific control mechanisms are (for whatever reason) proving unsuitable.</i></p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.CParticleOperatorInstance.m_flOpEndFadeInTime"
			string m_FriendlyName = "Operator Fade: Operator End Fadein"
			string m_TooltipOverride = ""
			string m_HelpText = "<h2>Operator Fade Group</h2>\n<p>The properties of the operator fade group enable you to hand-tune exactly when you want an operator to influence your effect. These are standard properties that work on all operators. Depending on the operator, the fade component may or may not function - binary operators that can\'t logically scale (such as setting control point positions) will ignore fades and simply switch on and off.</p>\n<p>Operator fade times are relative to the <i>emitter lifespan</i>, so an operator that fades in after 3 seconds does so relative to the emitters life, not the individual particle.</p>\n<p>If an oscillation time is set, fade in and fade out times become 0.0 to 1.0 times relative to that oscillation time. If you wish your operator to oscillate in and out, setting an oscillation time of 4, a fade in of .25 and a fade out of .75 would mean that the operator has no effect for 1 second (one quarter the oscillation cycle time), works for 2 seconds (.25-.75), fades back out at 3 (three quarters of the oscillation cycle time), and then the cycle loops at the 4th second back to the start.</p>\n<p><i>Note: The operator fade group is generally considered to be an advanced tool, and is often used only as a last resort in cases where operator-specific control mechanisms are (for whatever reason) proving unsuitable.</i></p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.CParticleOperatorInstance.m_flOpStartFadeOutTime"
			string m_FriendlyName = "Operator Fade: Operator Start Fadeout"
			string m_TooltipOverride = ""
			string m_HelpText = "<h2>Operator Fade Group</h2>\n<p>The properties of the operator fade group enable you to hand-tune exactly when you want an operator to influence your effect. These are standard properties that work on all operators. Depending on the operator, the fade component may or may not function - binary operators that can\'t logically scale (such as setting control point positions) will ignore fades and simply switch on and off.</p>\n<p>Operator fade times are relative to the <i>emitter lifespan</i>, so an operator that fades in after 3 seconds does so relative to the emitters life, not the individual particle.</p>\n<p>If an oscillation time is set, fade in and fade out times become 0.0 to 1.0 times relative to that oscillation time. If you wish your operator to oscillate in and out, setting an oscillation time of 4, a fade in of .25 and a fade out of .75 would mean that the operator has no effect for 1 second (one quarter the oscillation cycle time), works for 2 seconds (.25-.75), fades back out at 3 (three quarters of the oscillation cycle time), and then the cycle loops at the 4th second back to the start.</p>\n<p><i>Note: The operator fade group is generally considered to be an advanced tool, and is often used only as a last resort in cases where operator-specific control mechanisms are (for whatever reason) proving unsuitable.</i></p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.CParticleOperatorInstance.m_flOpEndFadeOutTime"
			string m_FriendlyName = "Operator Fade: Operator End Fadeout"
			string m_TooltipOverride = ""
			string m_HelpText = "<h2>Operator Fade Group</h2>\n<p>The properties of the operator fade group enable you to hand-tune exactly when you want an operator to influence your effect. These are standard properties that work on all operators. Depending on the operator, the fade component may or may not function - binary operators that can\'t logically scale (such as setting control point positions) will ignore fades and simply switch on and off.</p>\n<p>Operator fade times are relative to the <i>emitter lifespan</i>, so an operator that fades in after 3 seconds does so relative to the emitters life, not the individual particle.</p>\n<p>If an oscillation time is set, fade in and fade out times become 0.0 to 1.0 times relative to that oscillation time. If you wish your operator to oscillate in and out, setting an oscillation time of 4, a fade in of .25 and a fade out of .75 would mean that the operator has no effect for 1 second (one quarter the oscillation cycle time), works for 2 seconds (.25-.75), fades back out at 3 (three quarters of the oscillation cycle time), and then the cycle loops at the 4th second back to the start.</p>\n<p><i>Note: The operator fade group is generally considered to be an advanced tool, and is often used only as a last resort in cases where operator-specific control mechanisms are (for whatever reason) proving unsuitable.</i></p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.CParticleOperatorInstance.m_flOpFadeOscillatePeriod"
			string m_FriendlyName = "Operator Fade: Operator Fade Oscillate"
			string m_TooltipOverride = ""
			string m_HelpText = "<h2>Operator Fade Group</h2>\n<p>The properties of the operator fade group enable you to hand-tune exactly when you want an operator to influence your effect. These are standard properties that work on all operators. Depending on the operator, the fade component may or may not function - binary operators that can\'t logically scale (such as setting control point positions) will ignore fades and simply switch on and off.</p>\n<p>Operator fade times are relative to the <i>emitter lifespan</i>, so an operator that fades in after 3 seconds does so relative to the emitters life, not the individual particle.</p>\n<p>If an oscillation time is set, fade in and fade out times become 0.0 to 1.0 times relative to that oscillation time. If you wish your operator to oscillate in and out, setting an oscillation time of 4, a fade in of .25 and a fade out of .75 would mean that the operator has no effect for 1 second (one quarter the oscillation cycle time), works for 2 seconds (.25-.75), fades back out at 3 (three quarters of the oscillation cycle time), and then the cycle loops at the 4th second back to the start.</p>\n<p><i>Note: The operator fade group is generally considered to be an advanced tool, and is often used only as a last resort in cases where operator-specific control mechanisms are (for whatever reason) proving unsuitable.</i></p>"
		},
		CHelpEntry
		{
			string m_Id = "Attribute.CParticleSystemDefinition.m_nMinGPULevel"
			string m_FriendlyName = "Minimum GPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = "This property relies on settings in a game config file, and is best left alone."
		},
		CHelpEntry
		{
			string m_Id = "Attribute.CParticleSystemDefinition.m_nMinCPULevel"
			string m_FriendlyName = "Minimum CPU Level"
			string m_TooltipOverride = ""
			string m_HelpText = "This property relies on settings in a game config file, and is best left alone."
		}
	]
}