///////////////////////////////////////////////////////////////////////////////////
// 
// Core
//
//////////////////////////////////////////////////////////////////////////////////

"diagnostic.timed_beeper"
{
	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"interval"
			{
				"data_type" "float"
				"value" "1.0"	
			}
			"pitch"
			{
				"data_type" "float"
				"value" "1.0"	
			}
			"vsnd_files"
			{	
				"data_type" "vsnd"
				"value" "sounds/diagnostics/beep.vsnd"
			}
		}
	}
	"get_event_info"
	{
		"operator" "soundevent_get_info"
	}	
	"interval_timer"
	{
		"operator" "util_interval_timer"
		"input_interval" "@public.interval"
		"input_start" "1.0"	
	}	
// 	"update_test_print_float"
// 	{
// 		"input_execute" "@interval_timer.output_interval_elapsed"
// 		"operator" "util_print_float"
// 		"input" "@interval_timer.output"
// 	}

	"core_start_oneshot"
	{
		"operator" "sos_import_stack"
		"import_stack" "core_start_oneshot"
		"operator_variables"
		{
			"start"
			{
				"value" "@interval_timer.output_interval_not_elapsed"
			}
			"volume_min"
			{
				"value" "1.0"
			}
			"volume_max"
			{
				"value" "1.0"
			}
			"pitch_min"
			{
				"value" "@public.pitch"
			}
			"pitch_max"
			{
				"value" "@public.pitch"
			}
			"vsnd_files"
			{
				"value" "@public.vsnd_files"
			}
		}
	}
	"update_prevent_stop"
	{
		"operator" "soundevent_control"
		"input_execute"  "@get_event_info.output_unstopped"
		"input_add_dependent"  "@get_event_info.output_unstopped"
	}
}

"diagnostic.timed_soundevent"
{
	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"interval"
			{
				"data_type" "float"
				"value" "1.0"	
			}
			"pitch"
			{
				"data_type" "float"
				"value" "1.0"	
			}
			"position"
			{	
				"data_type" "float3"
				"value" "[0.0, 0.0, 0.0]"
			}
			"soundevent"
			{	
				"data_type" "string128"
				"value" "NULLSOUNDEVENT"
			}
		}
	}
	"get_event_info"
	{
		"operator" "soundevent_get_info"
	}	
	"interval_timer"
	{
		"operator" "util_interval_timer"
		"input_interval" "@public.interval"
		"input_start" "1.0"	
	}	
// 	"update_test_print_float"
// 	{
// 		"input_execute" "@interval_timer.output_interval_elapsed"
// 		"operator" "util_print_float"
// 		"input" "@interval_timer.output"
// 	}

	"start_soundevent"
	{
		"operator" "soundevent_start"
		"input_spawn_oneshots" "1.0"
		"input_start" "@interval_timer.output_interval_elapsed"
		"soundevent_name" "@public.soundevent"
	}
	"update_prevent_stop"
	{
		"operator" "soundevent_control"
		"input_execute"  "@get_event_info.output_unstopped"
		"input_add_dependent"  "@get_event_info.output_unstopped"
	}
}

"diagnostics_vsnd_lists"
{
	"bird_variations"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"vsnd_file_selections"
			{	
				"data_type" "uint64"
				"value" "0.0"
			}		
			"vsnd_files"
			{	
				"data_type" "vsnd"
				"value"
				{
					"value" "sounds/diagnostics/ambient/random_amb_sfx/forest_bird01.vsnd"
					"value" "sounds/diagnostics/ambient/random_amb_sfx/forest_bird01b.vsnd"
					"value" "sounds/diagnostics/ambient/random_amb_sfx/forest_bird02.vsnd"
					"value" "sounds/diagnostics/ambient/random_amb_sfx/forest_bird02b.vsnd"
					"value" "sounds/diagnostics/ambient/random_amb_sfx/forest_bird03.vsnd"	
				}
			}
		}
	}
}

"update_test_start_vsnd_rand_oneshot"
{
	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"vsnd_file_selections"
			{	
				"data_type" "uint64"
				"value" "0.0"
			}		
			"vsnd_files"
			{	
				"data_type" "vsnd"
				"soundevent_data" "true"	
//				"reserve_array" "16"	

				"value"
				{
					"value" "sounds/weapons/bullet_impacts/wpn_bullet_impact_dry_zombie_01.vsnd"
					"value" "sounds/weapons/bullet_impacts/wpn_bullet_impact_dry_zombie_02.vsnd"
					"value" "sounds/weapons/bullet_impacts/wpn_bullet_impact_dry_zombie_03.vsnd"
				}
			}

			"delay"
			{	
				"data_type" "float"
				"value" "0.0"
			}
			"memory_type"
			{
				"data_type" "float"
				"value" "0"
			}
		}
	}
	
	"get_event_info"
	{
		"operator" "soundevent_get_info"
	}	
	"get_vsnd_array_index"
	{
		"operator" "opvar_get_random_array_index"
		"check_event_data" "true"
		"input_operator_name"	"public"
		"input_field_name" "vsnd_files"
		"input_selection_field_name" "vsnd_file_selections"
		"input_use_namespace" "false"
		"sequence_type" "random_exclusive"
	}
	"get_vsnd"
	{
		"operator" "opvar_get_vsnd"
		"check_event_data" "true"
		"input_operator_name"	"public"
		"input_field_name" "vsnd_files"
		"input_index" "@get_vsnd_array_index.output"	
		"input_use_namespace" "false"
	}
	
	"update_test_start_vsnd"
	{
		"operator" "sms_start_vsnd"
		"input_vsnd" "@get_vsnd.output"
		"input_start" "@get_event_info.output_unstopped"
		"input_speaker_volumes" "[ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ]"
		"input_pitch" "1.0"
		"input_delay" "@public.delay"
		"input_memory_type" "@public.memory_type"
	}
}
"update_test_start_event_vsnd_rand_oneshot"
{
	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"vsnd_files"
			{	
				"data_type" "vsnd"
				"soundevent_data" "true"
				"value" "sounds/diagnostics/ambient/random_amb_sfx/forest_bird01.vsnd"
			}

			"delay"
			{	
				"data_type" "float"
				"value" "0.0"
			}
			"memory_type"
			{
				"data_type" "float"
				"value" "0"
			}
		}
	}
	
	"get_event_info"
	{
		"operator" "soundevent_get_info"
	}	
	"get_vsnd_array_index"
	{
		"execute_once" "true"
		"operator" "opvar_get_random_array_index"
		"check_event_data" "true"
		"input_operator_name"	"public"
		"input_field_name" "vsnd_files"
//		"input_selection_field_name" "vsnd_file_selections"
		"input_use_namespace" "false"
		"sequence_type" "random_exclusive"
	}
	"get_vsnd"
	{
		"execute_once" "true"
		"operator" "opvar_get_vsnd"
		"check_event_data" "true"
		"input_operator_name"	"public"
		"input_field_name" "vsnd_files"
		"input_index" "@get_vsnd_array_index.output"	
		"input_use_namespace" "false"
	}
	
	"update_test_start_vsnd"
	{
		"operator" "sms_start_vsnd"
		"input_vsnd" "@get_vsnd.output"
		"input_start" "@get_event_info.output_unstopped"
		"input_speaker_volumes" "[ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ]"
		"input_pitch" "1.0"
		"input_delay" "@public.delay"
		"input_memory_type" "@public.memory_type"
	}
}

"update_test_start_stack_vsnd_rand_oneshot"
{
	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"file_list_stack_name"
			{	
				"data_type" "string64"
				"value" ""
			}
			"file_list_operator_name"
			{	
				"data_type" "string64"
				"value" ""
			}
			"file_list_field_name"
			{	
				"data_type" "string64"
				"value" ""
			}
			"selected_list_field_name"
			{	
				"data_type" "string64"
				"value" ""
			}
			"delay"
			{	
				"data_type" "float"
				"value" "0.0"
			}
			"memory_type"
			{
				"data_type" "float"
				"value" "0"
			}
		}
	}
	
	"get_event_info"
	{
		"operator" "soundevent_get_info"
	}	
	"get_vsnd_array_index"
	{
		"operator" "opvar_get_random_array_index"
		"execute_once" "true"	
		"check_event_data" "true"
		"input_stack_name" "@public.file_list_stack_name"
		"input_operator_name"	"@public.file_list_operator_name"
		"input_field_name" "@public.file_list_field_name"
		"input_selection_field_name" "@public.selected_list_field_name"
		"input_use_namespace"		"false"
		"sequence_type" "random_exclusive"	
	}
	"get_vsnd"
	{
		"operator" "opvar_get_vsnd"
		"check_event_data" "true"
		"input_stack_name" "@public.file_list_stack_name"
		"input_operator_name"	"@public.file_list_operator_name"
		"input_field_name" "@public.file_list_field_name"
		"input_use_namespace"		"false"
		"input_index" "@get_vsnd_array_index.output"	
	}		
	"update_test_start_vsnd"
	{
		"operator" "sms_start_vsnd"
		"input_vsnd" "@get_vsnd.output"
		"input_start" "@get_event_info.output_unstopped"
		"input_speaker_volumes" "[ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ]"
		"input_pitch" "1.0"
		"input_delay" "@public.delay"
		"input_memory_type" "@public.memory_type"
	}
}

"update_test_start_vsnd_lfo"
{
	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"test_float"
			{	
				"data_type" "float"
				"value" "111.111"
			}
			"test_floatB"
			{	
				"data_type" "float"
				"value" "666.666"
			}
			"test_float2"
			{	
				"data_type" "float2"
				"value" "[ 111.111, 222.222 ]"
			}
			"test_float3"
			{	
				"data_type" "float3"
				"value" "[ 111.111, 222.222, 333.333 ]"
			}
			"test_float4"
			{	
				"data_type" "float4"
				"value" "[ 111.111, 222.222, 333.333, 444.444 ]"
			}
			"test_string64"
			{	
				"data_type" "string64"
				"value" "string64"
			}
			"test_string128"
			{	
				"data_type" "string128"
				"value" "string128"
			}
			"test_string256"
			{	
				"data_type" "string256"
				"value" "string256"
			}
			"test_float_array"
			{	
				"data_type" "float"
				"value"
				{						
					"value" "1.0"
					"value" "2.0"
					"value" "3.0"
					"value" "4.0"
				}
			}
			"memory_type"
			{
				"data_type" "float"
				"value" "0"
			}
		}
	}

	"get_event_info"
	{
		"operator" "soundevent_get_info"
	}	
	"lfo_time_scale"
	{
		"operator" "math_float"
		"apply" "mult"
		"input1" "@get_event_info.output_elapsed_time"
		"input2" "2"	
	}
	"lfo"
	{
		"operator" "math_func_float"
		"function" "cos"
		"normalize_trig" "false"	
		"input1" "@lfo_time_scale.output"
	}
	"lfo_step"
	{
		"operator" "math_float"
		"apply" "greater_than"	
		"input1" "@lfo.output"
		"input2" "0.0"
	}
	"lfo_pitch_scale"
	{
		"operator" "math_float"
		"apply" "mult"	
		"input1" "@lfo.output"
		"input2" "0.1"
	}
	"lfo_pitch_add"
	{
		"operator" "math_float"
		"apply" "add"	
		"input1" "@lfo_pitch_scale.output"
		"input2" "1.0"
	}
	"lfo_abs"
	{
		"operator" "math_func_float"
		"function" "fabs"	
		"input1" "@lfo.output"
	}
	"speaker_volume_fan"
	{
		"operator" "util_float_to_speakers"
		"input" "@lfo_abs.output"
	}
	"play_or_stop"
	{
		"operator" "math_float"
		"apply" "min"	
		"input1" "@lfo_step.output"
		"input2" "@get_event_info.output_unstopped"
	}
	"update_test_start_vsnd"
	{
		"operator" "sms_start_vsnd"
		"input_vsnd" "sounds/diagnostics/bell.vsnd"
		"input_start" "@play_or_stop.output"
		"input_speaker_volumes" "@speaker_volume_fan.output"
		"input_pitch" "@lfo_pitch_add.output"
		"input_memory_type" "@public.memory_type"
	}
	"update_prevent_stop"
	{
		"operator" "soundevent_control"
		"input_add_dependent"  "@get_event_info.output_unstopped"
	}
}
	
"update_test_opvars"
{

	"test1_stackvars"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"testfloat1"
			{	
				"data_type" "float"
				"value" "1.0"	
			}
		}			
	}
	"test1_getglobal1"
	{
		"operator" "opvar_get_float"
		"input_stack_name" "system_globals"
		"input_operator_name"	"test_opvars"
		"input_field_name" "number_of_local_players"
		"input_use_namespace" "false"

	}
	"test1_getglobal2"
	{
		"operator" "opvar_get_float"
		"input_stack_name" "system_globals"
		"input_operator_name"	"test_opvars"
		"input_field_name" "local_player_origins"	
		"input_use_namespace" "false"

	}
	"test1_value1"
	{
		"operator" "math_float"
		"apply" "add"	
		"input1" "@test1_stackvars.testfloat1"
		"input2" "1"
	}
	"test1_value2"
	{
		"operator" "math_float"
		"apply" "add"	
		"input1" "@test1_value1.output"
		"input2" "1"
	}
}
"update_test_overrides"
{
	"update_test_override_1"
	{
		"operator" "math_float"
		"apply" "mult"
		"input1" "1.0"	
		"input2" "2.0"			
	}
	"update_test_override_2"
	{
		"operator" "math_float"
		"apply" "add"
		"input1" "@update_test_override_1.output"	
		"input2" "4.0"			
	}
	"opvars"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"test_opvar"
			{	
				"data_type" "float"
				"value" "1.0"
				"interp_type" "decibel_atten"	
				"interp_min" "-1.0"
				"interp_max" "1.0"	
			}
			"test_opvar2"
			{	
				"data_type" "float"
				"value" "777.0"	
			}
		}
	}
	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"test_public_float1"
			{	
				"data_type" "float"
				"value" "1.0"
				"interp_type" "decibel_atten"	
				"interp_min" "-1.0"
				"interp_max" "1.0"	
			}
			"test_public_float1"
			{	
				"value" "666.0"	
			}
		}
	}		
}

///////////////////////////////////
// testing public importing
//////////////////////////////////
"update_test_simple_public"
{
	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"public_float"
			{	
				"data_type" "float"
				"value" "777.0"
				"interp_type" "decibel_atten"	
				"interp_min" "-1.0"
				"interp_max" "1.0"	
			}
			"override_float"
			{	
				"data_type" "float"
				"value" "111.0"
			}
		}
	}
	"update_test_simple_public_OPER"
	{
		"operator" "math_float"
		"apply" "add"
		"input1" "@public.public_float"	
		"input2" "4.0"			
	}
	"update_test_get_local_opvar"
	{
		"operator" "opvar_get_float"
		"input_operator_name" "public"
		"input_field_name" "public_float"
		"input_use_namespace" "true"	
	}
	"update_test_get_global_opvar"
	{
		"operator" "opvar_get_float"
		"input_operator_name" "public"
		"input_field_name" "import1_float"	
		"input_use_namespace" "false"	
	}

}

///////////////////////////////////
// testing single import
//////////////////////////////////	
"update_test_simple_import_op"
{
	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"import1_float"
			{	
				"data_type" "float"
				"value" "666.0"
			}
		}
	}
	"update_test_import_1"
	{
		"operator" "math_float"
		"apply" "add"
		"input1" "@public.import1_float"	
		"input2" "4.0"			
	}
	"update_test_import_op"
	{
		"operator" "sos_import_stack"
		"import_stack" "update_test_simple_public"

		"operator_variables"
		{
			"public_float"
			{
				"value" "999"
			}
		}
	}
}

///////////////////////////////////
// testing serial importing
//////////////////////////////////
"update_test_simple_serial_import_op"
{
	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"serial_float"
			{	
				"data_type" "float"
				"value" "222.0"
			}
			"serial_float2"
			{	
				"data_type" "float"
				"value" "333.0"
			}
			"import1_float"
			{	
				"data_type" "float"
				"value" "666.0"
			}
		}
	}
	"update_test_serial_import_op"
	{
		"operator" "sos_import_stack"
		"import_stack" "update_test_simple_public"
		"input_execute" "1.0"	
		"operator_variables"
		{
			"public_float"
			{
				"value" "999"
			}
			"public.override_float"
			{
				"field_override" "public.override_float"
				"value" "888"
			}
			"update_test_simple_public_OPER.input2"
			{
				"field_override" "update_test_simple_public_OPER.input2"
				"value" "@public.serial_float"
			}
		}
	}
	"update_test_serial_import_op2"
	{
		"operator" "sos_import_stack"
		"import_stack" "update_test_simple_public"
		"input_execute" "0.0"	

		"operator_variables"
		{
			"public_float"
			{
				"value" "@public.serial_float2"
			}
		}
	}
}

"update_test_simple_serial_import_op2"
{
	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"serial_float"
			{	
				"data_type" "float"
				"value" "222.0"
			}
		}
	}
	"update_test_serial_import_op"
	{
		"operator" "sos_import_stack"
		"import_stack" "update_test_simple_public"

		"operator_variables"
		{
			"public_float"
			{
				"value" "@public.serial_float"
			}
		}
	}
	"update_test_serial_import_op2"
	{
		"operator" "sos_import_stack"
		"import_stack" "update_test_simple_public"

		"operator_variables"
		{
			"public_float"
			{
				"value" "@update_test_serial_import_op.public_float"
			}
		}
	}
}
///////////////////////////////////
// testing nested importing
//////////////////////////////////
"update_test_simple_nest_import_op1"
{
	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"import1_float"
			{	
				"data_type" "float"
				"value" "111.0"
			}
		}
	}
	"update_test_import_op1"
	{
		"operator" "sos_import_stack"
		"import_stack" "update_test_simple_public"

		"operator_variables"
		{
			"public_float"
			{
				"value" "@public.import1_float"
			}
		}
	}
	"update_test_simple_nest_import_op1_OPER"
	{
		"operator" "math_float"
		"apply" "add"
		"input1" "@public.import1_float"	
		"input2" "4.0"			
	}

}
"update_test_simple_nest_import_op2"
{
	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"import2_float"
			{	
				"data_type" "float"
				"value" "222.0"
			}
		}
	}
	"update_test_import_op2"
	{
		"operator" "sos_import_stack"
		"import_stack" "update_test_simple_nest_import_op1"

		"operator_variables"
		{
			"import1_float"
			{
				"value" "@public.import2_float"
			}
		}
	}
	"update_test_simple_nest_import_op2_OPER"
	{
		"operator" "math_float"
		"apply" "add"
		"input1" "@public.import2_float"	
		"input2" "4.0"			
	}
}
"update_test_simple_nest_import_op3"
{
	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"import3_float"
			{	
				"data_type" "float"
				"value" "333.0"
			}
		}
	}
	"update_test_import_op3"
	{
		"operator" "sos_import_stack"
		"import_stack" "update_test_simple_nest_import_op2"

		"operator_variables"
		{
			"import2_float"
			{
				"value" "@public.import3_float"
			}
		}
	}
	"update_test_simple_nest_import_op3_OPER"
	{
		"operator" "math_float"
		"apply" "add"
		"input1" "@public.import3_float"	
		"input2" "4.0"			
	}

}
"update_test_simple_nest_import_op4"
{
	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"import4_float"
			{	
				"data_type" "float"
				"value" "444.0"
			}
		}
	}
	"update_test_import_op4"
	{
		"operator" "sos_import_stack"
		"import_stack" "update_test_simple_nest_import_op3"

		"operator_variables"
		{
			"import3_float"
			{
				"value" "@public.import4_float"
			}
		}
	}
	"update_test_simple_nest_import_op4_OPER"
	{
		"operator" "math_float"
		"apply" "add"
		"input1" "@public.import4_float"	
		"input2" "4.0"			
	}

}

"update_test_import_op"
{
	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"test_public_float0"
			{	
				"data_type" "float"
				"value" "777.0"
				"interp_type" "decibel_atten"	
				"interp_min" "-1.0"
				"interp_max" "1.0"	
			}
		}
	}
	"update_test_import_1"
	{
		"operator" "math_float"
		"apply" "add"
		"input1" "662"	
		"input2" "4.0"			
	}
	"update_test_import_op"
	{
		"operator" "sos_import_stack"
		"import_stack" "update_test_overrides"

		"operator_variables"
		{
			"test_public_float1"
			{
				"value" "999"
			}
		}
	}

	"update_test_import_op::update_test_override_2"
	{
		"input2" "444.0"			
	}
	"update_test_import_2"
	{
		"operator" "math_float"
		"apply" "add"
		"input1" "@public.test_public_float0"	
		"input2" "@update_test_import_op::update_test_override_2.output"			
		"operator_variables"
		{
			"test_opvar2"
			{	
				"data_type" "float"
				"value" "@public.test_public_float0"
			}
		}
	}
	"update_test_import_op::opvars"
	{
		"operator_variables"
		{
			"test_opvar2"
			{	
				"value" "999"	
			}
		}
	}			
}
	
///////////////////////////////////
// testing individual operators
//////////////////////////////////
"update_test_convar"
{
	"update_test_convar"
	{
		"operator" "convar_get"
		"convar" "snd_op_test_convar"
	}

	"update_test_convar2"
	{
		"operator" "convar_set"
		"execute_once" "true"
		"convar" "snd_musicvolume"
	}
}
"update_test_delta"
{
	"update_test_delta"
	{
		"operator" "math_delta"
	}
}
"update_test_distant_dsp"
{
	"update_test_distant_dsp"
	{
		"operator" "calc_distant_dsp"
	}
}
"update_test_entity_info"
{
	"update_test_distant_dsp"
	{
		"operator" "game_entity_info"
	}
}
"update_test_falloff"
{
	"update_test_falloff"
	{
		"operator" "calc_falloff"
	}
}
"update_test_float_filter"
{
	"update_test_float_filter"
	{
		"operator" "math_filter_float"
	}
}
"update_test_iterate_merge_speakers"
{
	"update_test_iterate_merge_speakers"
	{
		"operator" "iterate_merge_speakers"
	}
}
"update_test_mixer"
{
	"update_test_mixer"
	{
		"operator" "soundmixer_get_mixgroup"
		"mixgroup" "Infected"
	}
}
"update_test_occlusion"
{
	"update_test_occlusion"
	{
		"operator" "calc_occlusion"
	}
}
"update_test_opvar"
{
	"update_test_opvar_null"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"test_float_field"
			{	
				"data_type" "float"
				"value" "666.0"	
			}
		}			

	}

	"update_test_opvar_get"
	{
		"operator" "opvar_get_float"
		"input_stack_name" "system_globals"
		"input_operator_name" "test_opvars"
		"input_field_name" "test_float"
		"input_use_namespace" "false"

	}
	"update_test_opvar_set"
	{
		"input" "666"
		"operator" "opvar_set_float"
		"input_stack_name" "system_globals"
		"input_operator_name" "test_opvars"
		"input_field_name" "test_float"	
	}
	"update_test_opvar_get2"
	{
		"operator" "opvar_get_float"
		"input_stack_name" "system_globals"
		"input_operator_name" "test_opvars"
		"input_field_name" "test_float"
		"input_use_namespace" "false"
	}
	"update_test_opvar_increment"
	{
		"input" "10"
		"operator" "opvar_increment_float"
		"input_stack_name" "system_globals"
		"input_operator_name" "test_opvars"
		"input_field_name" "test_float"	
	}
	"update_test_opvar_get3"
	{
		"operator" "opvar_get_float"
		"input_stack_name" "system_globals"
		"input_operator_name" "test_opvars"
		"input_field_name" "test_float"
		"input_use_namespace" "false"
	}
	"update_test_local_opvar_set"
	{
		"input" "999"
		"operator" "opvar_set_float"
		"input_stack_name" ""
		"input_operator_name" "update_test_opvar_null"
		"input_field_name" "test_float_field"	
		"input_use_namespace" "true"
	}
	"update_test_local_opvar_get"
	{
		"operator" "opvar_get_float"
		"input_stack_name" ""
		"input_operator_name" "update_test_opvar_null"
		"input_field_name" "test_float_field"	
		"input_use_namespace" "true"
	}
	"update_test_parent_opvar_get"
	{
		"operator" "opvar_get_float"
		"input_stack_name" ""
		"input_operator_name" "update_test_opvar_null"
		"input_field_name" "test_float_field"	
		"input_use_namespace" "false"
		"input_get_parent" "true"
	}
}
"update_test_utils"
{
	"update_test_null"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"test_float_field"
			{	
				"data_type" "float"
				"value" "666.0"	
			}
		}			

	}
	"update_test_print_float"
	{
		"operator" "util_print_float"
		"input" "@update_test_null.test_float_field"	
	}
}
"update_test_mixlayer"
{
	"update_test_mixlayer"
	{
		"operator" "soundmixer_set_mixlayer"
		"mixgroup" "All"
		"mixlayer" "All"
		"field" "dsp"	
	}
}
"update_test_math_string"
{
	"update_test_math_string"
	{
		"operator" "math_string64"
		"input1" "test1"
		"input2" "test2"
		"apply" "equal"	
	}
}
"update_test_calc_distance"
{
	"update_test_calc_distance"
	{
		"operator" "calc_distance"
		"input_position1" "[ 110.0, 120.0 ]"
		"input_position2" "[ 0.0, 0.0, 0.0 ]"
	}
}
"update_test_listener_velocity"
{
	"globals"
	{
		"operator" "get_system_globals"
		"input_execute"	"1"
		"input_listener_index" "0"
	}
	"limit_vector_xy"
	{
		"operator" "math_float3"
		"apply" "mult"
		"input1" "@globals.output_listener_position"
		"input2" "[ 1.0, 1.0, 0.0 ]"	
	}
	"listener_velocity"
	{
		"operator" "math_velocity"
		"input_position" "@limit_vector_xy.output"
	}
	"***Velocity:"
	{
		"operator" "util_print_float"
		"input" "@listener_velocity.output_velocity"
	}
	"prevent_stop"
	{
		"operator" "soundevent_control"
		"input_add_dependent"  "1.0"
	}
}
"test_goto_exit"
{
	"dont_exit"
	{
		"operator" "sos_goto"
		"input_execute" "0.0"
		"input_exit" "0.0"
	}
	"***success_didnt_exit:"
	{
		"operator" "util_print_float"
		"input" "0.0"
	}
	"exit"
	{
		"operator" "sos_goto"
		"input_execute" "1.0"
		"input_goto_end" "true"
	}
	"***error_didnt_exit:"
	{
		"operator" "util_print_float"
		"input" "0.0"
	}
}
"test_goto_loop_head"
{

	"if_less_than_3"
	{
		"operator" "math_float"
		"apply" "less_than"
		"input1" "@goto_head.output_goto_count"	
		"input2" "300.0"
	}
	"***success_didnt_exit:"
	{
		"operator" "util_print_float"
		"input" "0.0"
	}
	"goto_head"
	{
		"operator" "sos_goto"
		"input_execute" "@if_less_than_3.output"
		"input_goto_head" "true"
	}
	"***success_DONE:"
	{
		"operator" "util_print_float"
		"input" "0.0"
	}
}

"test_goto_loop_operator"
{

	"***pre_loop"
	{
		"operator" "util_print_float"
		"input" "0.0"
	}
	"if_less_than_3"
	{
		"operator" "math_float"
		"apply" "less_than"
		"input1" "@goto_operator.output_goto_count"	
		"input2" "3.0"
	}
	"***success_didnt_exit:"
	{
		"operator" "util_print_float"
		"input" "0.0"
	}
	"goto_operator"
	{
		"operator" "sos_goto"
		"input_execute" "@if_less_than_3.output"
		"input_goto_operator" "if_less_than_3"
	}
	"***success_DONE:"
	{
		"operator" "util_print_float"
		"input" "0.0"
	}
}

"test_soundevent_limiter_lfo"
{
 	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"max_count"
			{
				"data_type" "float"
				"value" "0.0"
			}
			"match_substring"
			{
				"data_type" "float"
				"value" "0.0"
			}
			"invert_match"
			{
				"data_type" "float"
				"value" "0.0"
			}
		}
	}
	"test_soundevent_limiter_lfo"
	{
		"operator" "soundevent_limiter"
		"match_event_name" "lfo"
		"input_max_events" "@public.max_count"
		"match_substring" "@public.match_substring"
		"invert_match" "@public.invert_match"
	}
}
"test_soundevent_control_lfo_stop_at_time"
{
	"import_stop_at_time"
	{
		"operator" "sos_import_stack"
		"import_stack" "core_stop_at_time"
		"operator_variables"
		{
			"time"
			{
				"value" "4.0"	
			}
		}
	}
	"import_lfo"
	{
		"operator" "sos_import_stack"
		"import_stack" "update_test_start_vsnd_lfo"
	}
}
"test_soundevent_block"
{
 	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"duration"
			{
				"data_type" "float"
				"value" "5.0"
			}
			"match_substring"
			{
				"data_type" "float"
				"value" "1.0"
			}
			"match_event_name"
			{
				"data_type" "string64"
				"value" "lfo"
			}
		}
	}
	"test_soundevent_block"
	{
		"operator" "soundevent_set_block"
		"input_duration" "@public.duration"
		"match_substring" "@public.match_substring"
		"match_event_name" "@public.match_event_name"
	}
}
"test_soundevent_start_oneshot"
{
 	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"duration"
			{
				"data_type" "float"
				"value" "5.0"
			}
		}
	}
	"test_soundevent_start"
	{
		"operator" "soundevent_start"
		"input_start" "1.0"	
		"soundevent_name" "Diagnostic.core_start_simple_oneshot"
	}
}
"test_soundevent_start_lfo"
{
 	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"time"
			{
				"data_type" "float"
				"value" "8.0"	
			}
		}
	}
	"get_event_info"
	{
		"operator" "soundevent_get_info"
	}	
	"stop_time"
	{
		"operator" "math_float"
		"apply" "greater_than"
		"input2" "@get_event_info.output_elapsed_time"
		"input1" "@public.time"
	}
	"test_soundevent_start"
	{
		"operator" "soundevent_start"
		"input_start" "@stop_time.output"	
		"soundevent_name" "Diagnostic.test_stop_soundevents_lfo_at_time"
	}
}
"test_soundevent_start_opvar_get_parent"
{
 	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"duration"
			{
				"data_type" "float"
				"value" "5.0"
			}
		}
	}
 	"update_test_opvar_null"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"test_float_field"
			{
				"data_type" "float"
				"value" "5555.0"
			}
		}
	}

	"test_soundevent_start"
	{
		"operator" "soundevent_start"
		"input_start" "1.0"	
		"soundevent_name" "Diagnostic.update_test_opvar"
	}
}

"test_get_parent_space"
{
	
	"update_test_get_parent_5"
	{
		"operator" "opvar_get_float"
		"input_stack_name" ""
		"input_operator_name" "public"
		"input_field_name" "test_float"	
		"input_use_namespace" "true"
		"input_get_parent" "true"
	}
	"update_test_get_parent_space_NNNN"
	{
		"operator" "opvar_get_float"
		"input_stack_name" ""
		"input_operator_name" "public"
		"input_field_name" "test_float"
		"input_use_namespace" "true"
		"input_get_parent" "true"
	}
	"update_test_get_parent_5555"
	{
		"operator" "opvar_get_float"
		"input_stack_name" ""
		"input_operator_name" "update_test_opvar_null"
		"input_field_name" "test_float_field"
		"input_use_namespace" "true"
		"input_get_parent" "true"
	}
	"update_test_get_parent_6666"
	{
		"operator" "opvar_get_float"
		"input_stack_name" ""
		"input_operator_name" "update_test_opvar_null"
		"input_field_name" "test_float_field"
		"input_use_namespace" "false"
		"input_get_parent" "true"
	}
}

"test_soundevent_start_opvar_get_parent_space"
{
 	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"test_float"
			{
				"data_type" "float"
				"value" "5.0"
			}
		}
	}
 	"update_test_opvar_null"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"test_float_field"
			{
				"data_type" "float"
				"value" "5555.0"
			}
		}
	}

	"test_soundevent_start_A"
	{
		"operator" "soundevent_start"
		"input_start" "1.0"	
		"soundevent_name" "Diagnostic.test_get_parent_space"
	}
}
"test_import_get_parent_space"
{

 	"update_test_opvar_null"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"test_float_field"
			{
				"data_type" "float"
				"value" "6666.0"
			}
		}
	}

	"get_parent_space_9999"
	{
		"operator" "sos_import_stack"
		"import_stack" "test_soundevent_start_opvar_get_parent_space"
		"operator_variables"
		{
			"test_float"
			{
				"value" "9999.0"	
			}
		}
	}
	"get_parent_space_4444"
	{
		"operator" "sos_import_stack"
		"import_stack" "test_soundevent_start_opvar_get_parent_space"
		"operator_variables"
		{
			"test_float"
			{
				"value" "4444.0"	
			}
		}
	}
}

"test_random_multiple"
{

 	"update_test_rand1"
	{
		"operator" "math_random_float"
		"input_seed" "-1.0"	
	}
 	"update_test_rand2"
	{
		"operator" "math_random_float"
		"input_seed" "-1.0"	
	}
 	"update_test_rand3"
	{
		"operator" "math_random_float"
		"input_seed" "-1.0"	
	}
}

"test_import_random_multiple"
{
	"import_rand1"
	{
		"operator" "sos_import_stack"
		"import_stack" "test_random_multiple"
	}
	"import_rand2"
	{
		"operator" "sos_import_stack"
		"import_stack" "test_random_multiple"
	}
}

"test_soundevent_start_random_multiple"
{
	"test_soundevent_start"
	{
		"operator" "soundevent_start"
		"input_start" "1.0"	
		"soundevent_name" "Diagnostic.test_random_multiple"
		"input_use_parent_seed" "1.0"	
	}
	"test_soundevent_start2"
	{
		"operator" "soundevent_start"
		"input_start" "1.0"	
		"soundevent_name" "Diagnostic.test_random_multiple"
		"input_use_parent_seed" "1.0"	
	}
}


"test_beep_on_track"
{
	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"track"
			{
				"data_type" "string64"
				"value" "default_track"
			}
			"priority"
			{
				"data_type" "float"
				"value" "0.0"
			}
			"priority_override"
			{
				"data_type" "float"
				"value" "0.0"
			}
			"block_equal_priority"
			{
				"data_type" "float"
				"value" "0.0"
			}
			"pitch"
			{
				"data_type" "float"
				"value" "1.0"
			}
		}
	}
	"test_soundevent_start"
	{
		"operator" "track_queue"
		"input_track_name" "@public.track"
		"priority_override" "@public.priority_override"
		"block_equal_priority" "@public.block_equal_priority"
		"input_priority" "@public.priority"
	}
	"beeper"
	{
		"operator" "sos_import_stack"
		"import_stack" "diagnostic.timed_beeper"
		"operator_variables"
		{
			"pitch"
			{
				"value" "@public.pitch"	
			}
		}
	}
}

"test_vsnd_on_track"
{
	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"track"
			{
				"data_type" "string64"
				"value" "default_track"
			}
			"priority"
			{
				"data_type" "float"
				"value" "0.0"
			}
			"priority_override"
			{
				"data_type" "float"
				"value" "0.0"
			}
			"block_equal_priority"
			{
				"data_type" "float"
				"value" "0.0"
			}
			"pitch"
			{
				"data_type" "float"
				"value" "1.0"
			}
			"vsnd_files"
			{	
				"data_type" "vsnd"
				"soundevent_data" "true"
//				"reserve_array" "16"
				"value" "sounds/common/null.vsnd"
			}
		}
	}
	"test_soundevent_start"
	{
		"operator" "track_queue"
		"input_track_name" "@public.track"
		"priority_override" "@public.priority_override"
		"block_equal_priority" "@public.block_equal_priority"
		"input_priority" "@public.priority"
	}

	"update_test_start_vsnd_rand_oneshot"
	{
		"operator" "sos_import_stack"
		"import_stack" "update_test_start_vsnd_rand_oneshot"

		"operator_variables"
		{
			"vsnd_files" 
			{	
				"value" "@public.vsnd_files"
			}
		}
	}
}

	
"test_stop_track"
{
	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"track"
			{
				"data_type" "string64"
				"value" "default_track"
			}
		}
	}
	"stop_track"
	{
		"operator" "track_stop"
		"input_track_name" "@public.track"
	}
}

"diagnostics.core_simple_vr"
{
	"public"
	{
		"operator" "util_null"
		"operator_variables"
		{
			"volume"
			{	
				"data_type" "float"
				"value" "1.0"	
			}
			"pitch"
			{	
				"data_type" "float"
				"value" "1.0"	
			}
			"distance_min"
			{	
				"data_type" "float"
				"value" "24"	
			}
			"distance_max"
			{	
				"data_type" "float"
				"value" "360"	
			}
			"position"
			{	
				"data_type" "float3"
				"value" "[0.0, 0.0, 0.0]"
			}
			"vsnd_files"
			{	
				"data_type" "vsnd"
				"soundevent_data" "true"
				"value"
				{
					"value0" "sounds/common/null.vsnd"
				}
			}
			"delay"
			{	
				"data_type" "float"
				"value" "0.0"	
			}
			"memory_type"
			{
				"data_type" "float"
				"value" "0"
			}
		}
	}

	///////////////////////////////////////////////////////////////
	// time
	"get_event_info"
	{
		"operator" "soundevent_get_info"
	}

	"globals"
	{
		"operator" "get_system_globals"
		"input_execute"	"1"
		"input_listener_index" "0"
	}

	//////////////////////
	// positions
	"source_info"
	{
		"operator" "game_get_source_info"
		"source"   "entity"
	}
	"get_entity_info"
	{
		"operator" "game_entity_info"
		"input_entity_index" "@source_info.output_entity_index"
		// if valid entity, but we can't get enitty position, output this position
		"input_default_world_position" "@public.position"
		// if not an entity, write this position
		"input_default_local_position" "@globals.output_listener_front"
	}
	"distance_to_source"
	{
		"operator" "calc_distance"
		"input_position1" "@get_entity_info.output_position"
		"input_position2" "@globals.output_listener_position"
	}


///////////////////////////////////////////////////////////////
// src2 todo : needs channel
	"get_vsnd_array_index"
	{
		"operator" "opvar_get_random_array_index"
		"execute_once" "true"	
		"check_event_data" "true"
		"input_operator_name"	"public"
		"input_field_name" "vsnd_files"
		"input_selection_field_name" "vsnd_file_selections"
		"sequence_type" "random"
		"input_use_namespace" "false"
	}
	"get_vsnd"
	{
		"operator" "opvar_get_vsnd"
		"execute_once" "true"	
		"check_event_data" "true"
		"input_operator_name" "public"
		"input_field_name" "vsnd_files"
		"input_index" "@get_vsnd_array_index.output"
		"input_use_namespace" "false"
	}

	/////////////////////
	// VOLUME
	"volume_linear_falloff"
	{
		"operator" "math_remap_float"
		"input"  "@distance_to_source.output"
		"input_min" "@public.distance_min"
		"input_max" "@public.distance_max"
		"input_map_min" "1.0"
		"input_map_max" "0.0"
	}

    // multiply all volume adjustments together
	"volume_accumulate"
	{
		"operator" "math_accumulate12_float"
		"apply"	"mult"
		"input1" "@public.volume"
		"input2" "@volume_linear_falloff.output"
//		"input3" "@mixer.output_volume"
		"input3" "1.0"
		"input4" "@globals.output_snd_gain_convar"
//		"input5" "@occlusion.output"
		"input5" "1.0"
		"input6" "1.0"
		"input7" "1.0"
		"input8" "1.0"
		"input9" "1.0"
		"input10" "1.0"
		"input11" "1.0"
		"input12" "1.0"
	}

	/////////////////////
	// SPEAKERS

	// NOTE: uses player data, ie: SS, calculates all players and merges them
	"vr_spatialize"
	{
		"operator" "calc_spatialize_vr"
		"input_master_volume" "@volume_accumulate.output"
//		"input_radius"  "300"
		"input_distance"  "@distance_to_source.output"
		"input_source_position"  "@get_entity_info.output_position"
		"input_listener_position"  "@globals.output_listener_position"
		"input_listener_left"  "@globals.output_listener_left"
		"input_listener_forward"  "@globals.output_listener_forward"
		"input_listener_up"  "@globals.output_listener_up"
//		"input_rear_stereo_scale" "1.0"
	}

	"start_vsnd"
	{
		"operator" "sms_start_vsnd"
		"input_vsnd" "@get_vsnd.output"
		"execute_once" "false"
		"input_execute" "1.0"
		"input_start" "@get_event_info.output_unstopped"
		"input_speaker_volumes" "@vr_spatialize.output"
		"input_pitch" "@public.pitch"
		"input_delay" "@public.delay"
		"input_memory_type" "@public.memory_type"
		"operator_variables"
		{
			"send_room_dsp"
			{	
				"data_type" "float"
				"value" "0.0"
			}
		}
	}
}
